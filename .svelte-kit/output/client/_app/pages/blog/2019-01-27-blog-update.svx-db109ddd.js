import{S as t,i as a,s as e,A as o,j as i,m as s,o as n,p as r,v as d,r as h,w as l,q as p,e as c,t as f,k as m,c as g,a as y,g as u,d as w,n as b,b as k,f as v,E as I}from"../../chunks/vendor-f5a3c274.js";import{M as A}from"../../chunks/_mdsvex-0fbf9182.js";import"../../chunks/stores-0da78aa4.js";import"../../chunks/FormattedDate-b4a44e35.js";function E(t){let a,e,o,i,s,n,r,d,h,l,p,A,E,x,P,M,j,$,S,D,R,G,q,F,T,H,W,z,L,B,N,Q,U,C,J,O,Z,_,K,V,X,Y,tt,at,et,ot,it,st,nt,rt,dt,ht,lt,pt,ct,ft,mt,gt,yt,ut,wt,bt,kt;return{c(){a=c("h2"),e=c("a"),o=f("From a static site to a webapp."),i=m(),s=c("p"),n=f("A little over a year ago I moved from a (static) Middleman hosted blog to a project called "),r=c("a"),d=f("Daybreakers"),h=f(". A Rails API + React App that was focused on creating a platform where you can create “travel blogs”. The idea behind it was that it’s kind of annoying to create a good looking “photoset” app on a static site platform. As they all dance around the issue on what to do with the photo’s."),l=m(),p=c("p"),A=f("Most static site generators are meant for blogpost, where the main content is text and not images. Since most people commit their content to Git(Hub), there’s also a limit on how many photo’s you can add on your blog."),E=m(),x=c("p"),P=f("Then there’s the issue of hosting, Netlify for example doesn’t like to host a ton of photo’s. And having a ton of photo’s in your static site project doesn’t make the build times any faster."),M=m(),j=c("p"),$=f("My blog consisted of many photosets, tallying up to around 6 Gigabyte of photos, a nightmare to have in version control and to build a static site with."),S=m(),D=c("h2"),R=c("a"),G=f("To maintain a webapp."),q=m(),F=c("p"),T=f("As is usual with a new project, in the beginning progress was fast and I quickly had a simple app that granted all my wishes. A nice UI to create photosets, a 3rd party that took care of resizing photo’s on the fly in great quality and within a few weeks I had transferred over all my posts to this new platform."),H=m(),W=c("p"),z=f("But then the attention dropped, as it was doing everything I wanted, and every time I tried to add a new feature I had to make changes in the Rails models, the GraphQL API and in the frontend, making it quite tedious to work on."),L=m(),B=c("p"),N=f("After not really touching it for nearly a year, packages started to get outdated and GitHub was notifying me of security issues."),Q=m(),U=c("p"),C=f("Finally there was the monthly bill to run this entire setup, hosting and the 3rd party costs for storing the photos and the dynamic resize were adding up quickly."),J=m(),O=c("p"),Z=f("So while this platform did everything I wanted and was a joy to use on trips to create new photosets, it was too costly and too complex to continue, so I made the switch back to Middleman"),_=m(),K=c("h2"),V=c("a"),X=f("From a webapp back to a static site."),Y=m(),tt=c("p"),at=f("I learned a lot from creating Daybreakers and a most of it has gone into this Middleman project, for example resizing is done automatically with AWS Lambda, every time a photo is added to an S3 bucket."),et=m(),ot=c("p"),it=f("I’ve also created my own custom markdown extension that adds modifies the standard markdown output regarding images, so my photo’s are automatically added to a "),st=c("code"),nt=f("<figure>"),rt=f(" tag with all kinds of responsive features."),dt=m(),ht=c("p"),lt=f("The Daybreakers React frontend did a lot of magic to get the best image for a certain space in the layout, and I managed to replicate most of it with CSS and FlexBox and a sniff of Javascript."),pt=m(),ct=c("p"),ft=f("While Daybreakers was really fast (the frontend was hosted on Netlify) it wasn’t pre-rendered and with a React App that meant that none of the pages could be indexed. It also took a couple of hundred of milliseconds to get the GraphQL and render it into a page. With this Middleman app it’s back to a few milliseconds for a page load."),mt=m(),gt=c("h3"),yt=c("a"),ut=f("Was it worth it?"),wt=m(),bt=c("p"),kt=f("I’m not sure yet how I’ll handle creating a photoset while traveling, as I’m back from a really simple drag-and-drop UI to editing Markdown by hand, but realistically this only happens a few days a year and still takes up a lot less time than to maintain Daybreakers."),this.h()},l(t){a=g(t,"H2",{id:!0});var c=y(a);e=g(c,"A",{href:!0});var f=y(e);o=u(f,"From a static site to a webapp."),f.forEach(w),c.forEach(w),i=b(t),s=g(t,"P",{});var m=y(s);n=u(m,"A little over a year ago I moved from a (static) Middleman hosted blog to a project called "),r=g(m,"A",{href:!0,rel:!0});var k=y(r);d=u(k,"Daybreakers"),k.forEach(w),h=u(m,". A Rails API + React App that was focused on creating a platform where you can create “travel blogs”. The idea behind it was that it’s kind of annoying to create a good looking “photoset” app on a static site platform. As they all dance around the issue on what to do with the photo’s."),m.forEach(w),l=b(t),p=g(t,"P",{});var v=y(p);A=u(v,"Most static site generators are meant for blogpost, where the main content is text and not images. Since most people commit their content to Git(Hub), there’s also a limit on how many photo’s you can add on your blog."),v.forEach(w),E=b(t),x=g(t,"P",{});var I=y(x);P=u(I,"Then there’s the issue of hosting, Netlify for example doesn’t like to host a ton of photo’s. And having a ton of photo’s in your static site project doesn’t make the build times any faster."),I.forEach(w),M=b(t),j=g(t,"P",{});var vt=y(j);$=u(vt,"My blog consisted of many photosets, tallying up to around 6 Gigabyte of photos, a nightmare to have in version control and to build a static site with."),vt.forEach(w),S=b(t),D=g(t,"H2",{id:!0});var It=y(D);R=g(It,"A",{href:!0});var At=y(R);G=u(At,"To maintain a webapp."),At.forEach(w),It.forEach(w),q=b(t),F=g(t,"P",{});var Et=y(F);T=u(Et,"As is usual with a new project, in the beginning progress was fast and I quickly had a simple app that granted all my wishes. A nice UI to create photosets, a 3rd party that took care of resizing photo’s on the fly in great quality and within a few weeks I had transferred over all my posts to this new platform."),Et.forEach(w),H=b(t),W=g(t,"P",{});var xt=y(W);z=u(xt,"But then the attention dropped, as it was doing everything I wanted, and every time I tried to add a new feature I had to make changes in the Rails models, the GraphQL API and in the frontend, making it quite tedious to work on."),xt.forEach(w),L=b(t),B=g(t,"P",{});var Pt=y(B);N=u(Pt,"After not really touching it for nearly a year, packages started to get outdated and GitHub was notifying me of security issues."),Pt.forEach(w),Q=b(t),U=g(t,"P",{});var Mt=y(U);C=u(Mt,"Finally there was the monthly bill to run this entire setup, hosting and the 3rd party costs for storing the photos and the dynamic resize were adding up quickly."),Mt.forEach(w),J=b(t),O=g(t,"P",{});var jt=y(O);Z=u(jt,"So while this platform did everything I wanted and was a joy to use on trips to create new photosets, it was too costly and too complex to continue, so I made the switch back to Middleman"),jt.forEach(w),_=b(t),K=g(t,"H2",{id:!0});var $t=y(K);V=g($t,"A",{href:!0});var St=y(V);X=u(St,"From a webapp back to a static site."),St.forEach(w),$t.forEach(w),Y=b(t),tt=g(t,"P",{});var Dt=y(tt);at=u(Dt,"I learned a lot from creating Daybreakers and a most of it has gone into this Middleman project, for example resizing is done automatically with AWS Lambda, every time a photo is added to an S3 bucket."),Dt.forEach(w),et=b(t),ot=g(t,"P",{});var Rt=y(ot);it=u(Rt,"I’ve also created my own custom markdown extension that adds modifies the standard markdown output regarding images, so my photo’s are automatically added to a "),st=g(Rt,"CODE",{});var Gt=y(st);nt=u(Gt,"<figure>"),Gt.forEach(w),rt=u(Rt," tag with all kinds of responsive features."),Rt.forEach(w),dt=b(t),ht=g(t,"P",{});var qt=y(ht);lt=u(qt,"The Daybreakers React frontend did a lot of magic to get the best image for a certain space in the layout, and I managed to replicate most of it with CSS and FlexBox and a sniff of Javascript."),qt.forEach(w),pt=b(t),ct=g(t,"P",{});var Ft=y(ct);ft=u(Ft,"While Daybreakers was really fast (the frontend was hosted on Netlify) it wasn’t pre-rendered and with a React App that meant that none of the pages could be indexed. It also took a couple of hundred of milliseconds to get the GraphQL and render it into a page. With this Middleman app it’s back to a few milliseconds for a page load."),Ft.forEach(w),mt=b(t),gt=g(t,"H3",{id:!0});var Tt=y(gt);yt=g(Tt,"A",{href:!0});var Ht=y(yt);ut=u(Ht,"Was it worth it?"),Ht.forEach(w),Tt.forEach(w),wt=b(t),bt=g(t,"P",{});var Wt=y(bt);kt=u(Wt,"I’m not sure yet how I’ll handle creating a photoset while traveling, as I’m back from a really simple drag-and-drop UI to editing Markdown by hand, but realistically this only happens a few days a year and still takes up a lot less time than to maintain Daybreakers."),Wt.forEach(w),this.h()},h(){k(e,"href","#from-a-static-site-to-a-webapp"),k(a,"id","from-a-static-site-to-a-webapp"),k(r,"href","https://github.com/daybreakers-co"),k(r,"rel","nofollow"),k(R,"href","#to-maintain-a-webapp"),k(D,"id","to-maintain-a-webapp"),k(V,"href","#from-a-webapp-back-to-a-static-site"),k(K,"id","from-a-webapp-back-to-a-static-site"),k(yt,"href","#was-it-worth-it"),k(gt,"id","was-it-worth-it")},m(t,c){v(t,a,c),I(a,e),I(e,o),v(t,i,c),v(t,s,c),I(s,n),I(s,r),I(r,d),I(s,h),v(t,l,c),v(t,p,c),I(p,A),v(t,E,c),v(t,x,c),I(x,P),v(t,M,c),v(t,j,c),I(j,$),v(t,S,c),v(t,D,c),I(D,R),I(R,G),v(t,q,c),v(t,F,c),I(F,T),v(t,H,c),v(t,W,c),I(W,z),v(t,L,c),v(t,B,c),I(B,N),v(t,Q,c),v(t,U,c),I(U,C),v(t,J,c),v(t,O,c),I(O,Z),v(t,_,c),v(t,K,c),I(K,V),I(V,X),v(t,Y,c),v(t,tt,c),I(tt,at),v(t,et,c),v(t,ot,c),I(ot,it),I(ot,st),I(st,nt),I(ot,rt),v(t,dt,c),v(t,ht,c),I(ht,lt),v(t,pt,c),v(t,ct,c),I(ct,ft),v(t,mt,c),v(t,gt,c),I(gt,yt),I(yt,ut),v(t,wt,c),v(t,bt,c),I(bt,kt)},d(t){t&&w(a),t&&w(i),t&&w(s),t&&w(l),t&&w(p),t&&w(E),t&&w(x),t&&w(M),t&&w(j),t&&w(S),t&&w(D),t&&w(q),t&&w(F),t&&w(H),t&&w(W),t&&w(L),t&&w(B),t&&w(Q),t&&w(U),t&&w(J),t&&w(O),t&&w(_),t&&w(K),t&&w(Y),t&&w(tt),t&&w(et),t&&w(ot),t&&w(dt),t&&w(ht),t&&w(pt),t&&w(ct),t&&w(mt),t&&w(gt),t&&w(wt),t&&w(bt)}}}function x(t){let a,e;const c=[P];let f={$$slots:{default:[E]},$$scope:{ctx:t}};for(let i=0;i<c.length;i+=1)f=o(f,c[i]);return a=new A({props:f}),{c(){i(a.$$.fragment)},l(t){s(a.$$.fragment,t)},m(t,o){n(a,t,o),e=!0},p(t,[e]){const o=0&e?r(c,[p(P)]):{};1&e&&(o.$$scope={dirty:e,ctx:t}),a.$set(o)},i(t){e||(d(a.$$.fragment,t),e=!0)},o(t){h(a.$$.fragment,t),e=!1},d(t){l(a,t)}}}const P={title:"Blog update: from dynamic app to a static site",date:"2019-01-27T00:00:00.000Z",tags:null,summary:"Moving (again) from Rails API + React to a static Middleman"};export default class extends t{constructor(t){super(),a(this,t,null,x,e,{})}}export{P as metadata};
