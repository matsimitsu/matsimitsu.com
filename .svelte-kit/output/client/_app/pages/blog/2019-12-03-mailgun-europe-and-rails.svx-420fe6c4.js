import{S as a,i as n,s,A as e,j as o,m as t,o as r,p as i,v as p,r as l,w as c,q as u,e as h,t as g,k as m,c as d,a as f,g as k,d as y,n as E,b as v,f as w,E as b,G as M}from"../../chunks/vendor-f5a3c274.js";import{M as A}from"../../chunks/_mdsvex-0fbf9182.js";import"../../chunks/stores-0da78aa4.js";import"../../chunks/FormattedDate-b4a44e35.js";function P(a){let n,s,e,o,t,r,i,p,l,c,u,A,P,_,I,O,N,x,D,$,R,C,U,Y,T,F,H,L,G,j,V,W,S,q,K,Z,z,B,J,Q,X,aa,na,sa,ea,oa,ta,ra,ia,pa,la,ca,ua,ha,ga,ma,da,fa,ka,ya,Ea,va,wa,ba,Ma,Aa,Pa,_a,Ia,Oa,Na,xa,Da,$a,Ra,Ca,Ua,Ya,Ta,Fa,Ha,La,Ga,ja,Va,Wa,Sa,qa;return{c(){n=h("p"),s=g("You’d think this isn’t worth a blogpost, since Mailgun has a "),e=h("a"),o=g("dedicated "),t=h("code"),r=g("mailgun-ruby"),i=g(" gem"),p=g(" for sending emails and it integrates well with Rails’s ActionMailer. However when setting this up last night a couple of errors were thrown my way that took some time to resolve."),l=m(),c=h("h2"),u=h("a"),A=g("Mailgun::ParseError (765: unexpected token at ‘Mailgun Magnificent API’)"),P=m(),_=h("p"),I=g("First, when setting up a new Mailgun domain, it will ask you what language you’re using and shows an API key and a URL to use for sending emails."),O=m(),N=h("p"),x=g("In Rails the ActionMailer config in "),D=h("code"),$=g("config/environments/production.rb"),R=g(" looks like this:"),C=m(),U=h("pre"),Y=m(),T=h("p"),F=g("If you enter the full url from the Mailgun page in the "),H=h("code"),L=g("domain"),G=g(" field, Mailgun will return a "),j=h("code"),V=g("Mailgun::ParseError (765: unexpected token at 'Mailgun Magnificent API')"),W=g(" error. You have to change the "),S=h("code"),q=g("domain"),K=g(" to your sending domain (e.g. "),Z=h("code"),z=g("mg.matsimitsu.com"),B=g(")."),J=m(),Q=h("h2"),X=h("a"),aa=g("Mailgun API response 404 (NOT FOUND)"),na=m(),sa=h("p"),ea=g("Second if you selected Europe as the region for your new domain, and you fixed the issue above, you’ll get a new error along the lines of "),oa=h("code"),ta=g("Mailgun API response 404 (NOT FOUND)"),ra=g("."),ia=m(),pa=h("p"),la=g("What’s happening is that the API can’t find your credentials/domain, since it’s hosted in another region."),ca=m(),ua=h("p"),ha=g("Now the Gem documentation doesn’t mention this (yet, "),ga=h("a"),ma=g("multiple"),da=m(),fa=h("a"),ka=g("pulls"),ya=m(),Ea=h("a"),va=g("have"),wa=m(),ba=h("a"),Ma=g("been"),Aa=g(" made, but somehow none have been merged yet)."),Pa=m(),_a=h("p"),Ia=g("You have to specify a 3rd parameter to the ActionMailer config, "),Oa=h("code"),Na=g("api_url"),xa=g(" that points to the Europe region API."),Da=m(),$a=h("p"),Ra=g("Your "),Ca=h("code"),Ua=g("config/environments/production.rb"),Ya=g(" should contain something like:"),Ta=m(),Fa=h("pre"),Ha=m(),La=h("p"),Ga=g("And of course we use ENV vars in production:"),ja=m(),Va=h("pre"),Wa=m(),Sa=h("p"),qa=g("With these two fixes applied and deployed, emails were flowing again \\o/."),this.h()},l(a){n=d(a,"P",{});var h=f(n);s=k(h,"You’d think this isn’t worth a blogpost, since Mailgun has a "),e=d(h,"A",{href:!0,rel:!0});var g=f(e);o=k(g,"dedicated "),t=d(g,"CODE",{});var m=f(t);r=k(m,"mailgun-ruby"),m.forEach(y),i=k(g," gem"),g.forEach(y),p=k(h," for sending emails and it integrates well with Rails’s ActionMailer. However when setting this up last night a couple of errors were thrown my way that took some time to resolve."),h.forEach(y),l=E(a),c=d(a,"H2",{id:!0});var v=f(c);u=d(v,"A",{href:!0});var w=f(u);A=k(w,"Mailgun::ParseError (765: unexpected token at ‘Mailgun Magnificent API’)"),w.forEach(y),v.forEach(y),P=E(a),_=d(a,"P",{});var b=f(_);I=k(b,"First, when setting up a new Mailgun domain, it will ask you what language you’re using and shows an API key and a URL to use for sending emails."),b.forEach(y),O=E(a),N=d(a,"P",{});var M=f(N);x=k(M,"In Rails the ActionMailer config in "),D=d(M,"CODE",{});var Ka=f(D);$=k(Ka,"config/environments/production.rb"),Ka.forEach(y),R=k(M," looks like this:"),M.forEach(y),C=E(a),U=d(a,"PRE",{class:!0}),f(U).forEach(y),Y=E(a),T=d(a,"P",{});var Za=f(T);F=k(Za,"If you enter the full url from the Mailgun page in the "),H=d(Za,"CODE",{});var za=f(H);L=k(za,"domain"),za.forEach(y),G=k(Za," field, Mailgun will return a "),j=d(Za,"CODE",{});var Ba=f(j);V=k(Ba,"Mailgun::ParseError (765: unexpected token at 'Mailgun Magnificent API')"),Ba.forEach(y),W=k(Za," error. You have to change the "),S=d(Za,"CODE",{});var Ja=f(S);q=k(Ja,"domain"),Ja.forEach(y),K=k(Za," to your sending domain (e.g. "),Z=d(Za,"CODE",{});var Qa=f(Z);z=k(Qa,"mg.matsimitsu.com"),Qa.forEach(y),B=k(Za,")."),Za.forEach(y),J=E(a),Q=d(a,"H2",{id:!0});var Xa=f(Q);X=d(Xa,"A",{href:!0});var an=f(X);aa=k(an,"Mailgun API response 404 (NOT FOUND)"),an.forEach(y),Xa.forEach(y),na=E(a),sa=d(a,"P",{});var nn=f(sa);ea=k(nn,"Second if you selected Europe as the region for your new domain, and you fixed the issue above, you’ll get a new error along the lines of "),oa=d(nn,"CODE",{});var sn=f(oa);ta=k(sn,"Mailgun API response 404 (NOT FOUND)"),sn.forEach(y),ra=k(nn,"."),nn.forEach(y),ia=E(a),pa=d(a,"P",{});var en=f(pa);la=k(en,"What’s happening is that the API can’t find your credentials/domain, since it’s hosted in another region."),en.forEach(y),ca=E(a),ua=d(a,"P",{});var on=f(ua);ha=k(on,"Now the Gem documentation doesn’t mention this (yet, "),ga=d(on,"A",{href:!0,rel:!0});var tn=f(ga);ma=k(tn,"multiple"),tn.forEach(y),da=E(on),fa=d(on,"A",{href:!0,rel:!0});var rn=f(fa);ka=k(rn,"pulls"),rn.forEach(y),ya=E(on),Ea=d(on,"A",{href:!0,rel:!0});var pn=f(Ea);va=k(pn,"have"),pn.forEach(y),wa=E(on),ba=d(on,"A",{href:!0,rel:!0});var ln=f(ba);Ma=k(ln,"been"),ln.forEach(y),Aa=k(on," made, but somehow none have been merged yet)."),on.forEach(y),Pa=E(a),_a=d(a,"P",{});var cn=f(_a);Ia=k(cn,"You have to specify a 3rd parameter to the ActionMailer config, "),Oa=d(cn,"CODE",{});var un=f(Oa);Na=k(un,"api_url"),un.forEach(y),xa=k(cn," that points to the Europe region API."),cn.forEach(y),Da=E(a),$a=d(a,"P",{});var hn=f($a);Ra=k(hn,"Your "),Ca=d(hn,"CODE",{});var gn=f(Ca);Ua=k(gn,"config/environments/production.rb"),gn.forEach(y),Ya=k(hn," should contain something like:"),hn.forEach(y),Ta=E(a),Fa=d(a,"PRE",{class:!0}),f(Fa).forEach(y),Ha=E(a),La=d(a,"P",{});var mn=f(La);Ga=k(mn,"And of course we use ENV vars in production:"),mn.forEach(y),ja=E(a),Va=d(a,"PRE",{class:!0}),f(Va).forEach(y),Wa=E(a),Sa=d(a,"P",{});var dn=f(Sa);qa=k(dn,"With these two fixes applied and deployed, emails were flowing again \\o/."),dn.forEach(y),this.h()},h(){v(e,"href","https://github.com/mailgun/mailgun-ruby"),v(e,"rel","nofollow"),v(u,"href","#mailgunparseerror-765-unexpected-token-at-mailgun-magnificent-api"),v(c,"id","mailgunparseerror-765-unexpected-token-at-mailgun-magnificent-api"),v(U,"class","language-ruby"),v(X,"href","#mailgun-api-response-404-not-found"),v(Q,"id","mailgun-api-response-404-not-found"),v(ga,"href","https://github.com/mailgun/mailgun-ruby/pull/175"),v(ga,"rel","nofollow"),v(fa,"href","https://github.com/mailgun/mailgun-ruby/pull/174"),v(fa,"rel","nofollow"),v(Ea,"href","https://github.com/mailgun/mailgun-ruby/pull/170"),v(Ea,"rel","nofollow"),v(ba,"href","https://github.com/mailgun/mailgun-ruby/pull/163"),v(ba,"rel","nofollow"),v(Fa,"class","language-ruby"),v(Va,"class","language-ruby")},m(a,h){w(a,n,h),b(n,s),b(n,e),b(e,o),b(e,t),b(t,r),b(e,i),b(n,p),w(a,l,h),w(a,c,h),b(c,u),b(u,A),w(a,P,h),w(a,_,h),b(_,I),w(a,O,h),w(a,N,h),b(N,x),b(N,D),b(D,$),b(N,R),w(a,C,h),w(a,U,h),U.innerHTML='<code class="language-ruby">  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>mailgun_settings <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n    <span class="token symbol">:api_key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>your_api_key<span class="token operator">></span><span class="token punctuation">,</span>\n    <span class="token symbol">:domain</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>your_domain<span class="token operator">></span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span></code>',w(a,Y,h),w(a,T,h),b(T,F),b(T,H),b(H,L),b(T,G),b(T,j),b(j,V),b(T,W),b(T,S),b(S,q),b(T,K),b(T,Z),b(Z,z),b(T,B),w(a,J,h),w(a,Q,h),b(Q,X),b(X,aa),w(a,na,h),w(a,sa,h),b(sa,ea),b(sa,oa),b(oa,ta),b(sa,ra),w(a,ia,h),w(a,pa,h),b(pa,la),w(a,ca,h),w(a,ua,h),b(ua,ha),b(ua,ga),b(ga,ma),b(ua,da),b(ua,fa),b(fa,ka),b(ua,ya),b(ua,Ea),b(Ea,va),b(ua,wa),b(ua,ba),b(ba,Ma),b(ua,Aa),w(a,Pa,h),w(a,_a,h),b(_a,Ia),b(_a,Oa),b(Oa,Na),b(_a,xa),w(a,Da,h),w(a,$a,h),b($a,Ra),b($a,Ca),b(Ca,Ua),b($a,Ya),w(a,Ta,h),w(a,Fa,h),Fa.innerHTML='<code class="language-ruby">  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>delivery_method <span class="token operator">=</span> <span class="token symbol">:mailgun</span>\n  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>mailgun_settings <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n    <span class="token symbol">:api_key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>your_api_key<span class="token operator">></span><span class="token punctuation">,</span>\n    <span class="token symbol">:domain</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>your_domain<span class="token operator">></span><span class="token punctuation">,</span> <span class="token comment"># e.g. mg.matsimitsu.com</span>\n    <span class="token symbol">:api_host</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"api.eu.mailgun.net"</span>\n  <span class="token punctuation">&#125;</span></code>',w(a,Ha,h),w(a,La,h),b(La,Ga),w(a,ja,h),w(a,Va,h),Va.innerHTML='<code class="language-ruby">  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>delivery_method <span class="token operator">=</span> <span class="token symbol">:mailgun</span>\n  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>mailgun_settings <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n    <span class="token symbol">:api_key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"MAILGUN_API_KEY"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token symbol">:domain</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"MAILGUN_DOMAIN"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token symbol">:api_host</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"api.eu.mailgun.net"</span>\n  <span class="token punctuation">&#125;</span></code>',w(a,Wa,h),w(a,Sa,h),b(Sa,qa)},p:M,d(a){a&&y(n),a&&y(l),a&&y(c),a&&y(P),a&&y(_),a&&y(O),a&&y(N),a&&y(C),a&&y(U),a&&y(Y),a&&y(T),a&&y(J),a&&y(Q),a&&y(na),a&&y(sa),a&&y(ia),a&&y(pa),a&&y(ca),a&&y(ua),a&&y(Pa),a&&y(_a),a&&y(Da),a&&y($a),a&&y(Ta),a&&y(Fa),a&&y(Ha),a&&y(La),a&&y(ja),a&&y(Va),a&&y(Wa),a&&y(Sa)}}}function _(a){let n,s;const h=[I];let g={$$slots:{default:[P]},$$scope:{ctx:a}};for(let o=0;o<h.length;o+=1)g=e(g,h[o]);return n=new A({props:g}),{c(){o(n.$$.fragment)},l(a){t(n.$$.fragment,a)},m(a,e){r(n,a,e),s=!0},p(a,[s]){const e=0&s?i(h,[u(I)]):{};1&s&&(e.$$scope={dirty:s,ctx:a}),n.$set(e)},i(a){s||(p(n.$$.fragment,a),s=!0)},o(a){l(n.$$.fragment,a),s=!1},d(a){c(n,a)}}}const I={title:"Using MailGun Europe with Rails’s ActionMailer.",date:"2019-12-03T00:00:00.000Z",summary:"If you like to use Mailgun's Europe region you need some undocumented settings in the ActionMailer integration to get emails out."};export default class extends a{constructor(a){super(),n(this,a,null,_,s,{})}}export{I as metadata};
