import{S as a,i as s,s as n,A as t,j as e,m as o,o as p,p as c,v as l,r,w as i,q as u,e as h,t as k,k as d,c as g,a as f,g as m,d as y,n as b,b as w,f as E,E as v,G as C}from"../../chunks/vendor-f5a3c274.js";import{M as R}from"../../chunks/_mdsvex-0fbf9182.js";import"../../chunks/stores-0da78aa4.js";import"../../chunks/FormattedDate-b4a44e35.js";function P(a){let s,n,t,e,o,p,c,l,r,i,u,R,P,T,$,j,x,A,O,S,H,M,D,F,L,W,q,I,U,_,z,Y,G,Z,B,J,K,N,Q,V,X,aa,sa,na,ta;return{c(){s=h("p"),n=k("Upload a file to a pre-signed url with Rest-Client."),t=d(),e=h("p"),o=k("You’d think that’s an easy task, just call:"),p=d(),c=h("pre"),l=d(),r=h("p"),i=k("And call it a day, but this will leave you with cryptic error messages such as:"),u=d(),R=h("pre"),P=d(),T=h("p"),$=k("There are two things we need to change, first is that Amazon taks the term "),j=h("code"),x=k("putObject"),A=k(" very literal, upload a file with the "),O=h("code"),S=k("POST"),H=k(" method will generate the error above."),M=d(),D=h("pre"),F=d(),L=h("p"),W=k("Changing the method to put will clear the cryptic signature error, but you’ll notice that any file uploaded will be corrupt. This because RestClient uploads the file as "),q=h("code"),I=k("multipart/form-data"),U=k(", which is not recognised as a binary file by AWS."),_=d(),z=h("p"),Y=k("To fix this provide a "),G=h("code"),Z=k("content-type"),B=k(" header to RestClient, for example."),J=d(),K=h("pre"),N=d(),Q=h("p"),V=k("In my case I was uploading images and this worked for me:"),X=d(),aa=h("pre"),sa=d(),na=h("p"),ta=k("Hopefully this will save someone else an hour of debugging AWS request signature calculations :)"),this.h()},l(a){s=g(a,"P",{});var h=f(s);n=m(h,"Upload a file to a pre-signed url with Rest-Client."),h.forEach(y),t=b(a),e=g(a,"P",{});var k=f(e);o=m(k,"You’d think that’s an easy task, just call:"),k.forEach(y),p=b(a),c=g(a,"PRE",{class:!0}),f(c).forEach(y),l=b(a),r=g(a,"P",{});var d=f(r);i=m(d,"And call it a day, but this will leave you with cryptic error messages such as:"),d.forEach(y),u=b(a),R=g(a,"PRE",{class:!0}),f(R).forEach(y),P=b(a),T=g(a,"P",{});var w=f(T);$=m(w,"There are two things we need to change, first is that Amazon taks the term "),j=g(w,"CODE",{});var E=f(j);x=m(E,"putObject"),E.forEach(y),A=m(w," very literal, upload a file with the "),O=g(w,"CODE",{});var v=f(O);S=m(v,"POST"),v.forEach(y),H=m(w," method will generate the error above."),w.forEach(y),M=b(a),D=g(a,"PRE",{class:!0}),f(D).forEach(y),F=b(a),L=g(a,"P",{});var C=f(L);W=m(C,"Changing the method to put will clear the cryptic signature error, but you’ll notice that any file uploaded will be corrupt. This because RestClient uploads the file as "),q=g(C,"CODE",{});var ea=f(q);I=m(ea,"multipart/form-data"),ea.forEach(y),U=m(C,", which is not recognised as a binary file by AWS."),C.forEach(y),_=b(a),z=g(a,"P",{});var oa=f(z);Y=m(oa,"To fix this provide a "),G=g(oa,"CODE",{});var pa=f(G);Z=m(pa,"content-type"),pa.forEach(y),B=m(oa," header to RestClient, for example."),oa.forEach(y),J=b(a),K=g(a,"PRE",{class:!0}),f(K).forEach(y),N=b(a),Q=g(a,"P",{});var ca=f(Q);V=m(ca,"In my case I was uploading images and this worked for me:"),ca.forEach(y),X=b(a),aa=g(a,"PRE",{class:!0}),f(aa).forEach(y),sa=b(a),na=g(a,"P",{});var la=f(na);ta=m(la,"Hopefully this will save someone else an hour of debugging AWS request signature calculations :)"),la.forEach(y),this.h()},h(){w(c,"class","language-ruby"),w(R,"class","language-null"),w(D,"class","language-ruby"),w(K,"class","language-ruby"),w(aa,"class","language-ruby")},m(a,h){E(a,s,h),v(s,n),E(a,t,h),E(a,e,h),v(e,o),E(a,p,h),E(a,c,h),c.innerHTML='<code class="language-ruby"><span class="token constant">RestClient</span><span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>',E(a,l,h),E(a,r,h),v(r,i),E(a,u,h),E(a,R,h),R.innerHTML='<code class="language-null">The request signature we calculated does not match the signature you provided.\nCheck your key and signing method.</code>',E(a,P,h),E(a,T,h),v(T,$),v(T,j),v(j,x),v(T,A),v(T,O),v(O,S),v(T,H),E(a,M,h),E(a,D,h),D.innerHTML='<code class="language-ruby"><span class="token constant">RestClient</span><span class="token punctuation">.</span>put<span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>',E(a,F,h),E(a,L,h),v(L,W),v(L,q),v(q,I),v(L,U),E(a,_,h),E(a,z,h),v(z,Y),v(z,G),v(G,Z),v(z,B),E(a,J,h),E(a,K,h),K.innerHTML='<code class="language-ruby">  <span class="token constant">RestClient</span><span class="token punctuation">.</span>put<span class="token punctuation">(</span>\n    url<span class="token punctuation">,</span>\n    <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token symbol">:headers</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span><span class="token symbol">:content_type</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"application/octet-stream"</span><span class="token punctuation">&#125;</span>\n  <span class="token punctuation">)</span></code>',E(a,N,h),E(a,Q,h),v(Q,V),E(a,X,h),E(a,aa,h),aa.innerHTML='<code class="language-ruby">  <span class="token constant">RestClient</span><span class="token punctuation">.</span>put<span class="token punctuation">(</span>\n    url<span class="token punctuation">,</span>\n    <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token symbol">:headers</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span><span class="token symbol">:content_type</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"image/jpeg"</span><span class="token punctuation">&#125;</span>\n  <span class="token punctuation">)</span></code>',E(a,sa,h),E(a,na,h),v(na,ta)},p:C,d(a){a&&y(s),a&&y(t),a&&y(e),a&&y(p),a&&y(c),a&&y(l),a&&y(r),a&&y(u),a&&y(R),a&&y(P),a&&y(T),a&&y(M),a&&y(D),a&&y(F),a&&y(L),a&&y(_),a&&y(z),a&&y(J),a&&y(K),a&&y(N),a&&y(Q),a&&y(X),a&&y(aa),a&&y(sa),a&&y(na)}}}function T(a){let s,n;const h=[$];let k={$$slots:{default:[P]},$$scope:{ctx:a}};for(let e=0;e<h.length;e+=1)k=t(k,h[e]);return s=new R({props:k}),{c(){e(s.$$.fragment)},l(a){o(s.$$.fragment,a)},m(a,t){p(s,a,t),n=!0},p(a,[n]){const t=0&n?c(h,[u($)]):{};1&n&&(t.$$scope={dirty:n,ctx:a}),s.$set(t)},i(a){n||(l(s.$$.fragment,a),n=!0)},o(a){r(s.$$.fragment,a),n=!1},d(a){i(s,a)}}}const $={title:"Upload a file to an AWS pre-signed S3 url with RestClient.",date:"2020-08-28T00:00:00.000Z",summary:"Or, how something so simple cost me so much time."};export default class extends a{constructor(a){super(),s(this,a,null,T,n,{})}}export{$ as metadata};
