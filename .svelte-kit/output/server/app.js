import {respond} from "@sveltejs/kit/ssr";
import {create_ssr_component, validate_component, missing_component, escape, add_attribute, each, subscribe, null_to_empty} from "svelte/internal";
import {setContext, afterUpdate, onMount, createEventDispatcher, getContext} from "svelte";
import {geoNaturalEarth1, geoPath} from "d3-geo";
import * as topojson from "topojson-client";
import {tweened} from "svelte/motion";
import {cubicOut} from "svelte/easing";
var root_svelte_svelte_type_style_lang = "#svelte-announcer.svelte-1y31lbn{position:absolute;left:0;top:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}";
const css$4 = {
  code: "#svelte-announcer.svelte-1y31lbn{position:absolute;left:0;top:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\texport let props_3 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n</script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}>\\n\\t\\t\\t\\t\\t{#if components[3]}\\n\\t\\t\\t\\t\\t\\t<svelte:component this={components[3]} {...(props_3 || {})}/>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</svelte:component>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>#svelte-announcer{position:absolute;left:0;top:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}</style>"],"names":[],"mappings":"AA0DO,gCAAiB,CAAC,SAAS,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,MAAM,GAAG,CAAC,CAAC,UAAU,MAAM,GAAG,CAAC,CAAC,SAAS,MAAM,CAAC,YAAY,MAAM,CAAC,MAAM,GAAG,CAAC,OAAO,GAAG,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {stores} = $$props;
  let {page: page2} = $$props;
  let {components} = $$props;
  let {props_0 = null} = $$props;
  let {props_1 = null} = $$props;
  let {props_2 = null} = $$props;
  let {props_3 = null} = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  let mounted = false;
  let navigated = false;
  let title = null;
  onMount(() => {
    const unsubscribe = stores.page.subscribe(() => {
      if (mounted) {
        navigated = true;
        title = document.title || "untitled page";
      }
    });
    mounted = true;
    return unsubscribe;
  });
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
    $$bindings.page(page2);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  if ($$props.props_3 === void 0 && $$bindings.props_3 && props_3 !== void 0)
    $$bindings.props_3(props_3);
  $$result.css.add(css$4);
  {
    stores.page.set(page2);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {
        default: () => `${components[3] ? `${validate_component(components[3] || missing_component, "svelte:component").$$render($$result, Object.assign(props_3 || {}), {}, {})}` : ``}`
      })}` : ``}`
    })}` : ``}`
  })}

${mounted ? `<div id="${"svelte-announcer"}" aria-live="${"assertive"}" aria-atomic="${"true"}" class="${"svelte-1y31lbn"}">${navigated ? `${escape(title)}` : ``}</div>` : ``}`;
});
function set_paths(paths) {
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
const template = ({head, body}) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n		<link rel="icon" href="/favicon.ico" />\n		' + head + '\n	</head>\n	<body>\n		<div id="svelte" class="dark:bg-gray-900 m-0 p-0 min-h-screen transition-colors duration-300">\n			' + body + "\n		</div>\n	</body>\n</html>\n";
let options = null;
function init(settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: "/./_app/start-4ae04fa4.js",
      css: ["/./_app/assets/start-b97461fb.css"],
      js: ["/./_app/start-4ae04fa4.js", "/./_app/chunks/vendor-f5a3c274.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => "/./_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2) => {
      console.error(error2.stack);
      error2.stack = options.get_stack(error2);
    },
    hooks: get_hooks(user_hooks),
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    read: settings.read,
    root: Root,
    router: true,
    ssr: true,
    target: "#svelte",
    template,
    trailing_slash: "never"
  };
}
const empty = () => ({});
const manifest = {
  assets: [{"file": "favicon.ico", "size": 1150, "type": "image/vnd.microsoft.icon"}, {"file": "robots.txt", "size": 67, "type": "text/plain"}],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/about\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/about.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/feeds\/notes\.xml$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return notes_xml;
      })
    },
    {
      type: "endpoint",
      pattern: /^\/feeds\/trips\.xml$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return trips_xml;
      })
    },
    {
      type: "endpoint",
      pattern: /^\/feeds\/blog\.xml$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return blog_xml;
      })
    },
    {
      type: "endpoint",
      pattern: /^\/notes\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$2;
      })
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-11-04-firecracker-salmon-and-cauliflower-rice\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-11-04-firecracker-salmon-and-cauliflower-rice.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-08-27-Boundary-Supply-Prima-system-support\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-08-27-Boundary-Supply-Prima-system-support.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-08-31-Getting-better-with-the-Drone\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-08-31-Getting-better-with-the-Drone.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-08-22--A-Taxi-Driver-Korean-\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-08-22--A-Taxi-Driver-Korean-.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-09-02-The-Rhine-River\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-09-02-The-Rhine-River.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-08-22-Bought-a-drone\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-08-22-Bought-a-drone.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-08-22-Awesome-Sites\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-08-22-Awesome-Sites.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-08-28-Webmentions\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-08-28-Webmentions.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-11-23-Fall-Leaves\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-11-23-Fall-Leaves.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-12-05-wild-horses\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-12-05-wild-horses.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2021-01-07-still-human\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2021-01-07-still-human.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-08-29-Rainy-days\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-08-29-Rainy-days.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-11-29-utrecht\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-11-29-utrecht.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2021-01-10-street\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2021-01-10-street.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-08-25-Minio\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-08-25-Minio.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/2020-11-24-Fall\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes/__layout.svelte", "src/routes/notes/2020-11-24-Fall.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/notes\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/notes.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/trips\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json$1;
      })
    },
    {
      type: "page",
      pattern: /^\/trips\/egypt-2009\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/egypt-2009/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/trips\/posts\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return posts_json;
      })
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2011\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2011/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2011\/day-twenty-twenty-eight\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2011/day-twenty-twenty-eight/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2011\/day-eighteen-nineteen\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2011/day-eighteen-nineteen/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2011\/day-sixteen-seventeen\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2011/day-sixteen-seventeen/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2011\/day-twelve-fifteen\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2011/day-twelve-fifteen/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2011\/day-nine-eleven\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2011/day-nine-eleven/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2011\/day-one-six\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2011/day-one-six/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2011\/day-eight\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2011/day-eight/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2011\/day-seven\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2011/day-seven/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2012\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2012/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2012\/day-one-seven\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2012/day-one-seven.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/usa-2012\/day-eight\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips/__layout.svelte", "src/routes/trips/usa-2012/day-eight.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/trips\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/trips.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/blog\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json;
      })
    },
    {
      type: "page",
      pattern: /^\/blog\/2021-04-20-remote-uploads-with-pre-signed-urls-on-scaleway-object-storage\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2021-04-20-remote-uploads-with-pre-signed-urls-on-scaleway-object-storage.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2019-04-23-extending-existing-functionality-in-rust-with-traits-in-rust\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2019-04-23-extending-existing-functionality-in-rust-with-traits-in-rust.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2020-08-17-identifying-and-resolving-a-kafka-issue-with-appsignal\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2020-08-17-identifying-and-resolving-a-kafka-issue-with-appsignal.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2018-12-04-dont-be-mean-statistical-means-and-percentiles-101\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2018-12-04-dont-be-mean-statistical-means-and-percentiles-101.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2014-03-31-mongodb-mongoid-and-sideiq-connection-problems\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2014-03-31-mongodb-mongoid-and-sideiq-connection-problems.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2019-03-09-resize-images-from-s3-with-aws-lambda-and-rust\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2019-03-09-resize-images-from-s3-with-aws-lambda-and-rust.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2020-08-28-upload-to-presigned-aws-url-with-rest-client\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2020-08-28-upload-to-presigned-aws-url-with-rest-client.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2019-02-12-replica-set-lag-monitoring-with-appsignal\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2019-02-12-replica-set-lag-monitoring-with-appsignal.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2011-05-21-how-to-control-an-rc-car-with-an-arduino\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2011-05-21-how-to-control-an-rc-car-with-an-arduino.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2016-07-04-monitor-mongodb-load-with-custom-metrics\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2016-07-04-monitor-mongodb-load-with-custom-metrics.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2020-08-27-iawriter-micropub-netlify-static-site\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2020-08-27-iawriter-micropub-netlify-static-site.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2017-11-13-track-cache-hits-with-custom-metrics\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2017-11-13-track-cache-hits-with-custom-metrics.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2014-01-07-realtime-mongodb-with-aggregations\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2014-01-07-realtime-mongodb-with-aggregations.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2018-06-10-apollo-query-batching-and-graphql\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2018-06-10-apollo-query-batching-and-graphql.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2019-10-12-3d-printed-plant-watering-system\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2019-10-12-3d-printed-plant-watering-system.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2011-12-04-a-trakt-tv-siri-proxy-plugin\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2011-12-04-a-trakt-tv-siri-proxy-plugin.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2013-07-30-taming-mongodb-disk-usage\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2013-07-30-taming-mongodb-disk-usage.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2018-07-03-custom-exceptions-in-ruby\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2018-07-03-custom-exceptions-in-ruby.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2018-10-23-the-innards-of-a-ruby-gem\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2018-10-23-the-innards-of-a-ruby-gem.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2013-06-13-reducing-mongodb-queries\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2013-06-13-reducing-mongodb-queries.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2019-02-14-dropzone-app-stimulus-js\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2019-02-14-dropzone-app-stimulus-js.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2019-12-03-mailgun-europe-and-rails\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2019-12-03-mailgun-europe-and-rails.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2018-04-08-fix-rx100-startup-issue\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2018-04-08-fix-rx100-startup-issue.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2019-04-23-kafka-sidekiq-ruby\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2019-04-23-kafka-sidekiq-ruby.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2016-02-05-upgrading-mongoid\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2016-02-05-upgrading-mongoid.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2014-08-04-consistent-api\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2014-08-04-consistent-api.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/2019-01-27-blog-update\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog/__layout.svelte", "src/routes/blog/2019-01-27-blog-update.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/blog\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/blog.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/uses\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/uses.svx"],
      b: [".svelte-kit/build/components/error.svelte"]
    }
  ]
};
const get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({request, render: render2}) => render2(request))
});
const module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout$3;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index$b;
  }),
  "src/routes/about.svx": () => Promise.resolve().then(function() {
    return about;
  }),
  "src/routes/notes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout$2;
  }),
  "src/routes/notes/2020-11-04-firecracker-salmon-and-cauliflower-rice.svx": () => Promise.resolve().then(function() {
    return _20201104FirecrackerSalmonAndCauliflowerRice;
  }),
  "src/routes/notes/2020-08-27-Boundary-Supply-Prima-system-support.svx": () => Promise.resolve().then(function() {
    return _20200827BoundarySupplyPrimaSystemSupport;
  }),
  "src/routes/notes/2020-08-31-Getting-better-with-the-Drone.svx": () => Promise.resolve().then(function() {
    return _20200831GettingBetterWithTheDrone;
  }),
  "src/routes/notes/2020-08-22--A-Taxi-Driver-Korean-.svx": () => Promise.resolve().then(function() {
    return _20200822_ATaxiDriverKorean_;
  }),
  "src/routes/notes/2020-09-02-The-Rhine-River.svx": () => Promise.resolve().then(function() {
    return _20200902TheRhineRiver;
  }),
  "src/routes/notes/2020-08-22-Bought-a-drone.svx": () => Promise.resolve().then(function() {
    return _20200822BoughtADrone;
  }),
  "src/routes/notes/2020-08-22-Awesome-Sites.svx": () => Promise.resolve().then(function() {
    return _20200822AwesomeSites;
  }),
  "src/routes/notes/2020-08-28-Webmentions.svx": () => Promise.resolve().then(function() {
    return _20200828Webmentions;
  }),
  "src/routes/notes/2020-11-23-Fall-Leaves.svx": () => Promise.resolve().then(function() {
    return _20201123FallLeaves;
  }),
  "src/routes/notes/2020-12-05-wild-horses.svx": () => Promise.resolve().then(function() {
    return _20201205WildHorses;
  }),
  "src/routes/notes/2021-01-07-still-human.svx": () => Promise.resolve().then(function() {
    return _20210107StillHuman;
  }),
  "src/routes/notes/2020-08-29-Rainy-days.svx": () => Promise.resolve().then(function() {
    return _20200829RainyDays;
  }),
  "src/routes/notes/2020-11-29-utrecht.svx": () => Promise.resolve().then(function() {
    return _20201129Utrecht;
  }),
  "src/routes/notes/2021-01-10-street.svx": () => Promise.resolve().then(function() {
    return _20210110Street;
  }),
  "src/routes/notes/2020-08-25-Minio.svx": () => Promise.resolve().then(function() {
    return _20200825Minio;
  }),
  "src/routes/notes/2020-11-24-Fall.svx": () => Promise.resolve().then(function() {
    return _20201124Fall;
  }),
  "src/routes/notes.svelte": () => Promise.resolve().then(function() {
    return notes;
  }),
  "src/routes/trips/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout$1;
  }),
  "src/routes/trips/egypt-2009/index.svelte": () => Promise.resolve().then(function() {
    return index$a;
  }),
  "src/routes/trips/usa-2011/index.svelte": () => Promise.resolve().then(function() {
    return index$9;
  }),
  "src/routes/trips/usa-2011/day-twenty-twenty-eight/index.svelte": () => Promise.resolve().then(function() {
    return index$8;
  }),
  "src/routes/trips/usa-2011/day-eighteen-nineteen/index.svelte": () => Promise.resolve().then(function() {
    return index$7;
  }),
  "src/routes/trips/usa-2011/day-sixteen-seventeen/index.svelte": () => Promise.resolve().then(function() {
    return index$6;
  }),
  "src/routes/trips/usa-2011/day-twelve-fifteen/index.svelte": () => Promise.resolve().then(function() {
    return index$5;
  }),
  "src/routes/trips/usa-2011/day-nine-eleven/index.svelte": () => Promise.resolve().then(function() {
    return index$4;
  }),
  "src/routes/trips/usa-2011/day-one-six/index.svelte": () => Promise.resolve().then(function() {
    return index$3;
  }),
  "src/routes/trips/usa-2011/day-eight/index.svelte": () => Promise.resolve().then(function() {
    return index$2;
  }),
  "src/routes/trips/usa-2011/day-seven/index.svelte": () => Promise.resolve().then(function() {
    return index$1;
  }),
  "src/routes/trips/usa-2012/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }),
  "src/routes/trips/usa-2012/day-one-seven.svelte": () => Promise.resolve().then(function() {
    return dayOneSeven;
  }),
  "src/routes/trips/usa-2012/day-eight.svelte": () => Promise.resolve().then(function() {
    return dayEight;
  }),
  "src/routes/trips.svelte": () => Promise.resolve().then(function() {
    return trips;
  }),
  "src/routes/blog/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  "src/routes/blog/2021-04-20-remote-uploads-with-pre-signed-urls-on-scaleway-object-storage.svx": () => Promise.resolve().then(function() {
    return _20210420RemoteUploadsWithPreSignedUrlsOnScalewayObjectStorage;
  }),
  "src/routes/blog/2019-04-23-extending-existing-functionality-in-rust-with-traits-in-rust.svx": () => Promise.resolve().then(function() {
    return _20190423ExtendingExistingFunctionalityInRustWithTraitsInRust;
  }),
  "src/routes/blog/2020-08-17-identifying-and-resolving-a-kafka-issue-with-appsignal.svx": () => Promise.resolve().then(function() {
    return _20200817IdentifyingAndResolvingAKafkaIssueWithAppsignal;
  }),
  "src/routes/blog/2018-12-04-dont-be-mean-statistical-means-and-percentiles-101.svx": () => Promise.resolve().then(function() {
    return _20181204DontBeMeanStatisticalMeansAndPercentiles101;
  }),
  "src/routes/blog/2014-03-31-mongodb-mongoid-and-sideiq-connection-problems.svx": () => Promise.resolve().then(function() {
    return _20140331MongodbMongoidAndSideiqConnectionProblems;
  }),
  "src/routes/blog/2019-03-09-resize-images-from-s3-with-aws-lambda-and-rust.svx": () => Promise.resolve().then(function() {
    return _20190309ResizeImagesFromS3WithAwsLambdaAndRust;
  }),
  "src/routes/blog/2020-08-28-upload-to-presigned-aws-url-with-rest-client.svx": () => Promise.resolve().then(function() {
    return _20200828UploadToPresignedAwsUrlWithRestClient;
  }),
  "src/routes/blog/2019-02-12-replica-set-lag-monitoring-with-appsignal.svx": () => Promise.resolve().then(function() {
    return _20190212ReplicaSetLagMonitoringWithAppsignal;
  }),
  "src/routes/blog/2011-05-21-how-to-control-an-rc-car-with-an-arduino.svx": () => Promise.resolve().then(function() {
    return _20110521HowToControlAnRcCarWithAnArduino;
  }),
  "src/routes/blog/2016-07-04-monitor-mongodb-load-with-custom-metrics.svx": () => Promise.resolve().then(function() {
    return _20160704MonitorMongodbLoadWithCustomMetrics;
  }),
  "src/routes/blog/2020-08-27-iawriter-micropub-netlify-static-site.svx": () => Promise.resolve().then(function() {
    return _20200827IawriterMicropubNetlifyStaticSite;
  }),
  "src/routes/blog/2017-11-13-track-cache-hits-with-custom-metrics.svx": () => Promise.resolve().then(function() {
    return _20171113TrackCacheHitsWithCustomMetrics;
  }),
  "src/routes/blog/2014-01-07-realtime-mongodb-with-aggregations.svx": () => Promise.resolve().then(function() {
    return _20140107RealtimeMongodbWithAggregations;
  }),
  "src/routes/blog/2018-06-10-apollo-query-batching-and-graphql.svx": () => Promise.resolve().then(function() {
    return _20180610ApolloQueryBatchingAndGraphql;
  }),
  "src/routes/blog/2019-10-12-3d-printed-plant-watering-system.svx": () => Promise.resolve().then(function() {
    return _201910123dPrintedPlantWateringSystem;
  }),
  "src/routes/blog/2011-12-04-a-trakt-tv-siri-proxy-plugin.svx": () => Promise.resolve().then(function() {
    return _20111204ATraktTvSiriProxyPlugin;
  }),
  "src/routes/blog/2013-07-30-taming-mongodb-disk-usage.svx": () => Promise.resolve().then(function() {
    return _20130730TamingMongodbDiskUsage;
  }),
  "src/routes/blog/2018-07-03-custom-exceptions-in-ruby.svx": () => Promise.resolve().then(function() {
    return _20180703CustomExceptionsInRuby;
  }),
  "src/routes/blog/2018-10-23-the-innards-of-a-ruby-gem.svx": () => Promise.resolve().then(function() {
    return _20181023TheInnardsOfARubyGem;
  }),
  "src/routes/blog/2013-06-13-reducing-mongodb-queries.svx": () => Promise.resolve().then(function() {
    return _20130613ReducingMongodbQueries;
  }),
  "src/routes/blog/2019-02-14-dropzone-app-stimulus-js.svx": () => Promise.resolve().then(function() {
    return _20190214DropzoneAppStimulusJs;
  }),
  "src/routes/blog/2019-12-03-mailgun-europe-and-rails.svx": () => Promise.resolve().then(function() {
    return _20191203MailgunEuropeAndRails;
  }),
  "src/routes/blog/2018-04-08-fix-rx100-startup-issue.svx": () => Promise.resolve().then(function() {
    return _20180408FixRx100StartupIssue;
  }),
  "src/routes/blog/2019-04-23-kafka-sidekiq-ruby.svx": () => Promise.resolve().then(function() {
    return _20190423KafkaSidekiqRuby;
  }),
  "src/routes/blog/2016-02-05-upgrading-mongoid.svx": () => Promise.resolve().then(function() {
    return _20160205UpgradingMongoid;
  }),
  "src/routes/blog/2014-08-04-consistent-api.svx": () => Promise.resolve().then(function() {
    return _20140804ConsistentApi;
  }),
  "src/routes/blog/2019-01-27-blog-update.svx": () => Promise.resolve().then(function() {
    return _20190127BlogUpdate;
  }),
  "src/routes/blog.svelte": () => Promise.resolve().then(function() {
    return blog;
  }),
  "src/routes/uses.svx": () => Promise.resolve().then(function() {
    return uses;
  })
};
const metadata_lookup = {"src/routes/__layout.svelte": {"entry": "/./_app/pages/__layout.svelte-f7efdd61.js", "css": ["/./_app/assets/pages/__layout.svelte-4ebfd16a.css"], "js": ["/./_app/pages/__layout.svelte-f7efdd61.js", "/./_app/chunks/vendor-f5a3c274.js"], "styles": null}, ".svelte-kit/build/components/error.svelte": {"entry": "/./_app/error.svelte-ffcf5c38.js", "css": [], "js": ["/./_app/error.svelte-ffcf5c38.js", "/./_app/chunks/vendor-f5a3c274.js"], "styles": null}, "src/routes/index.svelte": {"entry": "/./_app/pages/index.svelte-e8d651c8.js", "css": ["/./_app/assets/pages/index.svelte-c5105253.css"], "js": ["/./_app/pages/index.svelte-e8d651c8.js", "/./_app/chunks/vendor-f5a3c274.js"], "styles": null}, "src/routes/about.svx": {"entry": "/./_app/pages/about.svx-b58e5573.js", "css": ["/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/about.svx-b58e5573.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-26fefc43.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js"], "styles": null}, "src/routes/notes/__layout.svelte": {"entry": "/./_app/pages/notes/__layout.svelte-bdfbbae3.js", "css": [], "js": ["/./_app/pages/notes/__layout.svelte-bdfbbae3.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Note-242497d3.js", "/./_app/chunks/FormattedDate-b4a44e35.js", "/./_app/chunks/ReturnToCategory-6dd4dd27.js"], "styles": null}, "src/routes/notes/2020-11-04-firecracker-salmon-and-cauliflower-rice.svx": {"entry": "/./_app/pages/notes/2020-11-04-firecracker-salmon-and-cauliflower-rice.svx-e1e12f1f.js", "css": [], "js": ["/./_app/pages/notes/2020-11-04-firecracker-salmon-and-cauliflower-rice.svx-e1e12f1f.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-08-27-Boundary-Supply-Prima-system-support.svx": {"entry": "/./_app/pages/notes/2020-08-27-Boundary-Supply-Prima-system-support.svx-07bd6284.js", "css": [], "js": ["/./_app/pages/notes/2020-08-27-Boundary-Supply-Prima-system-support.svx-07bd6284.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-08-31-Getting-better-with-the-Drone.svx": {"entry": "/./_app/pages/notes/2020-08-31-Getting-better-with-the-Drone.svx-b42b519a.js", "css": [], "js": ["/./_app/pages/notes/2020-08-31-Getting-better-with-the-Drone.svx-b42b519a.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-08-22--A-Taxi-Driver-Korean-.svx": {"entry": "/./_app/pages/notes/2020-08-22--A-Taxi-Driver-Korean-.svx-3d751ba2.js", "css": [], "js": ["/./_app/pages/notes/2020-08-22--A-Taxi-Driver-Korean-.svx-3d751ba2.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-09-02-The-Rhine-River.svx": {"entry": "/./_app/pages/notes/2020-09-02-The-Rhine-River.svx-e02a0e79.js", "css": [], "js": ["/./_app/pages/notes/2020-09-02-The-Rhine-River.svx-e02a0e79.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-08-22-Bought-a-drone.svx": {"entry": "/./_app/pages/notes/2020-08-22-Bought-a-drone.svx-e20f4b0d.js", "css": [], "js": ["/./_app/pages/notes/2020-08-22-Bought-a-drone.svx-e20f4b0d.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-08-22-Awesome-Sites.svx": {"entry": "/./_app/pages/notes/2020-08-22-Awesome-Sites.svx-bac6a29f.js", "css": [], "js": ["/./_app/pages/notes/2020-08-22-Awesome-Sites.svx-bac6a29f.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-08-28-Webmentions.svx": {"entry": "/./_app/pages/notes/2020-08-28-Webmentions.svx-d1f913fb.js", "css": [], "js": ["/./_app/pages/notes/2020-08-28-Webmentions.svx-d1f913fb.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-11-23-Fall-Leaves.svx": {"entry": "/./_app/pages/notes/2020-11-23-Fall-Leaves.svx-d212d640.js", "css": [], "js": ["/./_app/pages/notes/2020-11-23-Fall-Leaves.svx-d212d640.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-12-05-wild-horses.svx": {"entry": "/./_app/pages/notes/2020-12-05-wild-horses.svx-5aed2c9a.js", "css": [], "js": ["/./_app/pages/notes/2020-12-05-wild-horses.svx-5aed2c9a.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2021-01-07-still-human.svx": {"entry": "/./_app/pages/notes/2021-01-07-still-human.svx-d365c751.js", "css": [], "js": ["/./_app/pages/notes/2021-01-07-still-human.svx-d365c751.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-08-29-Rainy-days.svx": {"entry": "/./_app/pages/notes/2020-08-29-Rainy-days.svx-39aaa946.js", "css": [], "js": ["/./_app/pages/notes/2020-08-29-Rainy-days.svx-39aaa946.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-11-29-utrecht.svx": {"entry": "/./_app/pages/notes/2020-11-29-utrecht.svx-9b57c8de.js", "css": [], "js": ["/./_app/pages/notes/2020-11-29-utrecht.svx-9b57c8de.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2021-01-10-street.svx": {"entry": "/./_app/pages/notes/2021-01-10-street.svx-c9ef653e.js", "css": [], "js": ["/./_app/pages/notes/2021-01-10-street.svx-c9ef653e.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-08-25-Minio.svx": {"entry": "/./_app/pages/notes/2020-08-25-Minio.svx-013c7048.js", "css": [], "js": ["/./_app/pages/notes/2020-08-25-Minio.svx-013c7048.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes/2020-11-24-Fall.svx": {"entry": "/./_app/pages/notes/2020-11-24-Fall.svx-c7b14553.js", "css": [], "js": ["/./_app/pages/notes/2020-11-24-Fall.svx-c7b14553.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/notes.svelte": {"entry": "/./_app/pages/notes.svelte-20f434d8.js", "css": [], "js": ["/./_app/pages/notes.svelte-20f434d8.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Note-242497d3.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/__layout.svelte": {"entry": "/./_app/pages/trips/__layout.svelte-a04575e5.js", "css": ["/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/__layout.svelte-a04575e5.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/FormattedDate-b4a44e35.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/ReturnToCategory-6dd4dd27.js"], "styles": null}, "src/routes/trips/egypt-2009/index.svelte": {"entry": "/./_app/pages/trips/egypt-2009/index.svelte-04bef7f2.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/egypt-2009/index.svelte-04bef7f2.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/Explanation-6660f4b5.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2011/index.svelte": {"entry": "/./_app/pages/trips/usa-2011/index.svelte-a68e7884.js", "css": ["/./_app/assets/Map-e209a434.css"], "js": ["/./_app/pages/trips/usa-2011/index.svelte-a68e7884.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2011/day-twenty-twenty-eight/index.svelte": {"entry": "/./_app/pages/trips/usa-2011/day-twenty-twenty-eight/index.svelte-5d08c31d.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2011/day-twenty-twenty-eight/index.svelte-5d08c31d.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/PhonePic-15bbb601.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2011/day-eighteen-nineteen/index.svelte": {"entry": "/./_app/pages/trips/usa-2011/day-eighteen-nineteen/index.svelte-eb2569e3.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2011/day-eighteen-nineteen/index.svelte-eb2569e3.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/PhonePic-15bbb601.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2011/day-sixteen-seventeen/index.svelte": {"entry": "/./_app/pages/trips/usa-2011/day-sixteen-seventeen/index.svelte-3da24b60.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2011/day-sixteen-seventeen/index.svelte-3da24b60.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/PhonePic-15bbb601.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2011/day-twelve-fifteen/index.svelte": {"entry": "/./_app/pages/trips/usa-2011/day-twelve-fifteen/index.svelte-1b44539e.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2011/day-twelve-fifteen/index.svelte-1b44539e.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/PhonePic-15bbb601.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2011/day-nine-eleven/index.svelte": {"entry": "/./_app/pages/trips/usa-2011/day-nine-eleven/index.svelte-ec9136ac.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2011/day-nine-eleven/index.svelte-ec9136ac.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/PhonePic-15bbb601.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2011/day-one-six/index.svelte": {"entry": "/./_app/pages/trips/usa-2011/day-one-six/index.svelte-badb5624.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2011/day-one-six/index.svelte-badb5624.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/PhonePic-15bbb601.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2011/day-eight/index.svelte": {"entry": "/./_app/pages/trips/usa-2011/day-eight/index.svelte-fba226e0.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2011/day-eight/index.svelte-fba226e0.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/PhonePic-15bbb601.js", "/./_app/chunks/Explanation-6660f4b5.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2011/day-seven/index.svelte": {"entry": "/./_app/pages/trips/usa-2011/day-seven/index.svelte-6698aa42.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2011/day-seven/index.svelte-6698aa42.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2012/index.svelte": {"entry": "/./_app/pages/trips/usa-2012/index.svelte-496fc2ab.js", "css": ["/./_app/assets/Map-e209a434.css"], "js": ["/./_app/pages/trips/usa-2012/index.svelte-496fc2ab.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2012/day-one-seven.svelte": {"entry": "/./_app/pages/trips/usa-2012/day-one-seven.svelte-0565d117.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2012/day-one-seven.svelte-0565d117.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/PhonePic-15bbb601.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips/usa-2012/day-eight.svelte": {"entry": "/./_app/pages/trips/usa-2012/day-eight.svelte-2fc7af53.js", "css": ["/./_app/assets/Map-e209a434.css", "/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/trips/usa-2012/day-eight.svelte-2fc7af53.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Location-b7000f81.js", "/./_app/chunks/Map-cad3e9bc.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js", "/./_app/chunks/PhonePic-15bbb601.js", "/./_app/chunks/TripHeader-8438adec.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/trips.svelte": {"entry": "/./_app/pages/trips.svelte-1ca71370.js", "css": ["/./_app/assets/ResponsiveImage-b15871ca.css", "/./_app/assets/Map-e209a434.css"], "js": ["/./_app/pages/trips.svelte-1ca71370.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Map-cad3e9bc.js"], "styles": null}, "src/routes/blog/__layout.svelte": {"entry": "/./_app/pages/blog/__layout.svelte-d4126a8f.js", "css": [], "js": ["/./_app/pages/blog/__layout.svelte-d4126a8f.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Post-007b500f.js", "/./_app/chunks/FormattedDate-b4a44e35.js", "/./_app/chunks/ReturnToCategory-6dd4dd27.js"], "styles": null}, "src/routes/blog/2021-04-20-remote-uploads-with-pre-signed-urls-on-scaleway-object-storage.svx": {"entry": "/./_app/pages/blog/2021-04-20-remote-uploads-with-pre-signed-urls-on-scaleway-object-storage.svx-2a753ca5.js", "css": [], "js": ["/./_app/pages/blog/2021-04-20-remote-uploads-with-pre-signed-urls-on-scaleway-object-storage.svx-2a753ca5.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-4c7221f2.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2019-04-23-extending-existing-functionality-in-rust-with-traits-in-rust.svx": {"entry": "/./_app/pages/blog/2019-04-23-extending-existing-functionality-in-rust-with-traits-in-rust.svx-e42f7d9c.js", "css": [], "js": ["/./_app/pages/blog/2019-04-23-extending-existing-functionality-in-rust-with-traits-in-rust.svx-e42f7d9c.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2020-08-17-identifying-and-resolving-a-kafka-issue-with-appsignal.svx": {"entry": "/./_app/pages/blog/2020-08-17-identifying-and-resolving-a-kafka-issue-with-appsignal.svx-afd8124c.js", "css": [], "js": ["/./_app/pages/blog/2020-08-17-identifying-and-resolving-a-kafka-issue-with-appsignal.svx-afd8124c.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2018-12-04-dont-be-mean-statistical-means-and-percentiles-101.svx": {"entry": "/./_app/pages/blog/2018-12-04-dont-be-mean-statistical-means-and-percentiles-101.svx-0a32ad57.js", "css": [], "js": ["/./_app/pages/blog/2018-12-04-dont-be-mean-statistical-means-and-percentiles-101.svx-0a32ad57.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2014-03-31-mongodb-mongoid-and-sideiq-connection-problems.svx": {"entry": "/./_app/pages/blog/2014-03-31-mongodb-mongoid-and-sideiq-connection-problems.svx-b85311d0.js", "css": [], "js": ["/./_app/pages/blog/2014-03-31-mongodb-mongoid-and-sideiq-connection-problems.svx-b85311d0.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2019-03-09-resize-images-from-s3-with-aws-lambda-and-rust.svx": {"entry": "/./_app/pages/blog/2019-03-09-resize-images-from-s3-with-aws-lambda-and-rust.svx-9ed44d8e.js", "css": ["/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/blog/2019-03-09-resize-images-from-s3-with-aws-lambda-and-rust.svx-9ed44d8e.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js"], "styles": null}, "src/routes/blog/2020-08-28-upload-to-presigned-aws-url-with-rest-client.svx": {"entry": "/./_app/pages/blog/2020-08-28-upload-to-presigned-aws-url-with-rest-client.svx-ecf0eb17.js", "css": [], "js": ["/./_app/pages/blog/2020-08-28-upload-to-presigned-aws-url-with-rest-client.svx-ecf0eb17.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2019-02-12-replica-set-lag-monitoring-with-appsignal.svx": {"entry": "/./_app/pages/blog/2019-02-12-replica-set-lag-monitoring-with-appsignal.svx-50c12e19.js", "css": [], "js": ["/./_app/pages/blog/2019-02-12-replica-set-lag-monitoring-with-appsignal.svx-50c12e19.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2011-05-21-how-to-control-an-rc-car-with-an-arduino.svx": {"entry": "/./_app/pages/blog/2011-05-21-how-to-control-an-rc-car-with-an-arduino.svx-b70a6270.js", "css": ["/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/blog/2011-05-21-how-to-control-an-rc-car-with-an-arduino.svx-b70a6270.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js"], "styles": null}, "src/routes/blog/2016-07-04-monitor-mongodb-load-with-custom-metrics.svx": {"entry": "/./_app/pages/blog/2016-07-04-monitor-mongodb-load-with-custom-metrics.svx-26cae425.js", "css": [], "js": ["/./_app/pages/blog/2016-07-04-monitor-mongodb-load-with-custom-metrics.svx-26cae425.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2020-08-27-iawriter-micropub-netlify-static-site.svx": {"entry": "/./_app/pages/blog/2020-08-27-iawriter-micropub-netlify-static-site.svx-fa47d7ac.js", "css": [], "js": ["/./_app/pages/blog/2020-08-27-iawriter-micropub-netlify-static-site.svx-fa47d7ac.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2017-11-13-track-cache-hits-with-custom-metrics.svx": {"entry": "/./_app/pages/blog/2017-11-13-track-cache-hits-with-custom-metrics.svx-9a5e8f26.js", "css": [], "js": ["/./_app/pages/blog/2017-11-13-track-cache-hits-with-custom-metrics.svx-9a5e8f26.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2014-01-07-realtime-mongodb-with-aggregations.svx": {"entry": "/./_app/pages/blog/2014-01-07-realtime-mongodb-with-aggregations.svx-103e8447.js", "css": [], "js": ["/./_app/pages/blog/2014-01-07-realtime-mongodb-with-aggregations.svx-103e8447.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2018-06-10-apollo-query-batching-and-graphql.svx": {"entry": "/./_app/pages/blog/2018-06-10-apollo-query-batching-and-graphql.svx-53678aa9.js", "css": [], "js": ["/./_app/pages/blog/2018-06-10-apollo-query-batching-and-graphql.svx-53678aa9.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2019-10-12-3d-printed-plant-watering-system.svx": {"entry": "/./_app/pages/blog/2019-10-12-3d-printed-plant-watering-system.svx-b90d0587.js", "css": ["/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/blog/2019-10-12-3d-printed-plant-watering-system.svx-b90d0587.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js", "/./_app/chunks/Panels-e8185001.js"], "styles": null}, "src/routes/blog/2011-12-04-a-trakt-tv-siri-proxy-plugin.svx": {"entry": "/./_app/pages/blog/2011-12-04-a-trakt-tv-siri-proxy-plugin.svx-26431809.js", "css": [], "js": ["/./_app/pages/blog/2011-12-04-a-trakt-tv-siri-proxy-plugin.svx-26431809.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2013-07-30-taming-mongodb-disk-usage.svx": {"entry": "/./_app/pages/blog/2013-07-30-taming-mongodb-disk-usage.svx-b997bb3f.js", "css": [], "js": ["/./_app/pages/blog/2013-07-30-taming-mongodb-disk-usage.svx-b997bb3f.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2018-07-03-custom-exceptions-in-ruby.svx": {"entry": "/./_app/pages/blog/2018-07-03-custom-exceptions-in-ruby.svx-6888dd45.js", "css": [], "js": ["/./_app/pages/blog/2018-07-03-custom-exceptions-in-ruby.svx-6888dd45.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2018-10-23-the-innards-of-a-ruby-gem.svx": {"entry": "/./_app/pages/blog/2018-10-23-the-innards-of-a-ruby-gem.svx-ee4e2f50.js", "css": [], "js": ["/./_app/pages/blog/2018-10-23-the-innards-of-a-ruby-gem.svx-ee4e2f50.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2013-06-13-reducing-mongodb-queries.svx": {"entry": "/./_app/pages/blog/2013-06-13-reducing-mongodb-queries.svx-05a24f27.js", "css": [], "js": ["/./_app/pages/blog/2013-06-13-reducing-mongodb-queries.svx-05a24f27.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2019-02-14-dropzone-app-stimulus-js.svx": {"entry": "/./_app/pages/blog/2019-02-14-dropzone-app-stimulus-js.svx-5427c0d8.js", "css": ["/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/blog/2019-02-14-dropzone-app-stimulus-js.svx-5427c0d8.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js"], "styles": null}, "src/routes/blog/2019-12-03-mailgun-europe-and-rails.svx": {"entry": "/./_app/pages/blog/2019-12-03-mailgun-europe-and-rails.svx-420fe6c4.js", "css": [], "js": ["/./_app/pages/blog/2019-12-03-mailgun-europe-and-rails.svx-420fe6c4.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2018-04-08-fix-rx100-startup-issue.svx": {"entry": "/./_app/pages/blog/2018-04-08-fix-rx100-startup-issue.svx-64982b4d.js", "css": ["/./_app/assets/ResponsiveImage-b15871ca.css"], "js": ["/./_app/pages/blog/2018-04-08-fix-rx100-startup-issue.svx-64982b4d.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js", "/./_app/chunks/ResponsiveImage-8c4fb22f.js"], "styles": null}, "src/routes/blog/2019-04-23-kafka-sidekiq-ruby.svx": {"entry": "/./_app/pages/blog/2019-04-23-kafka-sidekiq-ruby.svx-a25657aa.js", "css": [], "js": ["/./_app/pages/blog/2019-04-23-kafka-sidekiq-ruby.svx-a25657aa.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2016-02-05-upgrading-mongoid.svx": {"entry": "/./_app/pages/blog/2016-02-05-upgrading-mongoid.svx-b6b12b2d.js", "css": [], "js": ["/./_app/pages/blog/2016-02-05-upgrading-mongoid.svx-b6b12b2d.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2014-08-04-consistent-api.svx": {"entry": "/./_app/pages/blog/2014-08-04-consistent-api.svx-d7e9476a.js", "css": [], "js": ["/./_app/pages/blog/2014-08-04-consistent-api.svx-d7e9476a.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog/2019-01-27-blog-update.svx": {"entry": "/./_app/pages/blog/2019-01-27-blog-update.svx-db109ddd.js", "css": [], "js": ["/./_app/pages/blog/2019-01-27-blog-update.svx-db109ddd.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-0fbf9182.js", "/./_app/chunks/stores-0da78aa4.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/blog.svelte": {"entry": "/./_app/pages/blog.svelte-001a35f8.js", "css": [], "js": ["/./_app/pages/blog.svelte-001a35f8.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/Post-007b500f.js", "/./_app/chunks/FormattedDate-b4a44e35.js"], "styles": null}, "src/routes/uses.svx": {"entry": "/./_app/pages/uses.svx-6e605ae8.js", "css": [], "js": ["/./_app/pages/uses.svx-6e605ae8.js", "/./_app/chunks/vendor-f5a3c274.js", "/./_app/chunks/_mdsvex-26fefc43.js"], "styles": null}};
async function load_component(file) {
  return {
    module: await module_lookup[file](),
    ...metadata_lookup[file]
  };
}
init({paths: {"base": "", "assets": "/."}});
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({...request, host}, options, {prerender});
}
async function getPosts$2() {
  const modules = {"/src/routes/notes/2020-08-22--A-Taxi-Driver-Korean-.svx": () => Promise.resolve().then(function() {
    return _20200822_ATaxiDriverKorean_;
  }), "/src/routes/notes/2020-08-22-Awesome-Sites.svx": () => Promise.resolve().then(function() {
    return _20200822AwesomeSites;
  }), "/src/routes/notes/2020-08-22-Bought-a-drone.svx": () => Promise.resolve().then(function() {
    return _20200822BoughtADrone;
  }), "/src/routes/notes/2020-08-25-Minio.svx": () => Promise.resolve().then(function() {
    return _20200825Minio;
  }), "/src/routes/notes/2020-08-27-Boundary-Supply-Prima-system-support.svx": () => Promise.resolve().then(function() {
    return _20200827BoundarySupplyPrimaSystemSupport;
  }), "/src/routes/notes/2020-08-28-Webmentions.svx": () => Promise.resolve().then(function() {
    return _20200828Webmentions;
  }), "/src/routes/notes/2020-08-29-Rainy-days.svx": () => Promise.resolve().then(function() {
    return _20200829RainyDays;
  }), "/src/routes/notes/2020-08-31-Getting-better-with-the-Drone.svx": () => Promise.resolve().then(function() {
    return _20200831GettingBetterWithTheDrone;
  }), "/src/routes/notes/2020-09-02-The-Rhine-River.svx": () => Promise.resolve().then(function() {
    return _20200902TheRhineRiver;
  }), "/src/routes/notes/2020-11-04-firecracker-salmon-and-cauliflower-rice.svx": () => Promise.resolve().then(function() {
    return _20201104FirecrackerSalmonAndCauliflowerRice;
  }), "/src/routes/notes/2020-11-23-Fall-Leaves.svx": () => Promise.resolve().then(function() {
    return _20201123FallLeaves;
  }), "/src/routes/notes/2020-11-24-Fall.svx": () => Promise.resolve().then(function() {
    return _20201124Fall;
  }), "/src/routes/notes/2020-11-29-utrecht.svx": () => Promise.resolve().then(function() {
    return _20201129Utrecht;
  }), "/src/routes/notes/2020-12-05-wild-horses.svx": () => Promise.resolve().then(function() {
    return _20201205WildHorses;
  }), "/src/routes/notes/2021-01-07-still-human.svx": () => Promise.resolve().then(function() {
    return _20210107StillHuman;
  }), "/src/routes/notes/2021-01-10-street.svx": () => Promise.resolve().then(function() {
    return _20210110Street;
  })};
  const posts = [];
  await Promise.all(Object.entries(modules).map(async ([file, module]) => {
    const post = await module();
    if (post && post.metadata) {
      const url = post.metadata.appsignal || file.replace("/src/routes", "").replace(".svx", "");
      posts.push({...post.metadata, url});
    }
  }));
  posts.sort((a, b) => a.date > b.date ? -1 : 1);
  return posts;
}
const siteUrl$2 = "https://matsimitsu.com";
const renderXmlRssFeed$2 = (posts) => `<?xml version="1.0" encoding="UTF-8" ?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title><![CDATA[Matsimitsu.com - Trips]]></title>
    <description><![CDATA[Personal weblog of Robert Beekman. Feed of latest posts from the notes section of my site.]]></description>
    <link>${siteUrl$2}</link>
    <atom:link href="${siteUrl$2}/feeds/notes.xml" rel="self" type="application/rss+xml" />
    <generator>SvelteKit</generator>
    <lastBuildDate>${new Date().toUTCString()}</lastBuildDate>
    ${posts.map((post) => `
        <item>
          <title><![CDATA[${post.title}]]></title>
          <link>${siteUrl$2}${post.url}</link>
          <guid isPermaLink="false">${siteUrl$2}${post.url}</guid>
          <pubDate>${new Date(post.date).toUTCString()}</pubDate>
        </item>
        `).join("\n")}
  </channel>
</rss>`;
async function get$6() {
  let posts = await getPosts$2();
  const feed = renderXmlRssFeed$2(posts.reverse());
  return {
    body: feed,
    headers: {
      "Cache-Control": `max-age=0, s-max-age=${600}`,
      "Content-Type": "application/rss+xml"
    }
  };
}
var notes_xml = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$6
});
async function getPosts$1() {
  const modules = {"/src/routes/trips/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout$1;
  }), "/src/routes/trips/egypt-2009/index.svelte": () => Promise.resolve().then(function() {
    return index$a;
  }), "/src/routes/trips/usa-2011/index.svelte": () => Promise.resolve().then(function() {
    return index$9;
  }), "/src/routes/trips/usa-2012/day-eight.svelte": () => Promise.resolve().then(function() {
    return dayEight;
  }), "/src/routes/trips/usa-2012/day-one-seven.svelte": () => Promise.resolve().then(function() {
    return dayOneSeven;
  }), "/src/routes/trips/usa-2012/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }), "/src/routes/trips/usa-2011/day-eight/index.svelte": () => Promise.resolve().then(function() {
    return index$2;
  }), "/src/routes/trips/usa-2011/day-eighteen-nineteen/index.svelte": () => Promise.resolve().then(function() {
    return index$7;
  }), "/src/routes/trips/usa-2011/day-nine-eleven/index.svelte": () => Promise.resolve().then(function() {
    return index$4;
  }), "/src/routes/trips/usa-2011/day-one-six/index.svelte": () => Promise.resolve().then(function() {
    return index$3;
  }), "/src/routes/trips/usa-2011/day-seven/index.svelte": () => Promise.resolve().then(function() {
    return index$1;
  }), "/src/routes/trips/usa-2011/day-sixteen-seventeen/index.svelte": () => Promise.resolve().then(function() {
    return index$6;
  }), "/src/routes/trips/usa-2011/day-twelve-fifteen/index.svelte": () => Promise.resolve().then(function() {
    return index$5;
  }), "/src/routes/trips/usa-2011/day-twenty-twenty-eight/index.svelte": () => Promise.resolve().then(function() {
    return index$8;
  })};
  const posts = [];
  await Promise.all(Object.entries(modules).map(async ([file, module]) => {
    const {postData: postData2} = await module();
    if (postData2) {
      const url = file.replace("/src/routes", "").replace("index.svelte", "").replace(".svelte", "");
      posts.push({...postData2, url});
    }
  }));
  posts.sort((a, b) => a.startDate > b.startDate ? 1 : -1);
  return posts;
}
const siteUrl$1 = "https://matsimitsu.com";
const renderXmlRssFeed$1 = (posts) => `<?xml version="1.0" encoding="UTF-8" ?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title><![CDATA[Matsimitsu.com - Trips]]></title>
    <description><![CDATA[Personal weblog of Robert Beekman. Feed of latest trips/posts from the travel section of my site.]]></description>
    <link>${siteUrl$1}</link>
    <atom:link href="${siteUrl$1}/feeds/trips.xml" rel="self" type="application/rss+xml" />
    <generator>SvelteKit</generator>
    <lastBuildDate>${new Date().toUTCString()}</lastBuildDate>
    ${posts.map((post) => `
        <item>
          <title><![CDATA[${post.title}]]></title>
          <description><![CDATA[${post.subtitle}]]></description>
          <link>${siteUrl$1}${post.url}</link>
          <guid isPermaLink="false">${siteUrl$1}${post.url}</guid>
          <pubDate>${new Date(post.startDate).toUTCString()}</pubDate>
        </item>
        `).join("\n")}
  </channel>
</rss>`;
async function get$5() {
  let posts = await getPosts$1();
  const feed = renderXmlRssFeed$1(posts.reverse());
  return {
    body: feed,
    headers: {
      "Cache-Control": `max-age=0, s-max-age=${600}`,
      "Content-Type": "application/rss+xml"
    }
  };
}
var trips_xml = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$5
});
async function getPosts() {
  const modules = {"/src/routes/blog/2011-05-21-how-to-control-an-rc-car-with-an-arduino.svx": () => Promise.resolve().then(function() {
    return _20110521HowToControlAnRcCarWithAnArduino;
  }), "/src/routes/blog/2011-12-04-a-trakt-tv-siri-proxy-plugin.svx": () => Promise.resolve().then(function() {
    return _20111204ATraktTvSiriProxyPlugin;
  }), "/src/routes/blog/2013-06-13-reducing-mongodb-queries.svx": () => Promise.resolve().then(function() {
    return _20130613ReducingMongodbQueries;
  }), "/src/routes/blog/2013-07-30-taming-mongodb-disk-usage.svx": () => Promise.resolve().then(function() {
    return _20130730TamingMongodbDiskUsage;
  }), "/src/routes/blog/2014-01-07-realtime-mongodb-with-aggregations.svx": () => Promise.resolve().then(function() {
    return _20140107RealtimeMongodbWithAggregations;
  }), "/src/routes/blog/2014-03-31-mongodb-mongoid-and-sideiq-connection-problems.svx": () => Promise.resolve().then(function() {
    return _20140331MongodbMongoidAndSideiqConnectionProblems;
  }), "/src/routes/blog/2014-08-04-consistent-api.svx": () => Promise.resolve().then(function() {
    return _20140804ConsistentApi;
  }), "/src/routes/blog/2016-02-05-upgrading-mongoid.svx": () => Promise.resolve().then(function() {
    return _20160205UpgradingMongoid;
  }), "/src/routes/blog/2016-07-04-monitor-mongodb-load-with-custom-metrics.svx": () => Promise.resolve().then(function() {
    return _20160704MonitorMongodbLoadWithCustomMetrics;
  }), "/src/routes/blog/2017-11-13-track-cache-hits-with-custom-metrics.svx": () => Promise.resolve().then(function() {
    return _20171113TrackCacheHitsWithCustomMetrics;
  }), "/src/routes/blog/2018-04-08-fix-rx100-startup-issue.svx": () => Promise.resolve().then(function() {
    return _20180408FixRx100StartupIssue;
  }), "/src/routes/blog/2018-06-10-apollo-query-batching-and-graphql.svx": () => Promise.resolve().then(function() {
    return _20180610ApolloQueryBatchingAndGraphql;
  }), "/src/routes/blog/2018-07-03-custom-exceptions-in-ruby.svx": () => Promise.resolve().then(function() {
    return _20180703CustomExceptionsInRuby;
  }), "/src/routes/blog/2018-10-23-the-innards-of-a-ruby-gem.svx": () => Promise.resolve().then(function() {
    return _20181023TheInnardsOfARubyGem;
  }), "/src/routes/blog/2018-12-04-dont-be-mean-statistical-means-and-percentiles-101.svx": () => Promise.resolve().then(function() {
    return _20181204DontBeMeanStatisticalMeansAndPercentiles101;
  }), "/src/routes/blog/2019-01-27-blog-update.svx": () => Promise.resolve().then(function() {
    return _20190127BlogUpdate;
  }), "/src/routes/blog/2019-02-12-replica-set-lag-monitoring-with-appsignal.svx": () => Promise.resolve().then(function() {
    return _20190212ReplicaSetLagMonitoringWithAppsignal;
  }), "/src/routes/blog/2019-02-14-dropzone-app-stimulus-js.svx": () => Promise.resolve().then(function() {
    return _20190214DropzoneAppStimulusJs;
  }), "/src/routes/blog/2019-03-09-resize-images-from-s3-with-aws-lambda-and-rust.svx": () => Promise.resolve().then(function() {
    return _20190309ResizeImagesFromS3WithAwsLambdaAndRust;
  }), "/src/routes/blog/2019-04-23-extending-existing-functionality-in-rust-with-traits-in-rust.svx": () => Promise.resolve().then(function() {
    return _20190423ExtendingExistingFunctionalityInRustWithTraitsInRust;
  }), "/src/routes/blog/2019-04-23-kafka-sidekiq-ruby.svx": () => Promise.resolve().then(function() {
    return _20190423KafkaSidekiqRuby;
  }), "/src/routes/blog/2019-10-12-3d-printed-plant-watering-system.svx": () => Promise.resolve().then(function() {
    return _201910123dPrintedPlantWateringSystem;
  }), "/src/routes/blog/2019-12-03-mailgun-europe-and-rails.svx": () => Promise.resolve().then(function() {
    return _20191203MailgunEuropeAndRails;
  }), "/src/routes/blog/2020-08-17-identifying-and-resolving-a-kafka-issue-with-appsignal.svx": () => Promise.resolve().then(function() {
    return _20200817IdentifyingAndResolvingAKafkaIssueWithAppsignal;
  }), "/src/routes/blog/2020-08-27-iawriter-micropub-netlify-static-site.svx": () => Promise.resolve().then(function() {
    return _20200827IawriterMicropubNetlifyStaticSite;
  }), "/src/routes/blog/2020-08-28-upload-to-presigned-aws-url-with-rest-client.svx": () => Promise.resolve().then(function() {
    return _20200828UploadToPresignedAwsUrlWithRestClient;
  }), "/src/routes/blog/2021-04-20-remote-uploads-with-pre-signed-urls-on-scaleway-object-storage.svx": () => Promise.resolve().then(function() {
    return _20210420RemoteUploadsWithPreSignedUrlsOnScalewayObjectStorage;
  })};
  const posts = [];
  await Promise.all(Object.entries(modules).map(async ([file, module]) => {
    const post = await module();
    if (post && post.metadata) {
      const url = post.metadata.appsignal || file.replace("/src/routes", "").replace(".svx", "");
      posts.push({...post.metadata, url});
    }
  }));
  posts.sort((a, b) => a.date > b.date ? -1 : 1);
  return posts;
}
const siteUrl = "https://matsimitsu.com";
const siteUrlOrUrl = (givenUrl) => {
  if (givenUrl.startsWith("http")) {
    return givenUrl;
  } else {
    return `${siteUrl}${givenUrl}`;
  }
};
const renderXmlRssFeed = (posts) => `<?xml version="1.0" encoding="UTF-8" ?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title><![CDATA[Matsimitsu.com - Trips]]></title>
    <description><![CDATA[Personal weblog of Robert Beekman. Feed of latest posts from the blog section of my site.]]></description>
    <link>${siteUrl}</link>
    <atom:link href="${siteUrl}/feeds/blog.xml" rel="self" type="application/rss+xml" />
    <generator>SvelteKit</generator>
    <lastBuildDate>${new Date().toUTCString()}</lastBuildDate>
    ${posts.map((post) => `
        <item>
          <title><![CDATA[${post.title}]]></title>
          <description><![CDATA[${post.summary}]]></description>
          <link>${siteUrlOrUrl(post.url)}</link>
          <guid isPermaLink="false">${siteUrlOrUrl(post.url)}</guid>
          <pubDate>${new Date(post.date).toUTCString()}</pubDate>
        </item>
        `).join("\n")}
  </channel>
</rss>`;
async function get$4() {
  let posts = await getPosts();
  const feed = renderXmlRssFeed(posts.reverse());
  return {
    body: feed,
    headers: {
      "Cache-Control": `max-age=0, s-max-age=${600}`,
      "Content-Type": "application/rss+xml"
    }
  };
}
var blog_xml = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$4
});
async function get$3() {
  let posts = await getPosts$2();
  return {
    body: posts
  };
}
var index_json$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$3
});
async function getTrips() {
  const modules = {"/src/routes/trips/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout$1;
  }), "/src/routes/trips/egypt-2009/index.svelte": () => Promise.resolve().then(function() {
    return index$a;
  }), "/src/routes/trips/usa-2011/index.svelte": () => Promise.resolve().then(function() {
    return index$9;
  }), "/src/routes/trips/usa-2012/day-eight.svelte": () => Promise.resolve().then(function() {
    return dayEight;
  }), "/src/routes/trips/usa-2012/day-one-seven.svelte": () => Promise.resolve().then(function() {
    return dayOneSeven;
  }), "/src/routes/trips/usa-2012/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }), "/src/routes/trips/usa-2011/day-eight/index.svelte": () => Promise.resolve().then(function() {
    return index$2;
  }), "/src/routes/trips/usa-2011/day-eighteen-nineteen/index.svelte": () => Promise.resolve().then(function() {
    return index$7;
  }), "/src/routes/trips/usa-2011/day-nine-eleven/index.svelte": () => Promise.resolve().then(function() {
    return index$4;
  }), "/src/routes/trips/usa-2011/day-one-six/index.svelte": () => Promise.resolve().then(function() {
    return index$3;
  }), "/src/routes/trips/usa-2011/day-seven/index.svelte": () => Promise.resolve().then(function() {
    return index$1;
  }), "/src/routes/trips/usa-2011/day-sixteen-seventeen/index.svelte": () => Promise.resolve().then(function() {
    return index$6;
  }), "/src/routes/trips/usa-2011/day-twelve-fifteen/index.svelte": () => Promise.resolve().then(function() {
    return index$5;
  }), "/src/routes/trips/usa-2011/day-twenty-twenty-eight/index.svelte": () => Promise.resolve().then(function() {
    return index$8;
  })};
  const trips2 = [];
  await Promise.all(Object.entries(modules).map(async ([file, module]) => {
    const {tripData: tripData2} = await module();
    if (tripData2) {
      const url = file.replace("/src/routes", "").replace("index.svelte", "").replace(".svelte", "");
      trips2.push({...tripData2, url});
    }
  }));
  trips2.sort((a, b) => a.startDate > b.startDate ? -1 : 1);
  return trips2;
}
async function get$2({params}) {
  let trips2 = await getTrips();
  return {
    body: trips2
  };
}
var index_json$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$2
});
async function get$1({query}) {
  let posts = await getPosts$1();
  if (query.get("trip")) {
    posts = posts.filter((p) => p.trip == query.get("trip"));
  }
  return {
    body: posts
  };
}
var posts_json = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$1
});
async function get() {
  let posts = await getPosts();
  return {
    body: posts
  };
}
var index_json = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get
});
var app = '/*! tailwindcss v2.1.1 | MIT License | https://tailwindcss.com*/\n/*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji}hr{height:0;color:inherit}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{box-sizing:border-box;border:0 solid #e5e7eb}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder, textarea::-moz-placeholder{opacity:1;color:#9ca3af}input:-ms-input-placeholder, textarea:-ms-input-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{padding:0;line-height:inherit;color:inherit}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}*{--tw-shadow:0 0 transparent;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 transparent;--tw-ring-shadow:0 0 transparent}.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}.prose{color:#4b5563;max-width:65ch}.prose [class~=lead]{color:#4b5563;font-size:1.25em;line-height:1.6;margin-top:1.2em;margin-bottom:1.2em}.prose a{color:#60a5fa;text-decoration:underline;font-weight:500;text-decoration:none}.prose a.active,.prose a:hover{text-decoration:underline}.prose strong{color:#1f2937;font-weight:600}.prose ol[type=A]{--list-counter-style:upper-alpha}.prose ol[type=a]{--list-counter-style:lower-alpha}.prose ol[type="A s"]{--list-counter-style:upper-alpha}.prose ol[type="a s"]{--list-counter-style:lower-alpha}.prose ol[type=I]{--list-counter-style:upper-roman}.prose ol[type=i]{--list-counter-style:lower-roman}.prose ol[type="I s"]{--list-counter-style:upper-roman}.prose ol[type="i s"]{--list-counter-style:lower-roman}.prose ol[type="1"]{--list-counter-style:decimal}.prose ol>li{position:relative;padding-left:1.75em}.prose ol>li:before{color:#1f2937;font-weight:700;content:counter(list-item,var(--list-counter-style,decimal)) ".";position:absolute;font-weight:400;color:#6b7280;left:0}.prose ul>li{position:relative;padding-left:1.75em}.prose ul>li:before{background-color:#1f2937;font-weight:700;content:"";position:absolute;background-color:#d1d5db;border-radius:50%;width:.375em;height:.375em;top:.6875em;left:.25em}.prose hr{border-color:#e5e7eb;border-top-width:1px;margin-top:3em;margin-bottom:3em}.prose blockquote{font-weight:500;font-style:italic;color:#111827;border-left-width:.25rem;border-left-color:#e5e7eb;quotes:"\\201C""\\201D""\\2018""\\2019";margin-top:1.6em;margin-bottom:1.6em;padding-left:1em}.prose blockquote p:first-of-type:before{content:open-quote}.prose blockquote p:last-of-type:after{content:close-quote}.prose h1{color:#1f2937;font-weight:800;font-size:2.25em;margin-bottom:.8888889em;line-height:1.1111111;text-align:center;margin-top:0}.prose h1 a{color:inherit}.prose h1 a:active,.prose h1 a:hover{text-decoration:none}.prose h2{color:#1f2937;font-weight:700;font-size:1.5em;margin-bottom:1em;line-height:1.3333333;text-align:center;margin-top:0}.prose h2 a{color:inherit}.prose h2 a:active,.prose h2 a:hover{text-decoration:none}.prose h3{color:#1f2937;font-weight:600;font-size:1.25em;margin-bottom:.6em;line-height:1.6;text-align:center;margin-top:0}.prose h3 a{color:inherit}.prose h3 a:active,.prose h3 a:hover{text-decoration:none}.prose h4{color:#1f2937;font-weight:600;margin-bottom:.5em;line-height:1.5;text-align:center;margin-top:0}.prose h4 a{color:inherit}.prose h4 a:active,.prose h4 a:hover{text-decoration:none}.prose figure figcaption{color:#6b7280;font-size:.875em;line-height:1.4285714;margin-top:.8571429em}.prose code{color:#1f2937;font-weight:600;font-size:.875em;background-color:#e5e7eb}.prose code:after,.prose code:before{display:none}.prose code:after,.prose code:before{content:"`"}.prose a code{color:#111827}.prose pre{color:#e5e7eb;background-color:#1f2937;overflow-x:auto;font-size:.875em;line-height:1.7142857;margin-top:1.7142857em;margin-bottom:1.7142857em;border-radius:.375rem;padding:.8571429em 1.1428571em}.prose pre code{background-color:transparent;border-width:0;border-radius:0;padding:0;font-weight:400;color:inherit;font-size:inherit;font-family:inherit;line-height:inherit}.prose pre code:after,.prose pre code:before{content:none}.prose table{width:100%;table-layout:auto;text-align:left;margin-top:2em;margin-bottom:2em;font-size:.875em;line-height:1.7142857}.prose thead{color:#111827;font-weight:600;border-bottom-width:1px;border-bottom-color:#d1d5db}.prose thead th{vertical-align:bottom;padding-right:.5714286em;padding-bottom:.5714286em;padding-left:.5714286em}.prose tbody tr{border-bottom-width:1px;border-bottom-color:#e5e7eb}.prose tbody tr:last-child{border-bottom-width:0}.prose tbody td{vertical-align:top;padding:.5714286em}.prose{font-size:1rem;line-height:1.75}.prose p{color:#4b5563;margin-top:0;margin-bottom:1em;line-height:1.75rem}.prose figure,.prose img,.prose video{margin-top:2em;margin-bottom:2em}.prose figure>*{margin-top:0;margin-bottom:0}.prose h2 code{font-size:.875em}.prose h3 code{font-size:.9em}.prose ol,.prose ul{margin-top:1.25em;margin-bottom:1.25em}.prose li{margin-top:.5em;margin-bottom:.5em}.prose>ul>li p{margin-top:.75em;margin-bottom:.75em}.prose>ul>li>:first-child{margin-top:1.25em}.prose>ul>li>:last-child{margin-bottom:1.25em}.prose>ol>li>:first-child{margin-top:1.25em}.prose>ol>li>:last-child{margin-bottom:1.25em}.prose ol ol,.prose ol ul,.prose ul ol,.prose ul ul{margin-top:.75em;margin-bottom:.75em}.prose h2+*,.prose h3+*,.prose h4+*,.prose hr+*{margin-top:0}.prose thead th:first-child{padding-left:0}.prose thead th:last-child{padding-right:0}.prose tbody td:first-child{padding-left:0}.prose tbody td:last-child{padding-right:0}.prose>:first-child{margin-top:0}.prose>:last-child{margin-bottom:0}.prose-lg{font-size:1.125rem;line-height:1.7777778}.prose-lg p{margin-top:1.3333333em;margin-bottom:1.3333333em}.prose-lg [class~=lead]{font-size:1.2222222em;line-height:1.4545455;margin-top:1.0909091em;margin-bottom:1.0909091em}.prose-lg blockquote{margin-top:1.6666667em;margin-bottom:1.6666667em;padding-left:1em}.prose-lg h1{font-size:2.6666667em;margin-top:0;margin-bottom:.8333333em;line-height:1}.prose-lg h2{font-size:1.6666667em;margin-top:1.8666667em;margin-bottom:1.0666667em;line-height:1.3333333}.prose-lg h3{font-size:1.3333333em;margin-top:1.6666667em;margin-bottom:.6666667em;line-height:1.5}.prose-lg h4{margin-top:1.7777778em;margin-bottom:.4444444em;line-height:1.5555556}.prose-lg figure,.prose-lg img,.prose-lg video{margin-top:1.7777778em;margin-bottom:1.7777778em}.prose-lg figure>*{margin-top:0;margin-bottom:0}.prose-lg figure figcaption{font-size:.8888889em;line-height:1.5;margin-top:1em}.prose-lg code{font-size:.8888889em}.prose-lg h2 code{font-size:.8666667em}.prose-lg h3 code{font-size:.875em}.prose-lg pre{font-size:.8888889em;line-height:1.75;margin-top:2em;margin-bottom:2em;border-radius:.375rem;padding:1em 1.5em}.prose-lg ol,.prose-lg ul{margin-top:1.3333333em;margin-bottom:1.3333333em}.prose-lg li{margin-top:.6666667em;margin-bottom:.6666667em}.prose-lg ol>li{padding-left:1.6666667em}.prose-lg ol>li:before{left:0}.prose-lg ul>li{padding-left:1.6666667em}.prose-lg ul>li:before{width:.3333333em;height:.3333333em;top:.72222em;left:.2222222em}.prose-lg>ul>li p{margin-top:.8888889em;margin-bottom:.8888889em}.prose-lg>ul>li>:first-child{margin-top:1.3333333em}.prose-lg>ul>li>:last-child{margin-bottom:1.3333333em}.prose-lg>ol>li>:first-child{margin-top:1.3333333em}.prose-lg>ol>li>:last-child{margin-bottom:1.3333333em}.prose-lg ol ol,.prose-lg ol ul,.prose-lg ul ol,.prose-lg ul ul{margin-top:.8888889em;margin-bottom:.8888889em}.prose-lg hr{margin-top:3.1111111em;margin-bottom:3.1111111em}.prose-lg h2+*,.prose-lg h3+*,.prose-lg h4+*,.prose-lg hr+*{margin-top:0}.prose-lg table{font-size:.8888889em;line-height:1.5}.prose-lg thead th{padding-right:.75em;padding-bottom:.75em;padding-left:.75em}.prose-lg thead th:first-child{padding-left:0}.prose-lg thead th:last-child{padding-right:0}.prose-lg tbody td{padding:.75em}.prose-lg tbody td:first-child{padding-left:0}.prose-lg tbody td:last-child{padding-right:0}.prose-lg>:first-child{margin-top:0}.prose-lg>:last-child{margin-bottom:0}.relative{position:relative}.absolute{position:absolute}.static{position:static}.fixed{position:fixed}.inset-x-0{left:0;right:0}.bottom-0{bottom:0}.m-0{margin:0}.my-40{margin-top:10rem;margin-bottom:10rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-4{margin-left:1rem;margin-right:1rem}.my-24{margin-top:6rem;margin-bottom:6rem}.my-16{margin-top:4rem;margin-bottom:4rem}.my-8{margin-top:2rem;margin-bottom:2rem}.-mt-16{margin-top:-4rem}.mt-4{margin-top:1rem}.mb-6{margin-bottom:1.5rem}.mb-2{margin-bottom:.5rem}.mt-8{margin-top:2rem}.mt-6{margin-top:1.5rem}.mb-1{margin-bottom:.25rem}.ml-4{margin-left:1rem}.mb-4{margin-bottom:1rem}.mr-2{margin-right:.5rem}.ml-8{margin-left:2rem}.mt-1{margin-top:.25rem}.mt-12{margin-top:3rem}.mr-4{margin-right:1rem}.mt-2{margin-top:.5rem}.mt-16{margin-top:4rem}.mb-16{margin-bottom:4rem}.mr-12{margin-right:3rem}.mb-12{margin-bottom:3rem}.ml-2{margin-left:.5rem}.mt-24{margin-top:6rem}.mr-auto{margin-right:auto}.mb-8{margin-bottom:2rem}.ml-auto{margin-left:auto}.mb-24{margin-bottom:6rem}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.hidden{display:none}.h-4{height:1rem}.h-16{height:4rem}.h-6{height:1.5rem}.h-8{height:2rem}.h-auto{height:auto}.h-12{height:3rem}.h-full{height:100%}.h-10{height:2.5rem}.h-64{height:16rem}.h-40{height:10rem}.min-h-screen{min-height:100vh}.w-4{width:1rem}.w-16{width:4rem}.w-1\\/2{width:50%}.w-6{width:1.5rem}.w-8{width:2rem}.w-12{width:3rem}.w-64{width:16rem}.w-full{width:100%}.w-10{width:2.5rem}.max-w-xl{max-width:36rem}.max-w-screen-lg{max-width:1024px}.max-w-screen-2xl{max-width:1536px}.max-w-2xl{max-width:42rem}.max-w-lg{max-width:32rem}.max-w-screen-xl{max-width:1280px}.max-w-4xl{max-width:56rem}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.transform{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-pointer{cursor:pointer}.resize{resize:both}.list-none{list-style-type:none}.flex-col{flex-direction:column}.items-center{align-items:center}.justify-end{justify-content:flex-end}.justify-between{justify-content:space-between}.overflow-hidden{overflow:hidden}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded{border-radius:.25rem}.rounded-md{border-radius:.375rem}.border{border-width:1px}.border-t{border-top-width:1px}.border-b{border-bottom-width:1px}.border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.border-gray-600{--tw-border-opacity:1;border-color:rgba(75,85,99,var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-500{--tw-bg-opacity:1;background-color:rgba(16,185,129,var(--tw-bg-opacity))}.bg-black{--tw-bg-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity))}.bg-opacity-30{--tw-bg-opacity:0.3}.bg-gradient-to-t{background-image:linear-gradient(0deg,var(--tw-gradient-stops))}.from-black{--tw-gradient-from:#000;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,transparent)}.to-transparent{--tw-gradient-to:transparent}.fill-current{fill:currentColor}.stroke-1{stroke-width:1}.object-cover{-o-object-fit:cover;object-fit:cover}.p-0{padding:0}.p-3{padding:.75rem}.p-8{padding:2rem}.p-4{padding:1rem}.px-8{padding-left:2rem;padding-right:2rem}.py-8{padding-top:2rem;padding-bottom:2rem}.px-4{padding-left:1rem;padding-right:1rem}.px-2{padding-left:.5rem;padding-right:.5rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.pt-6{padding-top:1.5rem}.pt-4{padding-top:1rem}.pb-2{padding-bottom:.5rem}.pt-8{padding-top:2rem}.pb-4{padding-bottom:1rem}.pt-24{padding-top:6rem}.text-center{text-align:center}.text-right{text-align:right}.text-left{text-align:left}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-xs{font-size:.75rem;line-height:1rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-6xl{font-size:3.75rem;line-height:1}.text-lg{font-size:1.125rem;line-height:1.75rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-extrabold{font-weight:800}.font-normal{font-weight:400}.leading-8{line-height:2rem}.text-gray-400{--tw-text-opacity:1;color:rgba(156,163,175,var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgba(59,130,246,var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity:1;color:rgba(75,85,99,var(--tw-text-opacity))}.text-red-500{--tw-text-opacity:1;color:rgba(239,68,68,var(--tw-text-opacity))}.text-blue-400{--tw-text-opacity:1;color:rgba(96,165,250,var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgba(107,114,128,var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgba(55,65,81,var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-gray-100{--tw-text-opacity:1;color:rgba(243,244,246,var(--tw-text-opacity))}.text-gray-300{--tw-text-opacity:1;color:rgba(209,213,219,var(--tw-text-opacity))}.text-blue-600{--tw-text-opacity:1;color:rgba(37,99,235,var(--tw-text-opacity))}.underline{text-decoration:underline}.opacity-100{opacity:1}.opacity-0{opacity:0}.opacity-80{opacity:.8}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.filter{--tw-blur:var(--tw-empty,/*!*/ /*!*/);--tw-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-invert:var(--tw-empty,/*!*/ /*!*/);--tw-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-drop-shadow:var(--tw-empty,/*!*/ /*!*/);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition-colors{transition-property:background-color,border-color,color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition{transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-transform{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.duration-300{transition-duration:.3s}.duration{transition-duration:.15s}.duration-200{transition-duration:.2s}.hover\\:scale-105:hover{--tw-scale-x:1.05;--tw-scale-y:1.05}.hover\\:text-blue-700:hover{--tw-text-opacity:1;color:rgba(29,78,216,var(--tw-text-opacity))}.hover\\:text-blue-500:hover{--tw-text-opacity:1;color:rgba(59,130,246,var(--tw-text-opacity))}.hover\\:text-gray-800:hover{--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.hover\\:text-white:hover{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.dark .dark\\:prose-dark{color:#9ca3af}.dark .dark\\:prose-dark a{color:#60a5fa;text-decoration:none}.dark .dark\\:prose-dark a:hover,.dark .prose-dark a.dark\\:active{text-decoration:underline}.dark .dark\\:prose-dark strong{color:#f3f4f6}.dark .dark\\:prose-dark h1{text-align:center;color:#fff;margin-top:0}.dark .dark\\:prose-dark h1 a{color:inherit}.dark .dark\\:prose-dark h1 a:active,.dark .dark\\:prose-dark h1 a:hover{text-decoration:none}.dark .dark\\:prose-dark h2{text-align:center;color:#fff;margin-top:0}.dark .dark\\:prose-dark h2 a{color:inherit}.dark .dark\\:prose-dark h2 a:active,.dark .dark\\:prose-dark h2 a:hover{text-decoration:none}.dark .dark\\:prose-dark h3{text-align:center;color:#fff;margin-top:0}.dark .dark\\:prose-dark h3 a{color:inherit}.dark .dark\\:prose-dark h3 a:active,.dark .dark\\:prose-dark h3 a:hover{text-decoration:none}.dark .dark\\:prose-dark h4{text-align:center;color:#fff;margin-top:0}.dark .dark\\:prose-dark h4 a{color:inherit}.dark .dark\\:prose-dark h4 a:active,.dark .dark\\:prose-dark h4 a:hover{text-decoration:none}.dark .dark\\:prose-dark code{color:#9ca3af;background-color:#1f2937}.dark .dark\\:prose-dark code:after,.dark .dark\\:prose-dark code:before{display:none}.dark .dark\\:prose-dark p{color:#9ca3af;margin-top:0;margin-bottom:1em;line-height:1.75rem}.dark .dark\\:prose-dark blockquote{color:#f3f4f6}.dark .dark\\:prose-dark ul>li:before{background-color:#fff;font-weight:700}.dark .dark\\:prose-dark ol>li:before{color:#fff;font-weight:700}.dark .dark\\:border-gray-900{--tw-border-opacity:1;border-color:rgba(17,24,39,var(--tw-border-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgba(55,65,81,var(--tw-border-opacity))}.dark .dark\\:border-gray-600{--tw-border-opacity:1;border-color:rgba(75,85,99,var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgba(17,24,39,var(--tw-bg-opacity))}.dark .dark\\:bg-black{--tw-bg-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgba(31,41,55,var(--tw-bg-opacity))}.dark .dark\\:bg-green-800{--tw-bg-opacity:1;background-color:rgba(6,95,70,var(--tw-bg-opacity))}.dark .dark\\:text-gray-200{--tw-text-opacity:1;color:rgba(229,231,235,var(--tw-text-opacity))}.dark .dark\\:text-gray-600{--tw-text-opacity:1;color:rgba(75,85,99,var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgba(156,163,175,var(--tw-text-opacity))}.dark .dark\\:text-gray-500{--tw-text-opacity:1;color:rgba(107,114,128,var(--tw-text-opacity))}.dark .dark\\:text-gray-100{--tw-text-opacity:1;color:rgba(243,244,246,var(--tw-text-opacity))}.dark .dark\\:text-blue-200{--tw-text-opacity:1;color:rgba(191,219,254,var(--tw-text-opacity))}.dark .dark\\:hover\\:text-gray-600:hover{--tw-text-opacity:1;color:rgba(75,85,99,var(--tw-text-opacity))}@media (min-width:640px){.sm\\:-mx-4{margin-left:-1rem;margin-right:-1rem}.sm\\:mx-auto{margin-left:auto;margin-right:auto}.sm\\:mt-0{margin-top:0}.sm\\:mt-12{margin-top:3rem}.sm\\:flex{display:flex}.sm\\:w-1\\/3{width:33.333333%}.sm\\:flex-wrap{flex-wrap:wrap}.sm\\:py-12{padding-bottom:3rem}.sm\\:pt-12,.sm\\:py-12{padding-top:3rem}.sm\\:text-center{text-align:center}}@media (min-width:768px){.md\\:mt-0{margin-top:0}.md\\:ml-4{margin-left:1rem}.md\\:block{display:block}.md\\:w-1\\/4{width:25%}.md\\:flex-row{flex-direction:row}.md\\:py-4{padding-top:1rem;padding-bottom:1rem}.md\\:text-4xl{font-size:2.25rem;line-height:2.5rem}}@media (min-width:1024px){.lg\\:mt-2{margin-top:.5rem}.lg\\:ml-2{margin-left:.5rem}.lg\\:mt-6{margin-top:1.5rem}.lg\\:mb-4{margin-bottom:1rem}.lg\\:p-8{padding:2rem}.lg\\:px-0{padding-left:0;padding-right:0}.lg\\:text-6xl{font-size:3.75rem;line-height:1}}@media (min-width:1280px){.xl\\:mt-0{margin-top:0}.xl\\:ml-auto{margin-left:auto}.xl\\:w-1\\/6{width:16.666667%}.xl\\:text-left{text-align:left}}@media (min-width:1536px){.\\32xl\\:px-0{padding-left:0;padding-right:0}}';
const KEY = "theme";
const SCHEME = "(prefers-color-scheme: dark)";
const DarkModeToggle = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let theme = "light";
  const THEME = {dark: "dark", light: "light"};
  const dispatch = createEventDispatcher();
  const validTheme = (t) => t in THEME;
  const handleChange = (e) => theme = e.matches ? THEME.dark : THEME.light;
  onMount(() => {
    const darkMode = matchMedia(SCHEME);
    const persisted_theme = localStorage.getItem(KEY);
    if (validTheme(persisted_theme)) {
      theme = persisted_theme;
    } else {
      theme = darkMode.matches ? THEME.dark : THEME.light;
    }
    darkMode.addEventListener("change", handleChange);
    return () => {
      darkMode.removeEventListener("change", handleChange);
    };
  });
  afterUpdate(() => {
    if (validTheme(theme)) {
      dispatch("change", theme);
      localStorage.setItem(KEY, theme);
      document.body.className = theme;
    }
  });
  return `<svg aria-hidden="${"true"}" focusable="${"false"}" data-prefix="${"far"}" data-icon="${"lightbulb"}" class="${"h-4 w-4 cursor-pointer dark:text-gray-200 fill-current"}" role="${"img"}" xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 352 512"}"><path d="${"M176 80c-52.94 0-96 43.06-96 96 0 8.84 7.16 16 16 16s16-7.16 16-16c0-35.3 28.72-64 64-64 8.84 0 16-7.16 16-16s-7.16-16-16-16zM96.06 459.17c0 3.15.93 6.22 2.68 8.84l24.51 36.84c2.97 4.46 7.97 7.14 13.32 7.14h78.85c5.36 0 10.36-2.68 13.32-7.14l24.51-36.84c1.74-2.62 2.67-5.7 2.68-8.84l.05-43.18H96.02l.04 43.18zM176 0C73.72 0 0 82.97 0 176c0 44.37 16.45 84.85 43.56 115.78 16.64 18.99 42.74 58.8 52.42 92.16v.06h48v-.12c-.01-4.77-.72-9.51-2.15-14.07-5.59-17.81-22.82-64.77-62.17-109.67-20.54-23.43-31.52-53.15-31.61-84.14-.2-73.64 59.67-128 127.95-128 70.58 0 128 57.42 128 128 0 30.97-11.24 60.85-31.65 84.14-39.11 44.61-56.42 91.47-62.1 109.46a47.507 47.507 0 0 0-2.22 14.3v.1h48v-.05c9.68-33.37 35.78-73.18 52.42-92.16C335.55 260.85 352 220.37 352 176 352 78.8 273.2 0 176 0z"}"></path></svg>`;
});
const Nav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<nav class="${"mx-auto px-4 flex justify-between pt-4 border-b pb-2 mb-4 dark:border-gray-700"}"><div class="${"flex"}"><h1 class="${"dark:text-gray-100"}">Matsimitsu</h1>
    <h3 class="${"ml-4 text-gray-600 hidden md:block dark:text-gray-400"}">Robert Beekman</h3></div>
  <ul class="${"flex items-center dark:text-gray-200"}"><li><a href="${"/"}">Home</a></li>
    <li class="${"ml-4"}"><a sveltekit:prefetch href="${"/blog"}">Blog</a></li>
    <li class="${"ml-4"}"><a sveltekit:prefetch href="${"/trips"}">Trips</a></li>
    <li class="${"ml-4"}"><a sveltekit:prefetch href="${"/notes"}">Notes</a></li>
    <li class="${"ml-4"}"><a sveltekit:prefetch href="${"/about"}">About</a></li>
    <li class="${"ml-4"}"><a sveltekit:prefetch href="${"/uses"}">Tech</a></li>
    <li class="${"ml-4"}">${validate_component(DarkModeToggle, "DarkModeToggle").$$render($$result, {}, {}, {})}</li></ul></nav>`;
});
const Footer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<footer class="${"footer-1 bg-gray-100 py-8 sm:py-12 text-gray-600 dark:bg-gray-800 dark:text-gray-400"}"><div class="${"container mx-auto px-4"}"><div class="${"sm:flex sm:flex-wrap sm:-mx-4 md:py-4 px-4"}"><div class="${"px-4 w-1/2 md:w-1/4 xl:w-1/6"}"><h5 class="${"text-xl font-bold mb-6"}">Blog</h5>
        <ul class="${"list-none footer-links"}"><li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Cool stuff</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Random feature</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Team feature</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Stuff for developers</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Another one</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Last time</a></li></ul></div>
      <div class="${"px-4 w-1/2 md:w-1/4 xl:w-1/6 mt-8 sm:mt-0"}"><h5 class="${"text-xl font-bold mb-6"}">Trips</h5>
        <ul class="${"list-none footer-links"}"><li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Resource</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Resource name</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Another resource</a></li>
          <li class="${"mb-2"}"><a href="${"/feeds/trips.xml"}" class="${"hover:text-blue-500"}">Trips RSS feed</a></li></ul></div>
      <div class="${"px-4 w-1/2 md:w-1/4 xl:w-1/6 mt-8 md:mt-0"}"><h5 class="${"text-xl font-bold mb-6"}">Notes</h5>
        <ul class="${"list-none footer-links"}"><li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Team</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Locations</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Privacy</a></li>
          <li class="${"mb-2"}"><a href="${"#"}" class="${"hover:text-blue-500"}">Terms</a></li></ul></div>
      <div class="${"px-4 w-1/2 md:w-1/4 xl:w-1/6 mt-8 md:mt-0"}"><h5 class="${"text-xl font-bold mb-6"}">About</h5>
        <ul class="${"list-none footer-links"}"><li class="${"mb-2"}"><a href="${"/about"}" class="${"hover:text-blue-500"}">About me</a></li>
          <li class="${"mb-2"}"><a href="${"/uses"}" class="${"hover:text-blue-500"}">Tech</a></li></ul></div>
      <div class="${"px-4 mt-4 sm:w-1/3 xl:w-1/6 sm:mx-auto sm:text-center xl:text-left xl:mt-0 xl:ml-auto"}"><h5 class="${"text-xl font-bold mb-6 "}">Credits</h5>
				<ul class="${"list-none footer-links"}"><li class="${"mb-2"}">Icons by <a class="${"hover:text-blue-500"}" href="${"https://fontawesome.com"}">FontAwesome</a></li>
          <li class="${"mb-2"}">Maps from <a class="${"hover:text-blue-500"}" href="${"https://github.com/topojson/world-atlas"}">Topojson</a></li></ul></div></div>

    <div class="${"flex justify-between items-center mt-6 pt-6 sm:mt-12 sm:pt-12 border-t dark:border-gray-700 text-gray-400"}"><div class="${"px-4"}">Made with
				<svg aria-hidden="${"true"}" focusable="${"false"}" data-prefix="${"fas"}" data-icon="${"heart"}" class="${"inline text-red-500 mb-1 h-4 w-4"}" role="${"img"}" xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 512 512"}"><path fill="${"currentColor"}" d="${"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"}"></path></svg>
				and <a class="${"text-blue-400 hover:text-blue-500"}" href="${"https://svelte.dev"}">Svelte</a></div>
      <div class="${"px-4 text-center mx-auto"}">\xA9 ${escape(new Date().getFullYear())} Matsimitsu
      </div>
      <div class="${"flex justify-end px-4"}"><a href="${"https://twitter.com/matsimitsu"}" class="${"hover:text-blue-500"}"><svg aria-hidden="${"true"}" focusable="${"false"}" data-prefix="${"fab"}" data-icon="${"twitter"}" class="${"svg-inline--fa fa-twitter h-6 w-6"}" role="${"img"}" xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 512 512"}"><path fill="${"currentColor"}" d="${"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"}"></path></svg></a>
				<a href="${"https://github.com/matsimitsu"}" class="${"hover:text-blue-500 ml-4"}"><svg aria-hidden="${"true"}" focusable="${"false"}" data-prefix="${"fab"}" data-icon="${"github-alt"}" class="${"svg-inline--fa fa-github-alt h-6 w-6"}" role="${"img"}" xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 480 512"}"><path fill="${"currentColor"}" d="${"M186.1 328.7c0 20.9-10.9 55.1-36.7 55.1s-36.7-34.2-36.7-55.1 10.9-55.1 36.7-55.1 36.7 34.2 36.7 55.1zM480 278.2c0 31.9-3.2 65.7-17.5 95-37.9 76.6-142.1 74.8-216.7 74.8-75.8 0-186.2 2.7-225.6-74.8-14.6-29-20.2-63.1-20.2-95 0-41.9 13.9-81.5 41.5-113.6-5.2-15.8-7.7-32.4-7.7-48.8 0-21.5 4.9-32.3 14.6-51.8 45.3 0 74.3 9 108.8 36 29-6.9 58.8-10 88.7-10 27 0 54.2 2.9 80.4 9.2 34-26.7 63-35.2 107.8-35.2 9.8 19.5 14.6 30.3 14.6 51.8 0 16.4-2.6 32.7-7.7 48.2 27.5 32.4 39 72.3 39 114.2zm-64.3 50.5c0-43.9-26.7-82.6-73.5-82.6-18.9 0-37 3.4-56 6-14.9 2.3-29.8 3.2-45.1 3.2-15.2 0-30.1-.9-45.1-3.2-18.7-2.6-37-6-56-6-46.8 0-73.5 38.7-73.5 82.6 0 87.8 80.4 101.3 150.4 101.3h48.2c70.3 0 150.6-13.4 150.6-101.3zm-82.6-55.1c-25.8 0-36.7 34.2-36.7 55.1s10.9 55.1 36.7 55.1 36.7-34.2 36.7-55.1-10.9-55.1-36.7-55.1z"}"></path></svg></a>
				<a href="${"mailto:hello@matsimitsu.nl"}" class="${"hover:text-blue-500 ml-4"}"><svg aria-hidden="${"true"}" focusable="${"false"}" data-prefix="${"far"}" data-icon="${"envelope"}" class="${"svg-inline--fa fa-envelope h-6 w-6"}" role="${"img"}" xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 512 512"}"><path fill="${"currentColor"}" d="${"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z"}"></path></svg></a></div></div></div></footer>`;
});
const _layout$3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})}
${slots.default ? slots.default({}) : ``}
${validate_component(Footer, "Footer").$$render($$result, {}, {}, {})}`;
});
var __layout$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout$3
});
function load$6({error: error2, status}) {
  return {props: {error: error2, status}};
}
const Error = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {status} = $$props;
  let {error: error2} = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape(status)}</h1>

<p>${escape(error2.message)}</p>


${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Error,
  load: load$6
});
var index_svelte_svelte_type_style_lang = "main.svelte-51qglc{text-align:center;padding:1rem;margin-left:auto;margin-right:auto}h1.svelte-51qglc{--tw-text-opacity:1;color:rgba(220,38,38,var(--tw-text-opacity));text-transform:uppercase;font-size:3.75rem;line-height:1;font-weight:100;line-height:1.25;margin:4rem auto}h1.svelte-51qglc,p.svelte-51qglc{max-width:20rem}p.svelte-51qglc{margin:2rem auto;line-height:1.375}@media(min-width:640px){h1.svelte-51qglc,p.svelte-51qglc{max-width:none}}";
const css$3 = {
  code: "main.svelte-51qglc{text-align:center;padding:1rem;margin-left:auto;margin-right:auto}h1.svelte-51qglc{--tw-text-opacity:1;color:rgba(220,38,38,var(--tw-text-opacity));text-transform:uppercase;font-size:3.75rem;line-height:1;font-weight:100;line-height:1.25;margin:4rem auto}h1.svelte-51qglc,p.svelte-51qglc{max-width:20rem}p.svelte-51qglc{margin:2rem auto;line-height:1.375}@media(min-width:640px){h1.svelte-51qglc,p.svelte-51qglc{max-width:none}}",
  map: '{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script>\\n</script>\\n\\n<main>\\n\\t<h1>Hello world!</h1>\\n\\n\\n\\t<p>Visit <a class=\\"text-blue-600 underline dark:text-blue-200\\" href=\\"/trips/egypt-2009\\">Egypt 2009</a> to view a trip.</p>\\n</main>\\n\\n<style style lang=\\"postcss\\">main{text-align:center;padding:1rem;margin-left:auto;margin-right:auto}h1{--tw-text-opacity:1;color:rgba(220,38,38,var(--tw-text-opacity));text-transform:uppercase;font-size:3.75rem;line-height:1;font-weight:100;line-height:1.25;margin:4rem auto}h1,p{max-width:20rem}p{margin:2rem auto;line-height:1.375}@media (min-width:640px){h1,p{max-width:none}}</style>\\n"],"names":[],"mappings":"AAU4B,kBAAI,CAAC,WAAW,MAAM,CAAC,QAAQ,IAAI,CAAC,YAAY,IAAI,CAAC,aAAa,IAAI,CAAC,gBAAE,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,eAAe,SAAS,CAAC,UAAU,OAAO,CAAC,YAAY,CAAC,CAAC,YAAY,GAAG,CAAC,YAAY,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAE,CAAC,eAAC,CAAC,UAAU,KAAK,CAAC,eAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,CAAC,MAAM,AAAC,WAAW,KAAK,CAAC,CAAC,gBAAE,CAAC,eAAC,CAAC,UAAU,IAAI,CAAC,CAAC"}'
};
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$3);
  return `<main class="${"svelte-51qglc"}"><h1 class="${"svelte-51qglc"}">Hello world!</h1>


	<p class="${"svelte-51qglc"}">Visit <a class="${"text-blue-600 underline dark:text-blue-200"}" href="${"/trips/egypt-2009"}">Egypt 2009</a> to view a trip.</p>
</main>`;
});
var index$b = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Routes
});
const Mdsvex$2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div class="${"mx-auto prose prose-lg px-4 dark:prose-dark my-24"}">${slots.default ? slots.default({}) : ``}</div>`;
});
var ResponsiveImage_svelte_svelte_type_style_lang = ".single.svelte-1c2qn6w.svelte-1c2qn6w{margin-top:.5rem;max-width:1536px;padding-left:.5rem;padding-right:.5rem}@media(min-width:1024px){.single.svelte-1c2qn6w.svelte-1c2qn6w{margin-top:.5rem}}@media(min-width:1536px){.single.svelte-1c2qn6w.svelte-1c2qn6w{padding-left:0;padding-right:0}}.inPanel.svelte-1c2qn6w.svelte-1c2qn6w{margin-left:.5rem}.inPanel.svelte-1c2qn6w.svelte-1c2qn6w:first-child{margin-left:0}@media(min-width:1024px){.inPanel.svelte-1c2qn6w.svelte-1c2qn6w{margin-left:.5rem}}.noPadding.svelte-1c2qn6w.svelte-1c2qn6w{padding-left:0;padding-right:0}.rounded.svelte-1c2qn6w>img.svelte-1c2qn6w{border-radius:.375rem}.full.svelte-1c2qn6w.svelte-1c2qn6w{max-width:100%}img.svelte-1c2qn6w.svelte-1c2qn6w{margin-top:0;margin-bottom:0}";
const css$2 = {
  code: ".single.svelte-1c2qn6w.svelte-1c2qn6w{margin-top:.5rem;max-width:1536px;padding-left:.5rem;padding-right:.5rem}@media(min-width:1024px){.single.svelte-1c2qn6w.svelte-1c2qn6w{margin-top:.5rem}}@media(min-width:1536px){.single.svelte-1c2qn6w.svelte-1c2qn6w{padding-left:0;padding-right:0}}.inPanel.svelte-1c2qn6w.svelte-1c2qn6w{margin-left:.5rem}.inPanel.svelte-1c2qn6w.svelte-1c2qn6w:first-child{margin-left:0}@media(min-width:1024px){.inPanel.svelte-1c2qn6w.svelte-1c2qn6w{margin-left:.5rem}}.noPadding.svelte-1c2qn6w.svelte-1c2qn6w{padding-left:0;padding-right:0}.rounded.svelte-1c2qn6w>img.svelte-1c2qn6w{border-radius:.375rem}.full.svelte-1c2qn6w.svelte-1c2qn6w{max-width:100%}img.svelte-1c2qn6w.svelte-1c2qn6w{margin-top:0;margin-bottom:0}",
  map: `{"version":3,"file":"ResponsiveImage.svelte","sources":["ResponsiveImage.svelte"],"sourcesContent":["<script>\\n\\timport { getContext } from 'svelte';\\n\\n\\texport let src;\\n\\texport let alt;\\n\\texport let noPadding = false;\\n\\texport let rounded = false\\n\\texport let width, height;\\n\\texport let full = false;\\n\\tlet style;\\n\\tlet inPanel = getContext('inPanel') || false;\\n\\n\\t// Remove file extension from source\\n\\tif (src) {\\n\\t\\tsrc = src.split('.');\\n\\t\\tsrc.pop();\\n\\t\\tsrc = src.join('.');\\n\\t}\\n\\tif (!alt) {\\n\\t\\tconst [name] = src.split('/').slice(-1);\\n\\t\\talt = name;\\n\\t}\\n\\n\\tfunction srcsetForExtension(ext) {\\n\\t\\treturn [360, 720, 1200, 2200]\\n\\t\\t\\t.map((size) => {\\n\\t\\t\\t\\treturn \`\${src}-\${size}.\${ext} \${size}w\`;\\n\\t\\t\\t})\\n\\t\\t\\t.join(', ');\\n\\t}\\n\\n\\tstyle = \`flex: \${width / height}\`;\\n</script>\\n\\n<picture\\n\\t{style}\\n\\tclass:single={!inPanel}\\n\\tclass:full\\n\\tclass=\\"mx-auto block overflow-hidden\\"\\n\\tclass:inPanel\\n\\tclass:noPadding\\n\\tclass:rounded\\n>\\n\\t<source type=\\"image/jpg\\" srcset={srcsetForExtension('jpg')} />\\n\\t<source type=\\"image/webp\\" srcset={srcsetForExtension('webp')} />\\n\\t<source type=\\"image/avif\\" srcset={srcsetForExtension('avif')} />\\n\\t<img loading=\\"lazy\\" {width} {height} class=\\"block mx-auto h-auto\\" src=\\"{src}-720.jpg\\" {alt} />\\n</picture>\\n\\n<style>.single{margin-top:.5rem;max-width:1536px;padding-left:.5rem;padding-right:.5rem}@media (min-width:1024px){.single{margin-top:.5rem}}@media (min-width:1536px){.single{padding-left:0;padding-right:0}}.inPanel{margin-left:.5rem}.inPanel:first-child{margin-left:0}@media (min-width:1024px){.inPanel{margin-left:.5rem}}.noPadding{padding-left:0;padding-right:0}.rounded>img{border-radius:.375rem}.full{max-width:100%}img{margin-top:0;margin-bottom:0}</style>\\n"],"names":[],"mappings":"AAiDO,qCAAO,CAAC,WAAW,KAAK,CAAC,UAAU,MAAM,CAAC,aAAa,KAAK,CAAC,cAAc,KAAK,CAAC,MAAM,AAAC,WAAW,MAAM,CAAC,CAAC,qCAAO,CAAC,WAAW,KAAK,CAAC,CAAC,MAAM,AAAC,WAAW,MAAM,CAAC,CAAC,qCAAO,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,sCAAQ,CAAC,YAAY,KAAK,CAAC,sCAAQ,YAAY,CAAC,YAAY,CAAC,CAAC,MAAM,AAAC,WAAW,MAAM,CAAC,CAAC,sCAAQ,CAAC,YAAY,KAAK,CAAC,CAAC,wCAAU,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,CAAC,uBAAQ,CAAC,kBAAG,CAAC,cAAc,OAAO,CAAC,mCAAK,CAAC,UAAU,IAAI,CAAC,iCAAG,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,CAAC"}`
};
const ResponsiveImage = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {src} = $$props;
  let {alt} = $$props;
  let {noPadding = false} = $$props;
  let {rounded = false} = $$props;
  let {width} = $$props, {height} = $$props;
  let {full = false} = $$props;
  let style;
  let inPanel = getContext("inPanel") || false;
  if (src) {
    src = src.split(".");
    src.pop();
    src = src.join(".");
  }
  if (!alt) {
    const [name] = src.split("/").slice(-1);
    alt = name;
  }
  function srcsetForExtension(ext) {
    return [360, 720, 1200, 2200].map((size) => {
      return `${src}-${size}.${ext} ${size}w`;
    }).join(", ");
  }
  style = `flex: ${width / height}`;
  if ($$props.src === void 0 && $$bindings.src && src !== void 0)
    $$bindings.src(src);
  if ($$props.alt === void 0 && $$bindings.alt && alt !== void 0)
    $$bindings.alt(alt);
  if ($$props.noPadding === void 0 && $$bindings.noPadding && noPadding !== void 0)
    $$bindings.noPadding(noPadding);
  if ($$props.rounded === void 0 && $$bindings.rounded && rounded !== void 0)
    $$bindings.rounded(rounded);
  if ($$props.width === void 0 && $$bindings.width && width !== void 0)
    $$bindings.width(width);
  if ($$props.height === void 0 && $$bindings.height && height !== void 0)
    $$bindings.height(height);
  if ($$props.full === void 0 && $$bindings.full && full !== void 0)
    $$bindings.full(full);
  $$result.css.add(css$2);
  return `<picture${add_attribute("style", style, 0)} class="${[
    "mx-auto block overflow-hidden svelte-1c2qn6w",
    (!inPanel ? "single" : "") + " " + (full ? "full" : "") + " " + (inPanel ? "inPanel" : "") + " " + (noPadding ? "noPadding" : "") + " " + (rounded ? "rounded" : "")
  ].join(" ").trim()}"><source type="${"image/jpg"}"${add_attribute("srcset", srcsetForExtension("jpg"), 0)}>
	<source type="${"image/webp"}"${add_attribute("srcset", srcsetForExtension("webp"), 0)}>
	<source type="${"image/avif"}"${add_attribute("srcset", srcsetForExtension("avif"), 0)}>
	<img loading="${"lazy"}"${add_attribute("width", width, 0)}${add_attribute("height", height, 0)} class="${"block mx-auto h-auto svelte-1c2qn6w"}" src="${escape(src) + "-720.jpg"}"${add_attribute("alt", alt, 0)}>
</picture>`;
});
const metadata$I = {
  "title": "About me",
  "subtitle": "I'm a developer at AppSignal",
  "summary": "About me, Robert Beekman, a software developer at AppSignal who loves to travel."
};
const About = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$I), {}, {
    default: () => `<h1 id="${"about-me"}"><a href="${"#about-me"}">About me</a></h1>
<p>I believe this is the 5th incarnation of this site, but the core concept has always been the same to write about my travels as they happen, so I can enjoy them again at a later date.</p>
<p>It started when I was planning my first trip to Japan and was looking for inspiration. I stumbled upon two websites <a href="${"http://15daysinjapan.com/"}" rel="${"nofollow"}">http://15daysinjapan.com/</a> and <a href="${"http://19daysinjapan.com/"}" rel="${"nofollow"}">http://19daysinjapan.com/</a> that showed beautifull images and stories written in a daily blog style. Later on I found <a href="${"https://paulstamatiou.com/"}" rel="${"nofollow"}">https://paulstamatiou.com/</a> that does the same, but takes it to a higher level with his design skills. I really enjoyed reading the stories and the photos and decided to the same from then on.</p>
<p>At the end of every day on holiday I empty my camera and quickly pick the best photos to upload them over night (Internet isn\u2019t always the best in hotels). I write the posts every night so I don\u2019t forget what happened that day. Especially on long trips the days start to blend together and it becomes hard to remember what you did each day.</p>
<p>It took a few years of convincing but my travel buddy <a href="${"https://travel.onnogroen"}" rel="${"nofollow"}">started to do the same</a>. Other sites I recommend in this category are <a href="${"https://akanekinomoto.com/"}" rel="${"nofollow"}">https://akanekinomoto.com/</a> and <a href="${"https://mutelife.com/"}" rel="${"nofollow"}">https://mutelife.com/</a></p>
<h2 id="${"whats-in-my-bag"}"><a href="${"#whats-in-my-bag"}">What\u2019s in my bag</a></h2>
<p>My first real camera was a <strong>Nikon D50</strong> with a kit-lens and a Nikon 70-300. It didn\u2019t take long before it was replaced with a <strong>Nikon D90</strong> with a <strong>Tamron 28-75</strong> and a <strong>Nikon 10-47</strong> which was my favourite lens combination for a very long time.</p>
<p>After a few years I noticed that I would miss shots, because I didn\u2019t want to take out the \u201Cbig\u201D camera, or it took too long to take it out and set it up.</p>
<p>The <a href="${"https://www.peakdesign.com/products/capture"}" rel="${"nofollow"}">Peak Design Capture clip</a> helped a bit, but having a full-size DSLR on your belt or in front of your backpack all day long became cumbersome.</p>
<p>The D90 was one of the first camera\u2019s with a video mode in 1080 resolution, but as with many first-time devices, it wasn\u2019t very good. This lead me to buy a <strong>Sony RX10</strong> when I <a href="${"https://matsimitsu.com/trips/asia-2014"}" rel="${"nofollow"}">was in Japan</a>. It could fit in a jacket pocket for easy access.</p>
<p>While a great little camera that produced very nice photo\u2019s, the lack of a viewfinder was becoming more and more annoying, especially on sunny days where you couldn\u2019t see anything on the screen. Years of abuse started to <a href="${"https://matsimitsu.com/blog/2018-04-08-fix-rx100-startup-issue/"}" rel="${"nofollow"}">take its toll</a> on the camera, it was always in my bag, with keys and other metal objects.</p>
<p>At this point the D90 was starting to show its age, especially in night-time conditions or indoors. Someone made me an offer on the old camera with lenses and I sold the entire set, replacing it with a <strong>Sony A6000</strong> (bought in the exact same shop in Tokyo as the RX100 <a href="${"http://localhost:4567/trips/asia-2017"}" rel="${"nofollow"}">a few years later</a>).</p>
<p>The kit-lens was okay, but I wanted a better image quality, so I took a good look at all my photo\u2019s in Lightroom and discovered that most of the photo\u2019s were made in a few very specific ranges. (12-14) and (28-35), this lead me to buy the much praised <strong>Samyang 14mm f/2.8</strong> and the <strong>Sigma 30mm F/1.4</strong>. With these two primes and the kit-lens for other occasions I have all the coverage I need for the kind of photo\u2019s I take.</p>
<p>This setup has stayed the same for the last few years, for me it has the perfect combination of range and quality in a compact package. It only takes up a small portion of my <strong>Boundary Supply</strong> <a href="${"https://www.boundarysupply.com/products/prima-system"}" rel="${"nofollow"}">prima system backpack.</a>.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/site/me-zhanjiejie.jpg",
      width: "2200",
      height: "1650"
    }, {}, {})}
<h2 id="${"this-site"}"><a href="${"#this-site"}">This site</a></h2>
<p>I\u2019ve blogged about my change back to a static site a little while ago. This site is a so called \u201Cstatic site\u201D generated by <a href="${"https://middlemanapp.com"}" rel="${"nofollow"}">middleman</a> a Ruby static site generator.</p>
<p>It\u2019s served by <a href="${"https://netlify.com"}" rel="${"nofollow"}">netlify</a> an awesome (free) static site hosting company. The images and videos are served by <strong>Amazon Cloudfront</strong>, as the site would become too big to serve with Netlify, there\u2019s a 1GB limit and the (non-resized) photo\u2019s alone are ten times that right now.</p>
<p>You can find the source-code of this site on <a href="${"https://github.com/matsimitsu/matsimitsu.com"}" rel="${"nofollow"}">GitHub</a>.</p>`
  })}`;
});
var about = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": About,
  metadata: metadata$I
});
const FormattedDate = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {date} = $$props;
  if ($$props.date === void 0 && $$bindings.date && date !== void 0)
    $$bindings.date(date);
  return `<time${add_attribute("datetime", new Date(date).toISOString(), 0)}>${escape(new Date(date).toLocaleDateString())}</time>`;
});
const Note = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {note} = $$props;
  if ($$props.note === void 0 && $$bindings.note && note !== void 0)
    $$bindings.note(note);
  return `<a sveltekit:prefetch${add_attribute("href", note.url, 0)} class="${"flex items-center max-w-xl mx-auto block mb-4 border-b pb-2 transform hover:scale-105 duration-200 transition transition-transform"}"><p class="${"text-sm text-gray-400 dark:text-gray-600"}">${validate_component(FormattedDate, "FormattedDate").$$render($$result, {date: note.date}, {}, {})}</p>
  <h2 class="${"text-2xl ml-4 font-bold text-gray-700 dark:text-gray-200"}">${escape(note.title)}</h2></a>`;
});
const ReturnToCategory = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {path} = $$props;
  let {text} = $$props;
  if ($$props.path === void 0 && $$bindings.path && path !== void 0)
    $$bindings.path(path);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  return `<div class="${"mt-24 border-t border-b dark:border-gray-600 border-gray-200 py-8 px-4"}"><div class="${"mx-auto container"}"><a sveltekit:prefetch${add_attribute("href", path, 0)} class="${"flex mr-auto items-center px-2 2xl:px-0 overflow-hidden text-gray-600 dark:text-gray-400 dark:hover:text-gray-600 hover:text-gray-800"}"><svg aria-hidden="${"true"}" focusable="${"false"}" data-prefix="${"fas"}" data-icon="${"arrow-left"}" class="${"w-12 h-12 p-3 rounded-full border border-gray-600 dark:border-gray-600"}" role="${"img"}" xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 448 512"}"><path fill="${"currentColor"}" d="${"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z"}"></path></svg>
		<span class="${"ml-4 mr-auto font-extrabold leading-8 text-2xl font-bold"}">${escape(text)}</span></a></div></div>`;
});
async function load$5({fetch}) {
  const req = await fetch(`/notes.json`);
  return {props: {notes: await req.json()}};
}
const _layout$2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {notes: notes2 = []} = $$props;
  if ($$props.notes === void 0 && $$bindings.notes && notes2 !== void 0)
    $$bindings.notes(notes2);
  return `${slots.default ? slots.default({}) : ``}

<div class="${"mt-24 mb-24 border-t dark:border-gray-600 border-gray-200 pt-24 px-4"}">${each(notes2.slice(0, 10), (note) => `${validate_component(Note, "Note").$$render($$result, {note}, {}, {})}`)}</div>
${validate_component(ReturnToCategory, "ReturnToCategory").$$render($$result, {path: "/notes", text: "Return to notes"}, {}, {})}`;
});
var __layout$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout$2,
  load: load$5
});
const getStores = () => {
  const stores = getContext("__svelte__");
  return {
    page: {
      subscribe: stores.page.subscribe
    },
    navigating: {
      subscribe: stores.navigating.subscribe
    },
    get preloading() {
      console.error("stores.preloading is deprecated; use stores.navigating instead");
      return {
        subscribe: stores.navigating.subscribe
      };
    },
    session: stores.session
  };
};
const page = {
  subscribe(fn) {
    const store = getStores().page;
    return store.subscribe(fn);
  }
};
const Mdsvex$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  let {title} = $$props;
  let {date} = $$props;
  let {image = null} = $$props;
  const headerImage = image ? image.src.replace(".jpg", "-720.jpg") : null;
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.date === void 0 && $$bindings.date && date !== void 0)
    $$bindings.date(date);
  if ($$props.image === void 0 && $$bindings.image && image !== void 0)
    $$bindings.image(image);
  $$unsubscribe_page();
  return `${$$result.head += `<meta property="${"og:title"}" content="${escape(title) + " - Matsimitsu.com"}" data-svelte="svelte-zv7lw3"><meta property="${"og:locale"}" content="${"en_US"}" data-svelte="svelte-zv7lw3"><meta property="${"og:type"}" content="${"website"}" data-svelte="svelte-zv7lw3"><meta name="${"twitter:card"}" content="${"summary"}" data-svelte="svelte-zv7lw3"><meta name="${"twitter:creator"}" content="${"@matsimitsu"}" data-svelte="svelte-zv7lw3"><meta property="${"og:url"}" content="${"https://matsimitsu.com" + escape($page.path)}" data-svelte="svelte-zv7lw3"><link rel="${"canonical"}" href="${"https://matsimitsu.com" + escape($page.path)}" data-svelte="svelte-zv7lw3">${image ? `<meta property="${"og:image"}"${add_attribute("content", headerImage, 0)} data-svelte="svelte-zv7lw3">
		<meta property="${"og:image:alt"}"${add_attribute("content", image.alt, 0)} data-svelte="svelte-zv7lw3">
		<meta name="${"twitter:card"}" content="${"summary_large_image"}" data-svelte="svelte-zv7lw3">` : `<meta name="${"twitter:card"}" content="${"summary"}" data-svelte="svelte-zv7lw3">`}<link rel="${"alternate"}" type="${"application/rss+xml"}" title="${"Matsimitsu.com - Robert Beekman - Blog RSS Feed"}" href="${"/feeds/notes.xml"}" data-svelte="svelte-zv7lw3">`, ""}

<div class="${"mx-auto container my-24 text-center max-w-4xl"}"><p class="${"mx-auto text-sm text-gray-400 mb-4"}">${validate_component(FormattedDate, "FormattedDate").$$render($$result, {date}, {}, {})}</p>
	<h1 class="${"font-extrabold tracking-snug text-6xl font-bold text-gray-800 dark:text-gray-200 mb-8"}">${escape(title)}</h1>
	<hr class="${"mx-auto w-64 mt-4 dark:border-gray-600"}"></div>
<div class="${"mx-auto prose prose-lg px-4 dark:prose-dark my-24"}">${slots.default ? slots.default({}) : ``}</div>`;
});
const metadata$H = {
  "date": "2020-11-04T12:23:02.648Z",
  "title": "\u{1F35C} Firecracker Salmon & Cauliflower Rice",
  "category": "recipes",
  "layout": "note"
};
const _2020_11_04_firecracker_salmon_and_cauliflower_rice = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$H), {}, {
    default: () => `<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/20201103-DSC01272-720.jpg"}" alt="${"20201103-DSC01272.jpg"}" title="${"1.5"}"></p>
<p>Delicious Cauliflower Rice with pan-seared Salmon covered in a sauce made of Soy Sauce, Sambal, Suger and Garlic. Delicious!</p>
<p>For Firecracker Sauce</p>
<ul><li>2 tbsp soy sauce</li>
<li>2 tbsp sambal</li>
<li>2 tbsp sugar</li>
<li>1 tbsp chopped garlic (approximately 3 to 4 cloves)</li></ul>
<p>For Cauliflower Rice</p>
<ul><li>1 lb riced cauliflower</li>
<li>1 tbsp sesame oil</li>
<li>1 tbsp sesame seeds</li>
<li>1 to 2 green onions, chopped</li></ul>
<p>(<a href="${"https://seonkyounglongest.com/firecracker-salmon/"}" rel="${"nofollow"}">source</a>)</p>`
  })}`;
});
var _20201104FirecrackerSalmonAndCauliflowerRice = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_11_04_firecracker_salmon_and_cauliflower_rice,
  metadata: metadata$H
});
const metadata$G = {
  "date": "2020-08-27T09:21:07.554Z",
  "title": "\u{1F5D2}\uFE0F Boundary Supply Prima system support",
  "category": "notes",
  "layout": "note"
};
const _2020_08_27_Boundary_Supply_Prima_system_support = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$G), {}, {
    default: () => `<p>A couple of years ago I bought a <a href="${"https://www.boundarysupply.com/products/prima-system"}" rel="${"nofollow"}">Boundary Supply Prima system</a> backpack which has been traveling with me to many countries.</p>
<p>Unfortunately the puller attachments came off one by one over the years, making the bag a bit tricky to open sometimes.</p>
<p>The bag was sold with a lifetime guarantee, time to put that to the test :)</p>
<p>After a quick chat with their support a few weeks ago, they sent me replacement puller attachments for free to the Netherlands, awesome!</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/IMG_20200827_111127.jpg"}" alt="${"IMG_20200827_111127.jpg"}" title="${"1.33"}"></p>`
  })}`;
});
var _20200827BoundarySupplyPrimaSystemSupport = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_27_Boundary_Supply_Prima_system_support,
  metadata: metadata$G
});
const metadata$F = {
  "date": "2020-08-31T18:15:05.111Z",
  "title": "\u{1F4F7} Getting better with the Drone",
  "category": "notes",
  "layout": "note"
};
const _2020_08_31_Getting_better_with_the_Drone = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$F), {}, {
    default: () => `<p>Starting to feel a bit more confident, and I\u2019m able to explore further away, such as this farmer plowing his field a couple of fields away.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/20200831-DJI_0090-720.jpg"}" alt="${"20200831-DJI_0090.jpg"}" title="${"1.78"}"></p>`
  })}`;
});
var _20200831GettingBetterWithTheDrone = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_31_Getting_better_with_the_Drone,
  metadata: metadata$F
});
const metadata$E = {
  "date": "2020-08-22T12:32:28.483Z",
  "title": "\u{1F3A5} A Taxi Driver (Korean)",
  "category": "reviews",
  "layout": "note"
};
const _2020_08_22_A_Taxi_Driver_Korean = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$E), {}, {
    default: () => `<p>I&#39;ve been enjoying Korean movies/drama&#39;s lately and this one I can recommend to anyone, it&#39;s one of those movies you&#39;ll think about for a few days after.</p>
<p>It has a 96% \u{1F345} fresh rating on Rotten tomatoes and features Song Kang-ho as the lead actor, who you might recognise from Parasite, Memories of Murder or Sympathy for Mr. Vengeance (all great movies). </p>
<blockquote><p>May, 1980. Man-seob is a taxi driver in Seoul who lives from hand to mouth, raising his young daughter alone. One day, he hears that there is a foreigner who will pay big money for a drive down to Gwangju city. Not knowing that he\u2019s a German journalist with a hidden agenda, Man-seob takes the job.</p></blockquote>
<p>The movie is based on events that happened during the 1980 Gwangju Uprising and besides a slightly condensed timeline follows the events that happened during that time faithfully. It&#39;s also a nice introduction to Korean history that happened after the Korean war, but before modern Korea. </p>`
  })}`;
});
var _20200822_ATaxiDriverKorean_ = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_22_A_Taxi_Driver_Korean,
  metadata: metadata$E
});
const metadata$D = {
  "date": "2020-09-02T17:24:02.648Z",
  "title": "\u{1F4F7} The Rhine River",
  "category": "notes",
  "layout": "note"
};
const _2020_09_02_The_Rhine_River = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$D), {}, {
    default: () => `<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/20200902-DJI_0123-720.jpg"}" alt="${"20200902-DJI_0123.jpg"}" title="${"1.78"}"></p>
<p>Sometimes I forget that views like these are only a 20 minute bike-ride away.</p>`
  })}`;
});
var _20200902TheRhineRiver = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_09_02_The_Rhine_River,
  metadata: metadata$D
});
const metadata$C = {
  "date": "2020-08-22T15:45:42.267Z",
  "title": "\u{1F4F7} Bought a drone",
  "category": "notes",
  "layout": "note"
};
const _2020_08_22_Bought_a_drone = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$C), {}, {
    default: () => `<figure><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/20200822-DJI_0019-720.jpg"}" alt="${""}" title="${"1.78"}">
<figcaption>Shot with the DJI Mavic Mini</figcaption></figure>
<p>A DJI Mavic Mini, compact enough to take on hikes in my backpack. </p>`
  })}`;
});
var _20200822BoughtADrone = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_22_Bought_a_drone,
  metadata: metadata$C
});
const metadata$B = {
  "date": "2020-08-22T11:07:02.884Z",
  "title": "\u{1F5D2}\uFE0F Awesome sites",
  "category": "notes",
  "layout": "note"
};
const _2020_08_22_Awesome_Sites = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$B), {}, {
    default: () => `<p>Stumbled upon this website yesterday when looking for personal site inspiration, <a href="${"https://personalsit.es"}">https://personalsit.es</a> is an amazing collection of personal websites.</p>`
  })}`;
});
var _20200822AwesomeSites = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_22_Awesome_Sites,
  metadata: metadata$B
});
const metadata$A = {
  "date": "2020-08-28T16:09:22.674Z",
  "title": "\u{1F5D2}\uFE0F Webmentions",
  "category": "notes",
  "layout": "note"
};
const _2020_08_28_Webmentions = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$A), {}, {
    default: () => `<p>Added <a href="${"https://indieweb.org/Webmention"}" rel="${"nofollow"}">webmentions</a> to my blog with the help of <a href="${"https://webmention.io"}" rel="${"nofollow"}">webmention.io</a> made by <a href="${"https://aaronparecki.com"}" rel="${"nofollow"}">Aaron Parecki</a>.</p>
<p>You can see an example here: <a href="${"https://matsimitsu.com/blog/2019-03-09-resize-images-from-s3-with-aws-lambda-and-rust#webmentions"}" rel="${"nofollow"}">Resize images from s3 with AWS Lambda and Rust</a>.</p>
<p>I used <a href="${"https://brid.gy"}" rel="${"nofollow"}">brid.gy</a> to collect tweets that mention my article and have them send the data to <a href="${"https://webmention.io"}" rel="${"nofollow"}">webmention.io</a>, which exposes a JSON feed that I can use when building my blog. Pretty neat!</p>`
  })}`;
});
var _20200828Webmentions = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_28_Webmentions,
  metadata: metadata$A
});
const metadata$z = {
  "date": "2020-11-23T15:45:42.267Z",
  "title": "\u{1F4F7} Fall leaves",
  "category": "photo",
  "layout": "note"
};
const _2020_11_23_Fall_Leaves = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$z), {}, {
    default: () => `<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/20201101-DSC01252-720.jpg"}" alt="${"20201101-DSC01252.jpg"}" title="${"1.0"}"></p>
<p>Nice fall colours during a nice walk.</p>`
  })}`;
});
var _20201123FallLeaves = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_11_23_Fall_Leaves,
  metadata: metadata$z
});
const metadata$y = {
  "title": "\u{1F4F7} Wild horses",
  "date": "2020-12-05T08:16:15.000Z",
  "category": "photos",
  "layout": "note"
};
const _2020_12_05_wild_horses = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$y), {}, {
    default: () => `<p>It was a nice day to take a trip to a local wetland nature reserve called <a href="${"https://www.utrechtslandschap.nl/blauwe-kamer"}" rel="${"nofollow"}">\u201CDe Blauwe Kamer\u201D</a> (The blue chamber).</p>
<p>Luck was on my side today, as the horses had decided to stay near the allowed pathway into the nature reserve.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/horses/20201205-DSC00408.jpg"}" alt="${"20201205-DSC00408.jpg"}" title="${"1.5"}"></p>
<p>(I know this is not, in fact, a horse)</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/horses/20201205-DSC00429.jpg"}" alt="${"20201205-DSC00429.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/horses/20201205-DSC00455.jpg"}" alt="${"20201205-DSC00455.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/horses/20201205-DSC00499.jpg"}" alt="${"hero|20201205-DSC00499.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/horses/20201205-DSC00564.jpg"}" alt="${"20201205-DSC00564.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/horses/20201205-DSC00536.jpg"}" alt="${"20201205-DSC00536.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/horses/20201205-DSC00530.jpg"}" alt="${"hero|20201205-DSC00530.jpg"}" title="${"1.5"}"></p>`
  })}`;
});
var _20201205WildHorses = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_12_05_wild_horses,
  metadata: metadata$y
});
const metadata$x = {
  "date": "2021-01-07T12:32:28.483Z",
  "title": "\u{1F3A5} Still Human (Hong Kong)",
  "category": "reviews",
  "layout": "note"
};
const _2021_01_07_still_human = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$x), {}, {
    default: () => `<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/still-human-720.jpg"}" alt="${"still-human.jpg"}" title="${"2.41"}"></p>
<p>When I first came to <a href="${"http://localhost:4567/trips/asia-2015/day-twenty-three/"}" rel="${"nofollow"}">Hong Kong</a>, I was suprised by the scene of hundreds of people crowding the streets and overpasses on cardboard boxes. Only later I found out that this is a weekly occurrence on Sunday when the thousands of (mostly Filipino) maids living in Hong Kong have their day off, which they use to socialize with fellow maids.</p>
<p>Still Human revolves around Leung Cheong-wing, a paralyzed and hopless man living in a social housing flat in Hong Kong and Evelyn Santos, a Filipino domestic worker who came to the city to make a living.</p>
<p>It portrays the (often precarious) lives of Filipino workers in Hong Kong and how they are treated without becoming too heavy. The movie focuses on the brittle relation between Leung and Evelyn and is mostly shot inside the cramped apartment of Leung.</p>
<p>I really enjoyed the movie, the acting is amazing and the pace is just right. It manages to balance heavy subjects and light-heartedness and for me it was one of those movies that makes you think about the subject for the next couple of days.</p>
<p>5 out of 5!</p>`
  })}`;
});
var _20210107StillHuman = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2021_01_07_still_human,
  metadata: metadata$x
});
const metadata$w = {
  "date": "2020-08-29T12:57:58.984Z",
  "title": "\u{1F4F7} Rainy days",
  "category": "notes",
  "layout": "note"
};
const _2020_08_29_Rainy_days = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$w), {}, {
    default: () => `<p>Figures, heatwave for weeks, but as soon as I buy a drone, it\u2019s non-stop rain. Luckily it stopped for half an hour, so I could finally practice a bit.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/20200829-DJI_0058-720.jpg"}" alt="${"20200829-DJI_0058.jpg"}" title="${"1.78"}"></p>`
  })}`;
});
var _20200829RainyDays = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_29_Rainy_days,
  metadata: metadata$w
});
const metadata$v = {
  "title": "\u{1F4F7} Utrecht",
  "date": "2020-11-28T00:00:00.000Z",
  "category": "photos",
  "layout": "note"
};
const _2020_11_29_utrecht = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$v), {}, {
    default: () => `<p>To test out my new A7 III Camera with Tamron 28-75, I woke up early this Saturday morning and went to Utrecht for some city shots.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00257-2.jpg"}" alt="${"20201128-DSC00257-2.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00263.jpg"}" alt="${"20201128-DSC00263.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00273.jpg"}" alt="${"20201128-DSC00273.jpg"}" title="${"1.347"}">
<img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00288.jpg"}" alt="${"20201128-DSC00288.jpg"}" title="${"1.325"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00274.jpg"}" alt="${"20201128-DSC00274.jpg"}" title="${"1.403"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00292.jpg"}" alt="${"20201128-DSC00292.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00277.jpg"}" alt="${"20201128-DSC00277.jpg"}" title="${"2.07"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00272.jpg"}" alt="${"20201128-DSC00272.jpg"}" title="${"1.5"}">
<img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00335.jpg"}" alt="${"20201128-DSC00335.jpg"}" title="${"0.667"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00330.jpg"}" alt="${"20201128-DSC00330.jpg"}" title="${"1.5"}">
<img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00312.jpg"}" alt="${"20201128-DSC00312.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00341.jpg"}" alt="${"20201128-DSC00341.jpg"}" title="${"1.439"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00340.jpg"}" alt="${"20201128-DSC00340.jpg"}" title="${"0.898"}">
<img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00353.jpg"}" alt="${"20201128-DSC00353.jpg"}" title="${"0.769"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00367.jpg"}" alt="${"20201128-DSC00367.jpg"}" title="${"1.439"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/utrecht/20201128-DSC00369.jpg"}" alt="${"20201128-DSC00369.jpg"}" title="${"1.501"}"></p>`
  })}`;
});
var _20201129Utrecht = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_11_29_utrecht,
  metadata: metadata$v
});
const metadata$u = {
  "date": "2021-01-08T12:32:28.483Z",
  "title": "\u{1F4F7} Street",
  "category": "photos",
  "layout": "note"
};
const _2021_01_10_street = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$u), {}, {
    default: () => `<p>With the country in lockdown it\u2019s hard to get out and take photo\u2019s. Here\u2019s todays attempt.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/street/20210110-DSC00672.jpg"}" alt="${"20210110-DSC00672.jpg"}" title="${"0.829"}">
<img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/street/20210110-DSC00698.jpg"}" alt="${"20210110-DSC00698.jpg"}" title="${"1.553"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/street/20210110-DSC00689.jpg"}" alt="${"20210110-DSC00689.jpg"}" title="${"1.082"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/street/20210110-DSC00675.jpg"}" alt="${"20210110-DSC00675.jpg"}" title="${"1.5"}">
<img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/street/20210110-DSC00692.jpg"}" alt="${"20210110-DSC00692.jpg"}" title="${"0.74"}">
<img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/street/20210110-DSC00684.jpg"}" alt="${"20210110-DSC00684.jpg"}" title="${"1.5"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/street/20210110-DSC00688.jpg"}" alt="${"20210110-DSC00688.jpg"}" title="${"1.387"}"></p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/street/20210110-DSC00685.jpg"}" alt="${"20210110-DSC00685.jpg"}" title="${"0.88"}">
<img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/street/20210110-DSC00695.jpg"}" alt="${"20210110-DSC00695.jpg"}" title="${"1.263"}"></p>`
  })}`;
});
var _20210110Street = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2021_01_10_street,
  metadata: metadata$u
});
const metadata$t = {
  "date": "2020-08-25T17:44:44.011Z",
  "title": "\u{1F5D2}\uFE0F Minio",
  "category": "notes",
  "layout": "note"
};
const _2020_08_25_Minio = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$t), {}, {
    default: () => `<p>I\u2019ve been playing around with <a href="${"https://min.io"}" rel="${"nofollow"}">https://min.io</a> lately, a S3-compatible API clone you can run on your NAS or own hardware, but can scale up to petabytes of data, if you have the money.</p>`
  })}`;
});
var _20200825Minio = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_25_Minio,
  metadata: metadata$t
});
const metadata$s = {
  "date": "2020-11-24T09:00:00.000Z",
  "title": "\u{1F4F7} Fall",
  "category": "photo",
  "layout": "note"
};
const _2020_11_24_Fall = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$s), {}, {
    default: () => `<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/notes/20201122-DSC01315-720.jpg"}" alt="${"20201122-DSC01315.jpg"}" title="${"1.5"}"></p>
<p>Another fall photo, shot with the 16-50 Kitlens for the A6000, therefore not as sharp as I\u2019m used to.</p>`
  })}`;
});
var _20201124Fall = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_11_24_Fall,
  metadata: metadata$s
});
async function load$4({_page, fetch}) {
  const req = await fetch(`/notes.json`);
  return {props: {posts: await req.json()}};
}
const Notes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {posts = []} = $$props;
  if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
    $$bindings.posts(posts);
  return `${$$result.head += `<link rel="${"alternate"}" type="${"application/rss+xml"}" title="${"Matsimitsu.com - Robert Beekman - Blog RSS Feed"}" href="${"/feeds/blog.xml"}" data-svelte="svelte-fscrhw">`, ""}

<div class="${"mx-auto container my-24 text-center"}"><h1 class="${"font-extrabold tracking-snug leading-8 text-6xl font-bold text-gray-800 dark:text-gray-200 mb-8"}">Notes
	</h1>
	<p class="${"text-lg max-w-xl mx-auto text-gray-600 dark:text-gray-400"}">Another place to not post anything ;)</p>
	<hr class="${"mx-auto w-64 mt-4 dark:border-gray-600"}"></div>

<div class="${"mx-auto max-w-xl mb-24"}">${each(posts, (note) => `${validate_component(Note, "Note").$$render($$result, {note}, {}, {})}`)}</div>`;
});
var notes = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Notes,
  load: load$4
});
async function load$3({page: page2, fetch}) {
  const [_root, _trips, trip, _post] = page2.path.split("/");
  const req = await fetch(`/trips/posts.json?trip=${trip}`);
  return {props: {tripPosts: await req.json()}};
}
const _layout$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {tripPosts = []} = $$props;
  if ($$props.tripPosts === void 0 && $$bindings.tripPosts && tripPosts !== void 0)
    $$bindings.tripPosts(tripPosts);
  return `${$$result.head += `<link rel="${"alternate"}" type="${"application/rss+xml"}" title="${"Matsimitsu.com - Robert Beekman - Trips RSS Feed"}" href="${"/feeds/trips.xml"}" data-svelte="svelte-82u2pu">`, ""}

<div class="${"mx-auto"}"><div>${slots.default ? slots.default({}) : ``}</div>
	${tripPosts.length > 1 ? `<div class="${"mt-24 border-t dark:border-gray-600 border-gray-200 pt-24 px-4"}">${each(tripPosts, (post) => `<a sveltekit:prefetch${add_attribute("href", post.url, 0)} class="${"flex max-w-4xl mx-auto mb-8 transform hover:scale-105 duration-300 transition transition-transform"}"><div class="${"flex-1"}">${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, Object.assign(post.image), {}, {})}</div>
					<div class="${"flex-1 p-4 lg:p-8"}"><p class="${"mx-auto text-sm text-gray-400 mb-4"}">${validate_component(FormattedDate, "FormattedDate").$$render($$result, {date: post.startDate}, {}, {})}
							${post.endDate ? `<span>-</span>
								${validate_component(FormattedDate, "FormattedDate").$$render($$result, {date: post.endDate}, {}, {})}` : ``}</p>
						<h3 class="${"font-extrabold tracking-snug leading-8 text-2xl md:text-4xl lg:text-6xl font-bold text-gray-800 dark:text-gray-200 mb-2 lg:mb-4"}">${escape(post.title)}</h3>
						<p class="${"text-lg text-gray-600 dark:text-gray-400"}">${escape(post.subtitle)}</p></div>
				</a>`)}</div>` : ``}
	${validate_component(ReturnToCategory, "ReturnToCategory").$$render($$result, {path: "/trips", text: "Return to trips"}, {}, {})}</div>`;
});
var __layout$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout$1,
  load: load$3
});
const TextContent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  setContext("inTextContent", true);
  return `<div class="${"prose prose-lg dark:prose-dark my-24 mx-auto max-w-2xl px-2 2xl:px-0"}">${slots.default ? slots.default({}) : ``}</div>`;
});
const Panels = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  setContext("inPanel", true);
  return `<div class="${"flex mx-auto container max-w-screen-2xl px-2 2xl:px-0 overflow-hidden mt-2 lg:mt-2"}">${slots.default ? slots.default({}) : ``}</div>`;
});
const type = "Topology";
const objects = {
  countries: {
    type: "GeometryCollection",
    geometries: [
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              0
            ]
          ],
          [
            [
              1
            ]
          ]
        ],
        id: "242",
        properties: {
          name: "Fiji"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ]
        ],
        id: "834",
        properties: {
          name: "Tanzania"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            11,
            12,
            13,
            14
          ]
        ],
        id: "732",
        properties: {
          name: "W. Sahara"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              15,
              16,
              17,
              18
            ]
          ],
          [
            [
              19
            ]
          ],
          [
            [
              20
            ]
          ],
          [
            [
              21
            ]
          ],
          [
            [
              22
            ]
          ],
          [
            [
              23
            ]
          ],
          [
            [
              24
            ]
          ],
          [
            [
              25
            ]
          ],
          [
            [
              26
            ]
          ],
          [
            [
              27
            ]
          ],
          [
            [
              28
            ]
          ],
          [
            [
              29
            ]
          ],
          [
            [
              30
            ]
          ],
          [
            [
              31
            ]
          ],
          [
            [
              32
            ]
          ],
          [
            [
              33
            ]
          ],
          [
            [
              34
            ]
          ],
          [
            [
              35
            ]
          ],
          [
            [
              36
            ]
          ],
          [
            [
              37
            ]
          ],
          [
            [
              38
            ]
          ],
          [
            [
              39
            ]
          ],
          [
            [
              40
            ]
          ],
          [
            [
              41
            ]
          ],
          [
            [
              42
            ]
          ],
          [
            [
              43
            ]
          ],
          [
            [
              44
            ]
          ],
          [
            [
              45
            ]
          ],
          [
            [
              46
            ]
          ],
          [
            [
              47
            ]
          ]
        ],
        id: "124",
        properties: {
          name: "Canada"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -19,
              48,
              49,
              50
            ]
          ],
          [
            [
              51
            ]
          ],
          [
            [
              52
            ]
          ],
          [
            [
              53
            ]
          ],
          [
            [
              54
            ]
          ],
          [
            [
              55
            ]
          ],
          [
            [
              56
            ]
          ],
          [
            [
              57
            ]
          ],
          [
            [
              -17,
              58
            ]
          ],
          [
            [
              59
            ]
          ]
        ],
        id: "840",
        properties: {
          name: "United States of America"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            60,
            61,
            62,
            63,
            64,
            65
          ]
        ],
        id: "398",
        properties: {
          name: "Kazakhstan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -63,
            66,
            67,
            68,
            69
          ]
        ],
        id: "860",
        properties: {
          name: "Uzbekistan"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              70,
              71
            ]
          ],
          [
            [
              72
            ]
          ],
          [
            [
              73
            ]
          ],
          [
            [
              74
            ]
          ]
        ],
        id: "598",
        properties: {
          name: "Papua New Guinea"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -72,
              75
            ]
          ],
          [
            [
              76,
              77
            ]
          ],
          [
            [
              78
            ]
          ],
          [
            [
              79,
              80
            ]
          ],
          [
            [
              81
            ]
          ],
          [
            [
              82
            ]
          ],
          [
            [
              83
            ]
          ],
          [
            [
              84
            ]
          ],
          [
            [
              85
            ]
          ],
          [
            [
              86
            ]
          ],
          [
            [
              87
            ]
          ],
          [
            [
              88
            ]
          ],
          [
            [
              89
            ]
          ]
        ],
        id: "360",
        properties: {
          name: "Indonesia"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              90,
              91
            ]
          ],
          [
            [
              92,
              93,
              94,
              95,
              96,
              97
            ]
          ]
        ],
        id: "032",
        properties: {
          name: "Argentina"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -92,
              98
            ]
          ],
          [
            [
              99,
              -95,
              100,
              101
            ]
          ]
        ],
        id: "152",
        properties: {
          name: "Chile"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -8,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111
          ]
        ],
        id: "180",
        properties: {
          name: "Dem. Rep. Congo"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            112,
            113,
            114,
            115
          ]
        ],
        id: "706",
        properties: {
          name: "Somalia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -3,
            116,
            117,
            118,
            -113,
            119
          ]
        ],
        id: "404",
        properties: {
          name: "Kenya"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127
          ]
        ],
        id: "729",
        properties: {
          name: "Sudan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -122,
            128,
            129,
            130,
            131
          ]
        ],
        id: "148",
        properties: {
          name: "Chad"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            132,
            133
          ]
        ],
        id: "332",
        properties: {
          name: "Haiti"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -133,
            134
          ]
        ],
        id: "214",
        properties: {
          name: "Dominican Rep."
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              135
            ]
          ],
          [
            [
              136
            ]
          ],
          [
            [
              137
            ]
          ],
          [
            [
              138
            ]
          ],
          [
            [
              139
            ]
          ],
          [
            [
              140
            ]
          ],
          [
            [
              141,
              142,
              143
            ]
          ],
          [
            [
              144
            ]
          ],
          [
            [
              145
            ]
          ],
          [
            [
              146,
              147,
              148,
              149,
              -66,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161
            ]
          ],
          [
            [
              162
            ]
          ],
          [
            [
              163,
              164
            ]
          ]
        ],
        id: "643",
        properties: {
          name: "Russia"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              165
            ]
          ],
          [
            [
              166
            ]
          ],
          [
            [
              167
            ]
          ]
        ],
        id: "044",
        properties: {
          name: "Bahamas"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            168
          ]
        ],
        id: "238",
        properties: {
          name: "Falkland Is."
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              169
            ]
          ],
          [
            [
              -161,
              170,
              171,
              172
            ]
          ],
          [
            [
              173
            ]
          ],
          [
            [
              174
            ]
          ]
        ],
        id: "578",
        properties: {
          name: "Norway"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            175
          ]
        ],
        id: "304",
        properties: {
          name: "Greenland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            176
          ]
        ],
        id: "260",
        properties: {
          name: "Fr. S. Antarctic Lands"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            177,
            -77
          ]
        ],
        id: "626",
        properties: {
          name: "Timor-Leste"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            178,
            179,
            180,
            181,
            182,
            183,
            184
          ],
          [
            185
          ]
        ],
        id: "710",
        properties: {
          name: "South Africa"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -186
          ]
        ],
        id: "426",
        properties: {
          name: "Lesotho"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -50,
            186,
            187,
            188,
            189
          ]
        ],
        id: "484",
        properties: {
          name: "Mexico"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            190,
            191,
            -93
          ]
        ],
        id: "858",
        properties: {
          name: "Uruguay"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -191,
            -98,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            199,
            200
          ]
        ],
        id: "076",
        properties: {
          name: "Brazil"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -194,
            201,
            -96,
            -100,
            202
          ]
        ],
        id: "068",
        properties: {
          name: "Bolivia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -195,
            -203,
            -102,
            203,
            204,
            205
          ]
        ],
        id: "604",
        properties: {
          name: "Peru"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -196,
            -206,
            206,
            207,
            208,
            209,
            210
          ]
        ],
        id: "170",
        properties: {
          name: "Colombia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -209,
            211,
            212,
            213
          ]
        ],
        id: "591",
        properties: {
          name: "Panama"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -213,
            214,
            215,
            216
          ]
        ],
        id: "188",
        properties: {
          name: "Costa Rica"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -216,
            217,
            218,
            219
          ]
        ],
        id: "558",
        properties: {
          name: "Nicaragua"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -219,
            220,
            221,
            222,
            223
          ]
        ],
        id: "340",
        properties: {
          name: "Honduras"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -222,
            224,
            225
          ]
        ],
        id: "222",
        properties: {
          name: "El Salvador"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -189,
            226,
            227,
            -223,
            -226,
            228
          ]
        ],
        id: "320",
        properties: {
          name: "Guatemala"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -188,
            229,
            -227
          ]
        ],
        id: "084",
        properties: {
          name: "Belize"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -197,
            -211,
            230,
            231
          ]
        ],
        id: "862",
        properties: {
          name: "Venezuela"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -198,
            -232,
            232,
            233
          ]
        ],
        id: "328",
        properties: {
          name: "Guyana"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -199,
            -234,
            234,
            235
          ]
        ],
        id: "740",
        properties: {
          name: "Suriname"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -200,
              -236,
              236
            ]
          ],
          [
            [
              237,
              238,
              239,
              240,
              241,
              242,
              243,
              244
            ]
          ],
          [
            [
              245
            ]
          ]
        ],
        id: "250",
        properties: {
          name: "France"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -205,
            246,
            -207
          ]
        ],
        id: "218",
        properties: {
          name: "Ecuador"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            247
          ]
        ],
        id: "630",
        properties: {
          name: "Puerto Rico"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            248
          ]
        ],
        id: "388",
        properties: {
          name: "Jamaica"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            249
          ]
        ],
        id: "192",
        properties: {
          name: "Cuba"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -181,
            250,
            251,
            252
          ]
        ],
        id: "716",
        properties: {
          name: "Zimbabwe"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -180,
            253,
            254,
            -251
          ]
        ],
        id: "072",
        properties: {
          name: "Botswana"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -179,
            255,
            256,
            257,
            -254
          ]
        ],
        id: "516",
        properties: {
          name: "Namibia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            258,
            259,
            260,
            261,
            262,
            263,
            264
          ]
        ],
        id: "686",
        properties: {
          name: "Senegal"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -261,
            265,
            266,
            267,
            268,
            269,
            270
          ]
        ],
        id: "466",
        properties: {
          name: "Mali"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -13,
            271,
            -266,
            -260,
            272
          ]
        ],
        id: "478",
        properties: {
          name: "Mauritania"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            273,
            274,
            275,
            276,
            277
          ]
        ],
        id: "204",
        properties: {
          name: "Benin"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -131,
            278,
            279,
            -277,
            280,
            -268,
            281,
            282
          ]
        ],
        id: "562",
        properties: {
          name: "Niger"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -278,
            -280,
            283,
            284
          ]
        ],
        id: "566",
        properties: {
          name: "Nigeria"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -130,
            285,
            286,
            287,
            288,
            289,
            -284,
            -279
          ]
        ],
        id: "120",
        properties: {
          name: "Cameroon"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -275,
            290,
            291,
            292
          ]
        ],
        id: "768",
        properties: {
          name: "Togo"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -292,
            293,
            294,
            295
          ]
        ],
        id: "288",
        properties: {
          name: "Ghana"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -270,
            296,
            -295,
            297,
            298,
            299
          ]
        ],
        id: "384",
        properties: {
          name: "C\xF4te d'Ivoire"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -262,
            -271,
            -300,
            300,
            301,
            302,
            303
          ]
        ],
        id: "324",
        properties: {
          name: "Guinea"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -263,
            -304,
            304
          ]
        ],
        id: "624",
        properties: {
          name: "Guinea-Bissau"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -299,
            305,
            306,
            -301
          ]
        ],
        id: "430",
        properties: {
          name: "Liberia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -302,
            -307,
            307
          ]
        ],
        id: "694",
        properties: {
          name: "Sierra Leone"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -269,
            -281,
            -276,
            -293,
            -296,
            -297
          ]
        ],
        id: "854",
        properties: {
          name: "Burkina Faso"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -108,
            308,
            -286,
            -129,
            -121,
            309
          ]
        ],
        id: "140",
        properties: {
          name: "Central African Rep."
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -107,
            310,
            311,
            312,
            -287,
            -309
          ]
        ],
        id: "178",
        properties: {
          name: "Congo"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -288,
            -313,
            313,
            314
          ]
        ],
        id: "266",
        properties: {
          name: "Gabon"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -289,
            -315,
            315
          ]
        ],
        id: "226",
        properties: {
          name: "Eq. Guinea"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -7,
            316,
            317,
            -252,
            -255,
            -258,
            318,
            -103
          ]
        ],
        id: "894",
        properties: {
          name: "Zambia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -6,
            319,
            -317
          ]
        ],
        id: "454",
        properties: {
          name: "Malawi"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -5,
            320,
            -184,
            321,
            -182,
            -253,
            -318,
            -320
          ]
        ],
        id: "508",
        properties: {
          name: "Mozambique"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -183,
            -322
          ]
        ],
        id: "748",
        properties: {
          name: "eSwatini"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -106,
              322,
              -311
            ]
          ],
          [
            [
              -104,
              -319,
              -257,
              323
            ]
          ]
        ],
        id: "024",
        properties: {
          name: "Angola"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -9,
            -112,
            324
          ]
        ],
        id: "108",
        properties: {
          name: "Burundi"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            325,
            326,
            327,
            328,
            329,
            330,
            331
          ]
        ],
        id: "376",
        properties: {
          name: "Israel"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -331,
            332,
            333
          ]
        ],
        id: "422",
        properties: {
          name: "Lebanon"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            334
          ]
        ],
        id: "450",
        properties: {
          name: "Madagascar"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -327,
            335
          ]
        ],
        id: "275",
        properties: {
          name: "Palestine"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -265,
            336
          ]
        ],
        id: "270",
        properties: {
          name: "Gambia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            337,
            338,
            339
          ]
        ],
        id: "788",
        properties: {
          name: "Tunisia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -12,
            340,
            341,
            -338,
            342,
            -282,
            -267,
            -272
          ]
        ],
        id: "012",
        properties: {
          name: "Algeria"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -326,
            343,
            344,
            345,
            346,
            -328,
            -336
          ]
        ],
        id: "400",
        properties: {
          name: "Jordan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            347,
            348,
            349,
            350,
            351
          ]
        ],
        id: "784",
        properties: {
          name: "United Arab Emirates"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            352,
            353
          ]
        ],
        id: "634",
        properties: {
          name: "Qatar"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            354,
            355,
            356
          ]
        ],
        id: "414",
        properties: {
          name: "Kuwait"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -345,
            357,
            358,
            359,
            360,
            -357,
            361
          ]
        ],
        id: "368",
        properties: {
          name: "Iraq"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -351,
              362,
              363,
              364
            ]
          ],
          [
            [
              -349,
              365
            ]
          ]
        ],
        id: "512",
        properties: {
          name: "Oman"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              366
            ]
          ],
          [
            [
              367
            ]
          ]
        ],
        id: "548",
        properties: {
          name: "Vanuatu"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            368,
            369,
            370,
            371
          ]
        ],
        id: "116",
        properties: {
          name: "Cambodia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -369,
            372,
            373,
            374,
            375,
            376
          ]
        ],
        id: "764",
        properties: {
          name: "Thailand"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -370,
            -377,
            377,
            378,
            379
          ]
        ],
        id: "418",
        properties: {
          name: "Laos"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -376,
            380,
            381,
            382,
            383,
            -378
          ]
        ],
        id: "104",
        properties: {
          name: "Myanmar"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -371,
            -380,
            384,
            385
          ]
        ],
        id: "704",
        properties: {
          name: "Vietnam"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              386,
              386,
              386
            ]
          ],
          [
            [
              -147,
              387,
              388,
              389,
              390
            ]
          ]
        ],
        id: "408",
        properties: {
          name: "North Korea"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -389,
            391
          ]
        ],
        id: "410",
        properties: {
          name: "South Korea"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -149,
            392
          ]
        ],
        id: "496",
        properties: {
          name: "Mongolia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -383,
            393,
            394,
            395,
            396,
            397,
            398,
            399,
            400
          ]
        ],
        id: "356",
        properties: {
          name: "India"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -382,
            401,
            -394
          ]
        ],
        id: "050",
        properties: {
          name: "Bangladesh"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -400,
            402
          ]
        ],
        id: "064",
        properties: {
          name: "Bhutan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -398,
            403
          ]
        ],
        id: "524",
        properties: {
          name: "Nepal"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -396,
            404,
            405,
            406,
            407
          ]
        ],
        id: "586",
        properties: {
          name: "Pakistan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -69,
            408,
            409,
            -407,
            410,
            411
          ]
        ],
        id: "004",
        properties: {
          name: "Afghanistan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -68,
            412,
            413,
            -409
          ]
        ],
        id: "762",
        properties: {
          name: "Tajikistan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -62,
            414,
            -413,
            -67
          ]
        ],
        id: "417",
        properties: {
          name: "Kyrgyzstan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -64,
            -70,
            -412,
            415,
            416
          ]
        ],
        id: "795",
        properties: {
          name: "Turkmenistan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -360,
            417,
            418,
            419,
            420,
            421,
            -416,
            -411,
            -406,
            422
          ]
        ],
        id: "364",
        properties: {
          name: "Iran"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -332,
            -334,
            423,
            424,
            -358,
            -344
          ]
        ],
        id: "760",
        properties: {
          name: "Syria"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -420,
            425,
            426,
            427,
            428
          ]
        ],
        id: "051",
        properties: {
          name: "Armenia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -172,
            429,
            430
          ]
        ],
        id: "752",
        properties: {
          name: "Sweden"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -156,
            431,
            432,
            433,
            434
          ]
        ],
        id: "112",
        properties: {
          name: "Belarus"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -155,
            435,
            -164,
            436,
            437,
            438,
            439,
            440,
            441,
            442,
            -432
          ]
        ],
        id: "804",
        properties: {
          name: "Ukraine"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -433,
            -443,
            443,
            444,
            445,
            446,
            -142,
            447
          ]
        ],
        id: "616",
        properties: {
          name: "Poland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            448,
            449,
            450,
            451,
            452,
            453,
            454
          ]
        ],
        id: "040",
        properties: {
          name: "Austria"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -441,
            455,
            456,
            457,
            458,
            -449,
            459
          ]
        ],
        id: "348",
        properties: {
          name: "Hungary"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -439,
            460
          ]
        ],
        id: "498",
        properties: {
          name: "Moldova"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -438,
            461,
            462,
            463,
            -456,
            -440,
            -461
          ]
        ],
        id: "642",
        properties: {
          name: "Romania"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -434,
            -448,
            -144,
            464,
            465
          ]
        ],
        id: "440",
        properties: {
          name: "Lithuania"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -157,
            -435,
            -466,
            466,
            467
          ]
        ],
        id: "428",
        properties: {
          name: "Latvia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -158,
            -468,
            468
          ]
        ],
        id: "233",
        properties: {
          name: "Estonia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -446,
            469,
            -453,
            470,
            -238,
            471,
            472,
            473,
            474,
            475,
            476
          ]
        ],
        id: "276",
        properties: {
          name: "Germany"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -463,
            477,
            478,
            479,
            480,
            481
          ]
        ],
        id: "100",
        properties: {
          name: "Bulgaria"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              482
            ]
          ],
          [
            [
              -480,
              483,
              484,
              485,
              486
            ]
          ]
        ],
        id: "300",
        properties: {
          name: "Greece"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -359,
              -425,
              487,
              488,
              -427,
              -418
            ]
          ],
          [
            [
              -479,
              489,
              -484
            ]
          ]
        ],
        id: "792",
        properties: {
          name: "Turkey"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -486,
            490,
            491,
            492,
            493
          ]
        ],
        id: "008",
        properties: {
          name: "Albania"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -458,
            494,
            495,
            496,
            497,
            498
          ]
        ],
        id: "191",
        properties: {
          name: "Croatia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -452,
            499,
            -239,
            -471
          ]
        ],
        id: "756",
        properties: {
          name: "Switzerland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -472,
            -245,
            500
          ]
        ],
        id: "442",
        properties: {
          name: "Luxembourg"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -473,
            -501,
            -244,
            501,
            502
          ]
        ],
        id: "056",
        properties: {
          name: "Belgium"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -474,
            -503,
            503
          ]
        ],
        id: "528",
        properties: {
          name: "Netherlands"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            504,
            505
          ]
        ],
        id: "620",
        properties: {
          name: "Portugal"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -505,
            506,
            -242,
            507
          ]
        ],
        id: "724",
        properties: {
          name: "Spain"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            508,
            509
          ]
        ],
        id: "372",
        properties: {
          name: "Ireland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            510
          ]
        ],
        id: "540",
        properties: {
          name: "New Caledonia"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              511
            ]
          ],
          [
            [
              512
            ]
          ],
          [
            [
              513
            ]
          ],
          [
            [
              514
            ]
          ],
          [
            [
              515
            ]
          ]
        ],
        id: "090",
        properties: {
          name: "Solomon Is."
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              516
            ]
          ],
          [
            [
              517
            ]
          ]
        ],
        id: "554",
        properties: {
          name: "New Zealand"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              518
            ]
          ],
          [
            [
              519
            ]
          ]
        ],
        id: "036",
        properties: {
          name: "Australia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            520
          ]
        ],
        id: "144",
        properties: {
          name: "Sri Lanka"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              521
            ]
          ],
          [
            [
              -61,
              -150,
              -393,
              -148,
              -391,
              522,
              -385,
              -379,
              -384,
              -401,
              -403,
              -399,
              -404,
              -397,
              -408,
              -410,
              -414,
              -415
            ]
          ]
        ],
        id: "156",
        properties: {
          name: "China"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            523
          ]
        ],
        id: "158",
        properties: {
          name: "Taiwan"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -451,
              524,
              525,
              -240,
              -500
            ]
          ],
          [
            [
              526
            ]
          ],
          [
            [
              527
            ]
          ]
        ],
        id: "380",
        properties: {
          name: "Italy"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -476,
              528
            ]
          ],
          [
            [
              529
            ]
          ]
        ],
        id: "208",
        properties: {
          name: "Denmark"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -510,
              530
            ]
          ],
          [
            [
              531
            ]
          ]
        ],
        id: "826",
        properties: {
          name: "United Kingdom"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            532
          ]
        ],
        id: "352",
        properties: {
          name: "Iceland"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -152,
              533,
              -421,
              -429,
              534
            ]
          ],
          [
            [
              -419,
              -426
            ]
          ]
        ],
        id: "031",
        properties: {
          name: "Azerbaijan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -153,
            -535,
            -428,
            -489,
            535
          ]
        ],
        id: "268",
        properties: {
          name: "Georgia"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              536
            ]
          ],
          [
            [
              537
            ]
          ],
          [
            [
              538
            ]
          ],
          [
            [
              539
            ]
          ],
          [
            [
              540
            ]
          ],
          [
            [
              541
            ]
          ],
          [
            [
              542
            ]
          ]
        ],
        id: "608",
        properties: {
          name: "Philippines"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              -374,
              543
            ]
          ],
          [
            [
              -81,
              544,
              545,
              546
            ]
          ]
        ],
        id: "458",
        properties: {
          name: "Malaysia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -546,
            547
          ]
        ],
        id: "096",
        properties: {
          name: "Brunei"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -450,
            -459,
            -499,
            548,
            -525
          ]
        ],
        id: "705",
        properties: {
          name: "Slovenia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -160,
            549,
            -430,
            -171
          ]
        ],
        id: "246",
        properties: {
          name: "Finland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -442,
            -460,
            -455,
            550,
            -444
          ]
        ],
        id: "703",
        properties: {
          name: "Slovakia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -445,
            -551,
            -454,
            -470
          ]
        ],
        id: "203",
        properties: {
          name: "Czechia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -126,
            551,
            552,
            553
          ]
        ],
        id: "232",
        properties: {
          name: "Eritrea"
        }
      },
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              554
            ]
          ],
          [
            [
              555
            ]
          ],
          [
            [
              556
            ]
          ]
        ],
        id: "392",
        properties: {
          name: "Japan"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -193,
            -97,
            -202
          ]
        ],
        id: "600",
        properties: {
          name: "Paraguay"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -364,
            557,
            558
          ]
        ],
        id: "887",
        properties: {
          name: "Yemen"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -346,
            -362,
            -356,
            559,
            -354,
            560,
            -352,
            -365,
            -559,
            561
          ]
        ],
        id: "682",
        properties: {
          name: "Saudi Arabia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            570,
            571
          ]
        ],
        properties: {
          name: "N. Cyprus"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -572,
            572
          ]
        ],
        id: "196",
        properties: {
          name: "Cyprus"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -341,
            -15,
            573
          ]
        ],
        id: "504",
        properties: {
          name: "Morocco"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -124,
            574,
            575,
            -329,
            576
          ]
        ],
        id: "818",
        properties: {
          name: "Egypt"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -123,
            -132,
            -283,
            -343,
            -340,
            577,
            -575
          ]
        ],
        id: "434",
        properties: {
          name: "Libya"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -114,
            -119,
            578,
            -127,
            -554,
            579,
            580
          ]
        ],
        id: "231",
        properties: {
          name: "Ethiopia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -553,
            581,
            582,
            -580
          ]
        ],
        id: "262",
        properties: {
          name: "Djibouti"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -115,
            -581,
            -583,
            583
          ]
        ],
        properties: {
          name: "Somaliland"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -11,
            584,
            -110,
            585,
            -117
          ]
        ],
        id: "800",
        properties: {
          name: "Uganda"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -10,
            -325,
            -111,
            -585
          ]
        ],
        id: "646",
        properties: {
          name: "Rwanda"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -496,
            586,
            587
          ]
        ],
        id: "070",
        properties: {
          name: "Bosnia and Herz."
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -481,
            -487,
            -494,
            588,
            589
          ]
        ],
        id: "807",
        properties: {
          name: "Macedonia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -457,
            -464,
            -482,
            -590,
            590,
            591,
            -587,
            -495
          ]
        ],
        id: "688",
        properties: {
          name: "Serbia"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -492,
            592,
            -497,
            -588,
            -592,
            593
          ]
        ],
        id: "499",
        properties: {
          name: "Montenegro"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -493,
            -594,
            -591,
            -589
          ]
        ],
        properties: {
          name: "Kosovo"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            594
          ]
        ],
        id: "780",
        properties: {
          name: "Trinidad and Tobago"
        }
      },
      {
        type: "Polygon",
        arcs: [
          [
            -109,
            -310,
            -128,
            -579,
            -118,
            -586
          ]
        ],
        id: "728",
        properties: {
          name: "S. Sudan"
        }
      }
    ]
  },
  land: {
    type: "GeometryCollection",
    geometries: [
      {
        type: "MultiPolygon",
        arcs: [
          [
            [
              0
            ]
          ],
          [
            [
              1
            ]
          ],
          [
            [
              3,
              320,
              184,
              255,
              323,
              104,
              322,
              311,
              313,
              315,
              289,
              284,
              273,
              290,
              293,
              297,
              305,
              307,
              302,
              304,
              263,
              336,
              258,
              272,
              13,
              573,
              341,
              338,
              577,
              575,
              329,
              332,
              423,
              487,
              535,
              153,
              435,
              164,
              436,
              461,
              477,
              489,
              484,
              490,
              592,
              497,
              548,
              525,
              240,
              507,
              505,
              506,
              242,
              501,
              503,
              474,
              528,
              476,
              446,
              142,
              464,
              466,
              468,
              158,
              549,
              430,
              172,
              161,
              387,
              391,
              389,
              522,
              385,
              371,
              372,
              543,
              374,
              380,
              401,
              394,
              404,
              422,
              360,
              354,
              559,
              352,
              560,
              347,
              365,
              349,
              362,
              557,
              561,
              346,
              576,
              124,
              551,
              581,
              583,
              115,
              119
            ],
            [
              421,
              416,
              64,
              150,
              533
            ]
          ],
          [
            [
              17,
              48,
              186,
              229,
              227,
              223,
              219,
              216,
              213,
              209,
              230,
              232,
              234,
              236,
              200,
              191,
              93,
              100,
              203,
              246,
              207,
              211,
              214,
              217,
              220,
              224,
              228,
              189,
              50,
              15,
              58
            ]
          ],
          [
            [
              19
            ]
          ],
          [
            [
              20
            ]
          ],
          [
            [
              21
            ]
          ],
          [
            [
              22
            ]
          ],
          [
            [
              23
            ]
          ],
          [
            [
              24
            ]
          ],
          [
            [
              25
            ]
          ],
          [
            [
              26
            ]
          ],
          [
            [
              27
            ]
          ],
          [
            [
              28
            ]
          ],
          [
            [
              29
            ]
          ],
          [
            [
              30
            ]
          ],
          [
            [
              31
            ]
          ],
          [
            [
              32
            ]
          ],
          [
            [
              33
            ]
          ],
          [
            [
              34
            ]
          ],
          [
            [
              35
            ]
          ],
          [
            [
              36
            ]
          ],
          [
            [
              37
            ]
          ],
          [
            [
              38
            ]
          ],
          [
            [
              39
            ]
          ],
          [
            [
              40
            ]
          ],
          [
            [
              41
            ]
          ],
          [
            [
              42
            ]
          ],
          [
            [
              43
            ]
          ],
          [
            [
              44
            ]
          ],
          [
            [
              45
            ]
          ],
          [
            [
              46
            ]
          ],
          [
            [
              47
            ]
          ],
          [
            [
              51
            ]
          ],
          [
            [
              52
            ]
          ],
          [
            [
              53
            ]
          ],
          [
            [
              54
            ]
          ],
          [
            [
              55
            ]
          ],
          [
            [
              56
            ]
          ],
          [
            [
              57
            ]
          ],
          [
            [
              59
            ]
          ],
          [
            [
              70,
              75
            ]
          ],
          [
            [
              72
            ]
          ],
          [
            [
              73
            ]
          ],
          [
            [
              74
            ]
          ],
          [
            [
              77,
              177
            ]
          ],
          [
            [
              78
            ]
          ],
          [
            [
              546,
              79,
              544,
              547
            ]
          ],
          [
            [
              81
            ]
          ],
          [
            [
              82
            ]
          ],
          [
            [
              83
            ]
          ],
          [
            [
              84
            ]
          ],
          [
            [
              85
            ]
          ],
          [
            [
              86
            ]
          ],
          [
            [
              87
            ]
          ],
          [
            [
              88
            ]
          ],
          [
            [
              89
            ]
          ],
          [
            [
              90,
              98
            ]
          ],
          [
            [
              133,
              134
            ]
          ],
          [
            [
              135
            ]
          ],
          [
            [
              136
            ]
          ],
          [
            [
              137
            ]
          ],
          [
            [
              138
            ]
          ],
          [
            [
              139
            ]
          ],
          [
            [
              140
            ]
          ],
          [
            [
              144
            ]
          ],
          [
            [
              145
            ]
          ],
          [
            [
              162
            ]
          ],
          [
            [
              165
            ]
          ],
          [
            [
              166
            ]
          ],
          [
            [
              167
            ]
          ],
          [
            [
              168
            ]
          ],
          [
            [
              169
            ]
          ],
          [
            [
              173
            ]
          ],
          [
            [
              174
            ]
          ],
          [
            [
              175
            ]
          ],
          [
            [
              176
            ]
          ],
          [
            [
              245
            ]
          ],
          [
            [
              247
            ]
          ],
          [
            [
              248
            ]
          ],
          [
            [
              249
            ]
          ],
          [
            [
              334
            ]
          ],
          [
            [
              366
            ]
          ],
          [
            [
              367
            ]
          ],
          [
            [
              482
            ]
          ],
          [
            [
              508,
              530
            ]
          ],
          [
            [
              510
            ]
          ],
          [
            [
              511
            ]
          ],
          [
            [
              512
            ]
          ],
          [
            [
              513
            ]
          ],
          [
            [
              514
            ]
          ],
          [
            [
              515
            ]
          ],
          [
            [
              516
            ]
          ],
          [
            [
              517
            ]
          ],
          [
            [
              518
            ]
          ],
          [
            [
              519
            ]
          ],
          [
            [
              520
            ]
          ],
          [
            [
              521
            ]
          ],
          [
            [
              523
            ]
          ],
          [
            [
              526
            ]
          ],
          [
            [
              527
            ]
          ],
          [
            [
              529
            ]
          ],
          [
            [
              531
            ]
          ],
          [
            [
              532
            ]
          ],
          [
            [
              536
            ]
          ],
          [
            [
              537
            ]
          ],
          [
            [
              538
            ]
          ],
          [
            [
              539
            ]
          ],
          [
            [
              540
            ]
          ],
          [
            [
              541
            ]
          ],
          [
            [
              542
            ]
          ],
          [
            [
              554
            ]
          ],
          [
            [
              555
            ]
          ],
          [
            [
              556
            ]
          ],
          [
            [
              562
            ]
          ],
          [
            [
              563
            ]
          ],
          [
            [
              564
            ]
          ],
          [
            [
              565
            ]
          ],
          [
            [
              566
            ]
          ],
          [
            [
              567
            ]
          ],
          [
            [
              568
            ]
          ],
          [
            [
              569
            ]
          ],
          [
            [
              570,
              572
            ]
          ],
          [
            [
              594
            ]
          ]
        ]
      }
    ]
  }
};
const arcs = [
  [
    [
      99478,
      40237
    ],
    [
      69,
      98
    ],
    [
      96,
      -171
    ],
    [
      -46,
      -308
    ],
    [
      -172,
      -81
    ],
    [
      -153,
      73
    ],
    [
      -27,
      260
    ],
    [
      107,
      203
    ],
    [
      126,
      -74
    ]
  ],
  [
    [
      0,
      41087
    ],
    [
      57,
      27
    ],
    [
      -34,
      -284
    ],
    [
      -23,
      -32
    ],
    [
      99822,
      -145
    ],
    [
      -177,
      -124
    ],
    [
      -36,
      220
    ],
    [
      139,
      121
    ],
    [
      88,
      33
    ],
    [
      163,
      184
    ],
    [
      -99999,
      0
    ]
  ],
  [
    [
      59417,
      50018
    ],
    [
      47,
      -65
    ],
    [
      1007,
      -1203
    ],
    [
      19,
      -343
    ],
    [
      399,
      -590
    ]
  ],
  [
    [
      60889,
      47817
    ],
    [
      -128,
      -728
    ],
    [
      16,
      -335
    ],
    [
      178,
      -216
    ],
    [
      8,
      -153
    ],
    [
      -76,
      -357
    ],
    [
      16,
      -180
    ],
    [
      -18,
      -282
    ],
    [
      97,
      -370
    ],
    [
      115,
      -583
    ],
    [
      101,
      -129
    ]
  ],
  [
    [
      61198,
      44484
    ],
    [
      -221,
      -342
    ],
    [
      -303,
      -230
    ],
    [
      -167,
      10
    ],
    [
      -99,
      -177
    ],
    [
      -193,
      -16
    ],
    [
      -73,
      -74
    ],
    [
      -334,
      166
    ],
    [
      -209,
      -48
    ]
  ],
  [
    [
      59599,
      43773
    ],
    [
      -77,
      804
    ],
    [
      -95,
      275
    ],
    [
      -55,
      164
    ],
    [
      -273,
      110
    ]
  ],
  [
    [
      59099,
      45126
    ],
    [
      -157,
      177
    ],
    [
      -177,
      100
    ],
    [
      -111,
      99
    ],
    [
      -116,
      150
    ]
  ],
  [
    [
      58538,
      45652
    ],
    [
      -150,
      745
    ],
    [
      -161,
      330
    ],
    [
      -55,
      343
    ],
    [
      27,
      307
    ],
    [
      -50,
      544
    ]
  ],
  [
    [
      58149,
      47921
    ],
    [
      115,
      28
    ],
    [
      101,
      214
    ],
    [
      108,
      308
    ],
    [
      69,
      124
    ],
    [
      -3,
      192
    ],
    [
      -60,
      134
    ],
    [
      -16,
      233
    ]
  ],
  [
    [
      58463,
      49154
    ],
    [
      80,
      74
    ],
    [
      16,
      348
    ],
    [
      -110,
      333
    ]
  ],
  [
    [
      58449,
      49909
    ],
    [
      98,
      71
    ],
    [
      304,
      -7
    ],
    [
      566,
      45
    ]
  ],
  [
    [
      47592,
      66920
    ],
    [
      1,
      -40
    ],
    [
      -6,
      -114
    ]
  ],
  [
    [
      47587,
      66766
    ],
    [
      -1,
      -895
    ],
    [
      -911,
      31
    ],
    [
      9,
      -1512
    ],
    [
      -261,
      -53
    ],
    [
      -68,
      -304
    ],
    [
      53,
      -853
    ],
    [
      -1088,
      4
    ],
    [
      -60,
      -197
    ]
  ],
  [
    [
      45260,
      62987
    ],
    [
      12,
      249
    ]
  ],
  [
    [
      45272,
      63236
    ],
    [
      5,
      -1
    ],
    [
      625,
      48
    ],
    [
      33,
      213
    ],
    [
      114,
      265
    ],
    [
      92,
      816
    ],
    [
      386,
      637
    ],
    [
      131,
      745
    ],
    [
      86,
      44
    ],
    [
      91,
      460
    ],
    [
      234,
      63
    ],
    [
      100,
      -76
    ],
    [
      126,
      0
    ],
    [
      90,
      134
    ],
    [
      172,
      19
    ],
    [
      -7,
      317
    ],
    [
      42,
      0
    ]
  ],
  [
    [
      15878,
      79530
    ],
    [
      -38,
      1
    ],
    [
      -537,
      581
    ],
    [
      -199,
      255
    ],
    [
      -503,
      244
    ],
    [
      -155,
      523
    ],
    [
      40,
      363
    ],
    [
      -356,
      252
    ],
    [
      -48,
      476
    ],
    [
      -336,
      429
    ],
    [
      -6,
      304
    ]
  ],
  [
    [
      13740,
      82958
    ],
    [
      154,
      285
    ],
    [
      -7,
      373
    ],
    [
      -473,
      376
    ],
    [
      -284,
      674
    ],
    [
      -173,
      424
    ],
    [
      -255,
      266
    ],
    [
      -187,
      242
    ],
    [
      -147,
      306
    ],
    [
      -279,
      -192
    ],
    [
      -270,
      -330
    ],
    [
      -247,
      388
    ],
    [
      -194,
      259
    ],
    [
      -271,
      164
    ],
    [
      -273,
      17
    ],
    [
      1,
      3364
    ],
    [
      2,
      2193
    ]
  ],
  [
    [
      10837,
      91767
    ],
    [
      518,
      -142
    ],
    [
      438,
      -285
    ],
    [
      289,
      -54
    ],
    [
      244,
      247
    ],
    [
      336,
      184
    ],
    [
      413,
      -72
    ],
    [
      416,
      259
    ],
    [
      455,
      148
    ],
    [
      191,
      -245
    ],
    [
      207,
      138
    ],
    [
      62,
      278
    ],
    [
      192,
      -63
    ],
    [
      470,
      -530
    ],
    [
      369,
      401
    ],
    [
      38,
      -449
    ],
    [
      341,
      97
    ],
    [
      105,
      173
    ],
    [
      337,
      -34
    ],
    [
      424,
      -248
    ],
    [
      650,
      -217
    ],
    [
      383,
      -100
    ],
    [
      272,
      38
    ],
    [
      374,
      -300
    ],
    [
      -390,
      -293
    ],
    [
      502,
      -127
    ],
    [
      750,
      70
    ],
    [
      236,
      103
    ],
    [
      296,
      -354
    ],
    [
      302,
      299
    ],
    [
      -283,
      251
    ],
    [
      179,
      202
    ],
    [
      338,
      27
    ],
    [
      223,
      59
    ],
    [
      224,
      -141
    ],
    [
      279,
      -321
    ],
    [
      310,
      47
    ],
    [
      491,
      -266
    ],
    [
      431,
      94
    ],
    [
      405,
      -14
    ],
    [
      -32,
      367
    ],
    [
      247,
      103
    ],
    [
      431,
      -200
    ],
    [
      -2,
      -559
    ],
    [
      177,
      471
    ],
    [
      223,
      -16
    ],
    [
      126,
      594
    ],
    [
      -298,
      364
    ],
    [
      -324,
      239
    ],
    [
      22,
      653
    ],
    [
      329,
      429
    ],
    [
      366,
      -95
    ],
    [
      281,
      -261
    ],
    [
      378,
      -666
    ],
    [
      -247,
      -290
    ],
    [
      517,
      -120
    ],
    [
      -1,
      -604
    ],
    [
      371,
      463
    ],
    [
      332,
      -380
    ],
    [
      -83,
      -438
    ],
    [
      269,
      -399
    ],
    [
      290,
      427
    ],
    [
      202,
      510
    ],
    [
      16,
      649
    ],
    [
      394,
      -46
    ],
    [
      411,
      -87
    ],
    [
      373,
      -293
    ],
    [
      17,
      -293
    ],
    [
      -207,
      -315
    ],
    [
      196,
      -316
    ],
    [
      -36,
      -288
    ],
    [
      -544,
      -413
    ],
    [
      -386,
      -91
    ],
    [
      -287,
      178
    ],
    [
      -83,
      -297
    ],
    [
      -268,
      -498
    ],
    [
      -81,
      -259
    ],
    [
      -322,
      -399
    ],
    [
      -397,
      -39
    ],
    [
      -220,
      -250
    ],
    [
      -18,
      -384
    ],
    [
      -323,
      -74
    ],
    [
      -340,
      -479
    ],
    [
      -301,
      -665
    ],
    [
      -108,
      -466
    ],
    [
      -16,
      -686
    ],
    [
      409,
      -99
    ],
    [
      125,
      -553
    ],
    [
      130,
      -448
    ],
    [
      388,
      117
    ],
    [
      517,
      -256
    ],
    [
      277,
      -225
    ],
    [
      199,
      -279
    ],
    [
      348,
      -163
    ],
    [
      294,
      -248
    ],
    [
      459,
      -34
    ],
    [
      302,
      -58
    ],
    [
      -45,
      -511
    ],
    [
      86,
      -594
    ],
    [
      201,
      -661
    ],
    [
      414,
      -561
    ],
    [
      214,
      192
    ],
    [
      150,
      607
    ],
    [
      -145,
      934
    ],
    [
      -196,
      311
    ],
    [
      445,
      276
    ],
    [
      314,
      415
    ],
    [
      154,
      411
    ],
    [
      -23,
      395
    ],
    [
      -188,
      502
    ],
    [
      -338,
      445
    ],
    [
      328,
      619
    ],
    [
      -121,
      535
    ],
    [
      -93,
      922
    ],
    [
      194,
      137
    ],
    [
      476,
      -161
    ],
    [
      286,
      -57
    ],
    [
      230,
      155
    ],
    [
      258,
      -200
    ],
    [
      342,
      -343
    ],
    [
      85,
      -229
    ],
    [
      495,
      -45
    ],
    [
      -8,
      -496
    ],
    [
      92,
      -747
    ],
    [
      254,
      -92
    ],
    [
      201,
      -348
    ],
    [
      402,
      328
    ],
    [
      266,
      652
    ],
    [
      184,
      274
    ],
    [
      216,
      -527
    ],
    [
      362,
      -754
    ],
    [
      307,
      -709
    ],
    [
      -112,
      -371
    ],
    [
      370,
      -333
    ],
    [
      250,
      -338
    ],
    [
      442,
      -152
    ],
    [
      179,
      -189
    ],
    [
      110,
      -500
    ],
    [
      216,
      -78
    ],
    [
      112,
      -223
    ],
    [
      20,
      -664
    ],
    [
      -202,
      -222
    ],
    [
      -199,
      -207
    ],
    [
      -458,
      -210
    ],
    [
      -349,
      -486
    ],
    [
      -470,
      -96
    ],
    [
      -594,
      125
    ],
    [
      -417,
      4
    ],
    [
      -287,
      -41
    ],
    [
      -233,
      -424
    ],
    [
      -354,
      -262
    ],
    [
      -401,
      -782
    ],
    [
      -320,
      -545
    ],
    [
      236,
      97
    ],
    [
      446,
      776
    ],
    [
      583,
      493
    ],
    [
      415,
      58
    ],
    [
      246,
      -289
    ],
    [
      -262,
      -397
    ],
    [
      88,
      -637
    ],
    [
      91,
      -446
    ],
    [
      361,
      -295
    ],
    [
      459,
      86
    ],
    [
      278,
      664
    ],
    [
      19,
      -429
    ],
    [
      180,
      -214
    ],
    [
      -344,
      -387
    ],
    [
      -615,
      -351
    ],
    [
      -276,
      -239
    ],
    [
      -310,
      -426
    ],
    [
      -211,
      44
    ],
    [
      -11,
      500
    ],
    [
      483,
      488
    ],
    [
      -445,
      -19
    ],
    [
      -309,
      -72
    ]
  ],
  [
    [
      31350,
      77248
    ],
    [
      -181,
      334
    ],
    [
      0,
      805
    ],
    [
      -123,
      171
    ],
    [
      -187,
      -100
    ],
    [
      -92,
      155
    ],
    [
      -212,
      -446
    ],
    [
      -84,
      -460
    ],
    [
      -99,
      -269
    ],
    [
      -118,
      -91
    ],
    [
      -89,
      -30
    ],
    [
      -28,
      -146
    ],
    [
      -512,
      0
    ],
    [
      -422,
      -4
    ],
    [
      -125,
      -109
    ],
    [
      -294,
      -425
    ],
    [
      -34,
      -46
    ],
    [
      -89,
      -231
    ],
    [
      -255,
      1
    ],
    [
      -273,
      -3
    ],
    [
      -125,
      -93
    ],
    [
      44,
      -116
    ],
    [
      25,
      -181
    ],
    [
      -5,
      -60
    ],
    [
      -363,
      -293
    ],
    [
      -286,
      -93
    ],
    [
      -323,
      -316
    ],
    [
      -70,
      0
    ],
    [
      -94,
      93
    ],
    [
      -31,
      85
    ],
    [
      6,
      61
    ],
    [
      61,
      207
    ],
    [
      131,
      325
    ],
    [
      81,
      349
    ],
    [
      -56,
      514
    ],
    [
      -59,
      536
    ],
    [
      -290,
      277
    ],
    [
      35,
      105
    ],
    [
      -41,
      73
    ],
    [
      -76,
      0
    ],
    [
      -56,
      93
    ],
    [
      -14,
      140
    ],
    [
      -54,
      -61
    ],
    [
      -75,
      18
    ],
    [
      17,
      59
    ],
    [
      -65,
      58
    ],
    [
      -27,
      155
    ],
    [
      -216,
      189
    ],
    [
      -224,
      197
    ],
    [
      -272,
      229
    ],
    [
      -261,
      214
    ],
    [
      -248,
      -167
    ],
    [
      -91,
      -6
    ],
    [
      -342,
      154
    ],
    [
      -225,
      -77
    ],
    [
      -269,
      183
    ],
    [
      -284,
      94
    ],
    [
      -194,
      36
    ],
    [
      -86,
      100
    ],
    [
      -49,
      325
    ],
    [
      -94,
      -3
    ],
    [
      -1,
      -227
    ],
    [
      -575,
      0
    ],
    [
      -951,
      0
    ],
    [
      -944,
      0
    ],
    [
      -833,
      0
    ],
    [
      -834,
      0
    ],
    [
      -819,
      0
    ],
    [
      -847,
      0
    ],
    [
      -273,
      0
    ],
    [
      -824,
      0
    ],
    [
      -789,
      0
    ]
  ],
  [
    [
      26668,
      87478
    ],
    [
      207,
      273
    ],
    [
      381,
      -6
    ],
    [
      -6,
      -114
    ],
    [
      -325,
      -326
    ],
    [
      -196,
      13
    ],
    [
      -61,
      160
    ]
  ],
  [
    [
      27840,
      93593
    ],
    [
      -306,
      313
    ],
    [
      12,
      213
    ],
    [
      133,
      39
    ],
    [
      636,
      -63
    ],
    [
      479,
      -325
    ],
    [
      25,
      -163
    ],
    [
      -296,
      17
    ],
    [
      -299,
      13
    ],
    [
      -304,
      -80
    ],
    [
      -80,
      36
    ]
  ],
  [
    [
      27690,
      87261
    ],
    [
      107,
      177
    ],
    [
      114,
      -13
    ],
    [
      70,
      -121
    ],
    [
      -108,
      -310
    ],
    [
      -123,
      50
    ],
    [
      -73,
      176
    ],
    [
      13,
      41
    ]
  ],
  [
    [
      23996,
      94879
    ],
    [
      -151,
      -229
    ],
    [
      -403,
      44
    ],
    [
      -337,
      155
    ],
    [
      148,
      266
    ],
    [
      399,
      159
    ],
    [
      243,
      -208
    ],
    [
      101,
      -187
    ]
  ],
  [
    [
      23933,
      96380
    ],
    [
      -126,
      -17
    ],
    [
      -521,
      38
    ],
    [
      -74,
      165
    ],
    [
      559,
      -9
    ],
    [
      195,
      -109
    ],
    [
      -33,
      -68
    ]
  ],
  [
    [
      23124,
      97116
    ],
    [
      332,
      -205
    ],
    [
      -76,
      -214
    ],
    [
      -411,
      -122
    ],
    [
      -226,
      138
    ],
    [
      -119,
      221
    ],
    [
      -22,
      245
    ],
    [
      360,
      -24
    ],
    [
      162,
      -39
    ]
  ],
  [
    [
      25514,
      94532
    ],
    [
      -449,
      73
    ],
    [
      -738,
      190
    ],
    [
      -96,
      325
    ],
    [
      -34,
      293
    ],
    [
      -279,
      258
    ],
    [
      -574,
      72
    ],
    [
      -322,
      183
    ],
    [
      104,
      242
    ],
    [
      573,
      -37
    ],
    [
      308,
      -190
    ],
    [
      547,
      1
    ],
    [
      240,
      -194
    ],
    [
      -64,
      -222
    ],
    [
      319,
      -134
    ],
    [
      177,
      -140
    ],
    [
      374,
      -26
    ],
    [
      406,
      -50
    ],
    [
      441,
      128
    ],
    [
      566,
      51
    ],
    [
      451,
      -42
    ],
    [
      298,
      -223
    ],
    [
      62,
      -244
    ],
    [
      -174,
      -157
    ],
    [
      -414,
      -127
    ],
    [
      -355,
      72
    ],
    [
      -797,
      -91
    ],
    [
      -570,
      -11
    ]
  ],
  [
    [
      19093,
      96754
    ],
    [
      392,
      -92
    ],
    [
      -93,
      -177
    ],
    [
      -518,
      -170
    ],
    [
      -411,
      191
    ],
    [
      224,
      188
    ],
    [
      406,
      60
    ]
  ],
  [
    [
      19177,
      97139
    ],
    [
      361,
      -120
    ],
    [
      -339,
      -115
    ],
    [
      -461,
      1
    ],
    [
      5,
      84
    ],
    [
      285,
      177
    ],
    [
      149,
      -27
    ]
  ],
  [
    [
      34555,
      80899
    ],
    [
      -148,
      -372
    ],
    [
      -184,
      -517
    ],
    [
      181,
      199
    ],
    [
      187,
      -126
    ],
    [
      -98,
      -206
    ],
    [
      247,
      -162
    ],
    [
      128,
      144
    ],
    [
      277,
      -182
    ],
    [
      -86,
      -433
    ],
    [
      194,
      101
    ],
    [
      36,
      -313
    ],
    [
      86,
      -367
    ],
    [
      -117,
      -520
    ],
    [
      -125,
      -22
    ],
    [
      -183,
      111
    ],
    [
      60,
      484
    ],
    [
      -77,
      75
    ],
    [
      -322,
      -513
    ],
    [
      -166,
      21
    ],
    [
      196,
      277
    ],
    [
      -267,
      144
    ],
    [
      -298,
      -35
    ],
    [
      -539,
      18
    ],
    [
      -43,
      175
    ],
    [
      173,
      208
    ],
    [
      -121,
      160
    ],
    [
      234,
      356
    ],
    [
      287,
      941
    ],
    [
      172,
      336
    ],
    [
      241,
      204
    ],
    [
      129,
      -26
    ],
    [
      -54,
      -160
    ]
  ],
  [
    [
      26699,
      89048
    ],
    [
      304,
      -203
    ],
    [
      318,
      -184
    ],
    [
      25,
      -281
    ],
    [
      204,
      46
    ],
    [
      199,
      -196
    ],
    [
      -247,
      -186
    ],
    [
      -432,
      142
    ],
    [
      -156,
      266
    ],
    [
      -275,
      -314
    ],
    [
      -396,
      -306
    ],
    [
      -95,
      346
    ],
    [
      -377,
      -57
    ],
    [
      242,
      292
    ],
    [
      35,
      465
    ],
    [
      95,
      542
    ],
    [
      201,
      -49
    ],
    [
      51,
      -259
    ],
    [
      143,
      91
    ],
    [
      161,
      -155
    ]
  ],
  [
    [
      28119,
      93327
    ],
    [
      263,
      235
    ],
    [
      616,
      -299
    ],
    [
      383,
      -282
    ],
    [
      36,
      -258
    ],
    [
      515,
      134
    ],
    [
      290,
      -376
    ],
    [
      670,
      -234
    ],
    [
      242,
      -238
    ],
    [
      263,
      -553
    ],
    [
      -510,
      -275
    ],
    [
      654,
      -386
    ],
    [
      441,
      -130
    ],
    [
      400,
      -543
    ],
    [
      437,
      -39
    ],
    [
      -87,
      -414
    ],
    [
      -487,
      -687
    ],
    [
      -342,
      253
    ],
    [
      -437,
      568
    ],
    [
      -359,
      -74
    ],
    [
      -35,
      -338
    ],
    [
      292,
      -344
    ],
    [
      377,
      -272
    ],
    [
      114,
      -157
    ],
    [
      181,
      -584
    ],
    [
      -96,
      -425
    ],
    [
      -350,
      160
    ],
    [
      -697,
      473
    ],
    [
      393,
      -509
    ],
    [
      289,
      -357
    ],
    [
      45,
      -206
    ],
    [
      -753,
      236
    ],
    [
      -596,
      343
    ],
    [
      -337,
      287
    ],
    [
      97,
      167
    ],
    [
      -414,
      304
    ],
    [
      -405,
      286
    ],
    [
      5,
      -171
    ],
    [
      -803,
      -94
    ],
    [
      -235,
      203
    ],
    [
      183,
      435
    ],
    [
      522,
      10
    ],
    [
      571,
      76
    ],
    [
      -92,
      211
    ],
    [
      96,
      294
    ],
    [
      360,
      576
    ],
    [
      -77,
      261
    ],
    [
      -107,
      203
    ],
    [
      -425,
      286
    ],
    [
      -563,
      201
    ],
    [
      178,
      150
    ],
    [
      -294,
      367
    ],
    [
      -245,
      34
    ],
    [
      -219,
      201
    ],
    [
      -149,
      -175
    ],
    [
      -503,
      -76
    ],
    [
      -1011,
      132
    ],
    [
      -588,
      174
    ],
    [
      -450,
      89
    ],
    [
      -231,
      207
    ],
    [
      290,
      270
    ],
    [
      -394,
      2
    ],
    [
      -88,
      599
    ],
    [
      213,
      528
    ],
    [
      286,
      241
    ],
    [
      717,
      158
    ],
    [
      -204,
      -382
    ],
    [
      219,
      -369
    ],
    [
      256,
      477
    ],
    [
      704,
      242
    ],
    [
      477,
      -611
    ],
    [
      -42,
      -387
    ],
    [
      550,
      172
    ]
  ],
  [
    [
      23749,
      94380
    ],
    [
      579,
      -20
    ],
    [
      530,
      -144
    ],
    [
      -415,
      -526
    ],
    [
      -331,
      -115
    ],
    [
      -298,
      -442
    ],
    [
      -317,
      22
    ],
    [
      -173,
      519
    ],
    [
      4,
      294
    ],
    [
      145,
      251
    ],
    [
      276,
      161
    ]
  ],
  [
    [
      15873,
      95551
    ],
    [
      472,
      442
    ],
    [
      570,
      383
    ],
    [
      426,
      -9
    ],
    [
      381,
      87
    ],
    [
      -38,
      -454
    ],
    [
      -214,
      -205
    ],
    [
      -259,
      -29
    ],
    [
      -517,
      -252
    ],
    [
      -444,
      -91
    ],
    [
      -377,
      128
    ]
  ],
  [
    [
      13136,
      82508
    ],
    [
      267,
      47
    ],
    [
      -84,
      -671
    ],
    [
      242,
      -475
    ],
    [
      -111,
      1
    ],
    [
      -167,
      270
    ],
    [
      -103,
      272
    ],
    [
      -140,
      184
    ],
    [
      -51,
      260
    ],
    [
      16,
      188
    ],
    [
      131,
      -76
    ]
  ],
  [
    [
      20696,
      97433
    ],
    [
      546,
      -81
    ],
    [
      751,
      -215
    ],
    [
      212,
      -281
    ],
    [
      108,
      -247
    ],
    [
      -453,
      66
    ],
    [
      -457,
      192
    ],
    [
      -619,
      21
    ],
    [
      268,
      176
    ],
    [
      -335,
      142
    ],
    [
      -21,
      227
    ]
  ],
  [
    [
      15692,
      79240
    ],
    [
      -140,
      -82
    ],
    [
      -456,
      269
    ],
    [
      -84,
      209
    ],
    [
      -248,
      207
    ],
    [
      -50,
      168
    ],
    [
      -286,
      107
    ],
    [
      -107,
      321
    ],
    [
      24,
      137
    ],
    [
      291,
      -129
    ],
    [
      171,
      -89
    ],
    [
      261,
      -63
    ],
    [
      94,
      -204
    ],
    [
      138,
      -280
    ],
    [
      277,
      -244
    ],
    [
      115,
      -327
    ]
  ],
  [
    [
      16239,
      94566
    ],
    [
      397,
      -123
    ],
    [
      709,
      -33
    ],
    [
      270,
      -171
    ],
    [
      298,
      -249
    ],
    [
      -349,
      -149
    ],
    [
      -681,
      -415
    ],
    [
      -344,
      -414
    ],
    [
      0,
      -257
    ],
    [
      -731,
      -285
    ],
    [
      -147,
      259
    ],
    [
      -641,
      312
    ],
    [
      119,
      250
    ],
    [
      192,
      432
    ],
    [
      241,
      388
    ],
    [
      -272,
      362
    ],
    [
      939,
      93
    ]
  ],
  [
    [
      20050,
      95391
    ],
    [
      247,
      99
    ],
    [
      291,
      -26
    ],
    [
      49,
      -289
    ],
    [
      -169,
      -281
    ],
    [
      -940,
      -91
    ],
    [
      -701,
      -256
    ],
    [
      -423,
      -14
    ],
    [
      -35,
      193
    ],
    [
      577,
      261
    ],
    [
      -1255,
      -70
    ],
    [
      -389,
      106
    ],
    [
      379,
      577
    ],
    [
      262,
      165
    ],
    [
      782,
      -199
    ],
    [
      493,
      -350
    ],
    [
      485,
      -45
    ],
    [
      -397,
      565
    ],
    [
      255,
      215
    ],
    [
      286,
      -68
    ],
    [
      94,
      -282
    ],
    [
      109,
      -210
    ]
  ],
  [
    [
      20410,
      93755
    ],
    [
      311,
      -239
    ],
    [
      175,
      -575
    ],
    [
      86,
      -417
    ],
    [
      466,
      -293
    ],
    [
      502,
      -279
    ],
    [
      -31,
      -260
    ],
    [
      -456,
      -48
    ],
    [
      178,
      -227
    ],
    [
      -94,
      -217
    ],
    [
      -503,
      93
    ],
    [
      -478,
      160
    ],
    [
      -322,
      -36
    ],
    [
      -522,
      -201
    ],
    [
      -704,
      -88
    ],
    [
      -494,
      -56
    ],
    [
      -151,
      279
    ],
    [
      -379,
      161
    ],
    [
      -246,
      -66
    ],
    [
      -343,
      468
    ],
    [
      185,
      62
    ],
    [
      429,
      101
    ],
    [
      392,
      -26
    ],
    [
      362,
      103
    ],
    [
      -537,
      138
    ],
    [
      -594,
      -47
    ],
    [
      -394,
      12
    ],
    [
      -146,
      217
    ],
    [
      644,
      237
    ],
    [
      -428,
      -9
    ],
    [
      -485,
      156
    ],
    [
      233,
      443
    ],
    [
      193,
      235
    ],
    [
      744,
      359
    ],
    [
      284,
      -114
    ],
    [
      -139,
      -277
    ],
    [
      618,
      179
    ],
    [
      386,
      -298
    ],
    [
      314,
      302
    ],
    [
      254,
      -194
    ],
    [
      227,
      -580
    ],
    [
      140,
      244
    ],
    [
      -197,
      606
    ],
    [
      244,
      86
    ],
    [
      276,
      -94
    ]
  ],
  [
    [
      22100,
      93536
    ],
    [
      -306,
      386
    ],
    [
      329,
      286
    ],
    [
      331,
      -124
    ],
    [
      496,
      75
    ],
    [
      72,
      -172
    ],
    [
      -259,
      -283
    ],
    [
      420,
      -254
    ],
    [
      -50,
      -532
    ],
    [
      -455,
      -229
    ],
    [
      -268,
      50
    ],
    [
      -192,
      225
    ],
    [
      -690,
      456
    ],
    [
      5,
      189
    ],
    [
      567,
      -73
    ]
  ],
  [
    [
      20389,
      94064
    ],
    [
      372,
      24
    ],
    [
      211,
      -130
    ],
    [
      -244,
      -390
    ],
    [
      -434,
      413
    ],
    [
      95,
      83
    ]
  ],
  [
    [
      22639,
      95907
    ],
    [
      212,
      -273
    ],
    [
      9,
      -303
    ],
    [
      -127,
      -440
    ],
    [
      -458,
      -60
    ],
    [
      -298,
      94
    ],
    [
      5,
      345
    ],
    [
      -455,
      -46
    ],
    [
      -18,
      457
    ],
    [
      299,
      -18
    ],
    [
      419,
      201
    ],
    [
      390,
      -34
    ],
    [
      22,
      77
    ]
  ],
  [
    [
      23329,
      98201
    ],
    [
      192,
      180
    ],
    [
      285,
      42
    ],
    [
      -122,
      135
    ],
    [
      646,
      30
    ],
    [
      355,
      -315
    ],
    [
      468,
      -127
    ],
    [
      455,
      -112
    ],
    [
      220,
      -390
    ],
    [
      334,
      -190
    ],
    [
      -381,
      -176
    ],
    [
      -513,
      -445
    ],
    [
      -492,
      -42
    ],
    [
      -575,
      76
    ],
    [
      -299,
      240
    ],
    [
      4,
      215
    ],
    [
      220,
      157
    ],
    [
      -508,
      -4
    ],
    [
      -306,
      196
    ],
    [
      -176,
      268
    ],
    [
      193,
      262
    ]
  ],
  [
    [
      24559,
      98965
    ],
    [
      413,
      112
    ],
    [
      324,
      19
    ],
    [
      545,
      96
    ],
    [
      409,
      220
    ],
    [
      344,
      -30
    ],
    [
      300,
      -166
    ],
    [
      211,
      319
    ],
    [
      367,
      95
    ],
    [
      498,
      65
    ],
    [
      849,
      24
    ],
    [
      148,
      -63
    ],
    [
      802,
      100
    ],
    [
      601,
      -38
    ],
    [
      602,
      -37
    ],
    [
      742,
      -47
    ],
    [
      597,
      -75
    ],
    [
      508,
      -161
    ],
    [
      -12,
      -157
    ],
    [
      -678,
      -257
    ],
    [
      -672,
      -119
    ],
    [
      -251,
      -133
    ],
    [
      605,
      3
    ],
    [
      -656,
      -358
    ],
    [
      -452,
      -167
    ],
    [
      -476,
      -483
    ],
    [
      -573,
      -98
    ],
    [
      -177,
      -120
    ],
    [
      -841,
      -64
    ],
    [
      383,
      -74
    ],
    [
      -192,
      -105
    ],
    [
      230,
      -292
    ],
    [
      -264,
      -202
    ],
    [
      -429,
      -167
    ],
    [
      -132,
      -232
    ],
    [
      -388,
      -176
    ],
    [
      39,
      -134
    ],
    [
      475,
      23
    ],
    [
      6,
      -144
    ],
    [
      -742,
      -355
    ],
    [
      -726,
      163
    ],
    [
      -816,
      -91
    ],
    [
      -414,
      71
    ],
    [
      -525,
      31
    ],
    [
      -35,
      284
    ],
    [
      514,
      133
    ],
    [
      -137,
      427
    ],
    [
      170,
      41
    ],
    [
      742,
      -255
    ],
    [
      -379,
      379
    ],
    [
      -450,
      113
    ],
    [
      225,
      229
    ],
    [
      492,
      141
    ],
    [
      79,
      206
    ],
    [
      -392,
      231
    ],
    [
      -118,
      304
    ],
    [
      759,
      -26
    ],
    [
      220,
      -64
    ],
    [
      433,
      216
    ],
    [
      -625,
      68
    ],
    [
      -972,
      -38
    ],
    [
      -491,
      201
    ],
    [
      -232,
      239
    ],
    [
      -324,
      173
    ],
    [
      -61,
      202
    ]
  ],
  [
    [
      29106,
      90427
    ],
    [
      -180,
      -174
    ],
    [
      -312,
      -30
    ],
    [
      -69,
      289
    ],
    [
      118,
      331
    ],
    [
      255,
      82
    ],
    [
      217,
      -163
    ],
    [
      3,
      -253
    ],
    [
      -32,
      -82
    ]
  ],
  [
    [
      23262,
      91636
    ],
    [
      169,
      -226
    ],
    [
      -173,
      -207
    ],
    [
      -374,
      179
    ],
    [
      -226,
      -65
    ],
    [
      -380,
      266
    ],
    [
      245,
      183
    ],
    [
      194,
      256
    ],
    [
      295,
      -168
    ],
    [
      166,
      -106
    ],
    [
      84,
      -112
    ]
  ],
  [
    [
      32078,
      80046
    ],
    [
      96,
      49
    ],
    [
      365,
      -148
    ],
    [
      284,
      -247
    ],
    [
      8,
      -108
    ],
    [
      -135,
      -11
    ],
    [
      -360,
      186
    ],
    [
      -258,
      279
    ]
  ],
  [
    [
      32218,
      78370
    ],
    [
      97,
      -288
    ],
    [
      202,
      -79
    ],
    [
      257,
      16
    ],
    [
      -137,
      -242
    ],
    [
      -102,
      -38
    ],
    [
      -353,
      250
    ],
    [
      -69,
      198
    ],
    [
      105,
      183
    ]
  ],
  [
    [
      31350,
      77248
    ],
    [
      48,
      -194
    ],
    [
      -296,
      -286
    ],
    [
      -286,
      -204
    ],
    [
      -293,
      -175
    ],
    [
      -147,
      -351
    ],
    [
      -47,
      -133
    ],
    [
      -3,
      -313
    ],
    [
      92,
      -313
    ],
    [
      115,
      -15
    ],
    [
      -29,
      216
    ],
    [
      83,
      -131
    ],
    [
      -22,
      -169
    ],
    [
      -188,
      -96
    ],
    [
      -133,
      11
    ],
    [
      -205,
      -103
    ],
    [
      -121,
      -29
    ],
    [
      -162,
      -29
    ],
    [
      -231,
      -171
    ],
    [
      408,
      111
    ],
    [
      82,
      -112
    ],
    [
      -389,
      -177
    ],
    [
      -177,
      -1
    ],
    [
      8,
      72
    ],
    [
      -84,
      -164
    ],
    [
      82,
      -27
    ],
    [
      -60,
      -424
    ],
    [
      -203,
      -455
    ],
    [
      -20,
      152
    ],
    [
      -61,
      30
    ],
    [
      -91,
      148
    ],
    [
      57,
      -318
    ],
    [
      69,
      -105
    ],
    [
      5,
      -223
    ],
    [
      -89,
      -230
    ],
    [
      -157,
      -472
    ],
    [
      -25,
      24
    ],
    [
      86,
      402
    ],
    [
      -142,
      225
    ],
    [
      -33,
      491
    ],
    [
      -53,
      -255
    ],
    [
      59,
      -375
    ],
    [
      -183,
      93
    ],
    [
      191,
      -191
    ],
    [
      12,
      -562
    ],
    [
      79,
      -41
    ],
    [
      29,
      -204
    ],
    [
      39,
      -591
    ],
    [
      -176,
      -439
    ],
    [
      -288,
      -175
    ],
    [
      -182,
      -346
    ],
    [
      -139,
      -38
    ],
    [
      -141,
      -217
    ],
    [
      -39,
      -199
    ],
    [
      -305,
      -383
    ],
    [
      -157,
      -281
    ],
    [
      -131,
      -351
    ],
    [
      -43,
      -419
    ],
    [
      50,
      -411
    ],
    [
      92,
      -505
    ],
    [
      124,
      -418
    ],
    [
      1,
      -256
    ],
    [
      132,
      -685
    ],
    [
      -9,
      -398
    ],
    [
      -12,
      -230
    ],
    [
      -69,
      -361
    ],
    [
      -83,
      -75
    ],
    [
      -137,
      72
    ],
    [
      -44,
      259
    ],
    [
      -105,
      136
    ],
    [
      -148,
      508
    ],
    [
      -129,
      452
    ],
    [
      -42,
      231
    ],
    [
      57,
      393
    ],
    [
      -77,
      325
    ],
    [
      -217,
      494
    ],
    [
      -108,
      90
    ],
    [
      -281,
      -268
    ],
    [
      -49,
      30
    ],
    [
      -135,
      275
    ],
    [
      -174,
      147
    ],
    [
      -314,
      -75
    ],
    [
      -247,
      66
    ],
    [
      -212,
      -41
    ],
    [
      -114,
      -92
    ],
    [
      50,
      -157
    ],
    [
      -5,
      -240
    ],
    [
      59,
      -117
    ],
    [
      -53,
      -77
    ],
    [
      -103,
      87
    ],
    [
      -104,
      -112
    ],
    [
      -202,
      18
    ],
    [
      -207,
      312
    ],
    [
      -242,
      -73
    ],
    [
      -202,
      137
    ],
    [
      -173,
      -42
    ],
    [
      -234,
      -138
    ],
    [
      -253,
      -438
    ],
    [
      -276,
      -255
    ],
    [
      -152,
      -282
    ],
    [
      -63,
      -266
    ],
    [
      -3,
      -407
    ],
    [
      14,
      -284
    ],
    [
      52,
      -201
    ]
  ],
  [
    [
      23016,
      65864
    ],
    [
      -108,
      -18
    ],
    [
      -197,
      130
    ],
    [
      -217,
      184
    ],
    [
      -78,
      277
    ],
    [
      -61,
      414
    ],
    [
      -164,
      337
    ],
    [
      -96,
      346
    ],
    [
      -139,
      404
    ],
    [
      -196,
      236
    ],
    [
      -227,
      -11
    ],
    [
      -175,
      -467
    ],
    [
      -230,
      177
    ],
    [
      -144,
      178
    ],
    [
      -69,
      325
    ],
    [
      -92,
      309
    ],
    [
      -165,
      260
    ],
    [
      -142,
      186
    ],
    [
      -102,
      210
    ],
    [
      -481,
      0
    ],
    [
      0,
      -244
    ],
    [
      -221,
      0
    ],
    [
      -552,
      -4
    ],
    [
      -634,
      416
    ],
    [
      -419,
      287
    ],
    [
      26,
      116
    ],
    [
      -353,
      -64
    ],
    [
      -316,
      -46
    ]
  ],
  [
    [
      17464,
      69802
    ],
    [
      -46,
      302
    ],
    [
      -180,
      340
    ],
    [
      -130,
      71
    ],
    [
      -30,
      169
    ],
    [
      -156,
      30
    ],
    [
      -100,
      159
    ],
    [
      -258,
      59
    ],
    [
      -71,
      95
    ],
    [
      -33,
      324
    ],
    [
      -270,
      594
    ],
    [
      -231,
      821
    ],
    [
      10,
      137
    ],
    [
      -123,
      195
    ],
    [
      -215,
      495
    ],
    [
      -38,
      482
    ],
    [
      -148,
      323
    ],
    [
      61,
      489
    ],
    [
      -10,
      507
    ],
    [
      -89,
      453
    ],
    [
      109,
      557
    ],
    [
      34,
      536
    ],
    [
      33,
      536
    ],
    [
      -50,
      792
    ],
    [
      -88,
      506
    ],
    [
      -80,
      274
    ],
    [
      33,
      115
    ],
    [
      402,
      -200
    ],
    [
      148,
      -558
    ],
    [
      69,
      156
    ],
    [
      -45,
      484
    ],
    [
      -94,
      485
    ]
  ],
  [
    [
      6833,
      62443
    ],
    [
      49,
      -51
    ],
    [
      45,
      -79
    ],
    [
      71,
      -207
    ],
    [
      -7,
      -33
    ],
    [
      -108,
      -126
    ],
    [
      -89,
      -92
    ],
    [
      -41,
      -99
    ],
    [
      -69,
      84
    ],
    [
      8,
      165
    ],
    [
      -46,
      216
    ],
    [
      14,
      65
    ],
    [
      48,
      97
    ],
    [
      -19,
      116
    ],
    [
      16,
      55
    ],
    [
      21,
      -11
    ],
    [
      107,
      -100
    ]
  ],
  [
    [
      6668,
      62848
    ],
    [
      -23,
      -71
    ],
    [
      -94,
      -43
    ],
    [
      -47,
      125
    ],
    [
      -32,
      48
    ],
    [
      -3,
      37
    ],
    [
      27,
      50
    ],
    [
      99,
      -56
    ],
    [
      73,
      -90
    ]
  ],
  [
    [
      6456,
      63091
    ],
    [
      -9,
      -63
    ],
    [
      -149,
      17
    ],
    [
      21,
      72
    ],
    [
      137,
      -26
    ]
  ],
  [
    [
      6104,
      63411
    ],
    [
      23,
      -38
    ],
    [
      80,
      -196
    ],
    [
      -15,
      -34
    ],
    [
      -19,
      8
    ],
    [
      -97,
      21
    ],
    [
      -35,
      133
    ],
    [
      -11,
      24
    ],
    [
      74,
      82
    ]
  ],
  [
    [
      5732,
      63705
    ],
    [
      5,
      -138
    ],
    [
      -33,
      -58
    ],
    [
      -93,
      107
    ],
    [
      14,
      43
    ],
    [
      43,
      58
    ],
    [
      64,
      -12
    ]
  ],
  [
    [
      3759,
      86256
    ],
    [
      220,
      -54
    ],
    [
      27,
      -226
    ],
    [
      -171,
      -92
    ],
    [
      -182,
      110
    ],
    [
      -168,
      161
    ],
    [
      274,
      101
    ]
  ],
  [
    [
      7436,
      84829
    ],
    [
      185,
      -40
    ],
    [
      117,
      -183
    ],
    [
      -240,
      -281
    ],
    [
      -277,
      -225
    ],
    [
      -142,
      152
    ],
    [
      -43,
      277
    ],
    [
      252,
      210
    ],
    [
      148,
      90
    ]
  ],
  [
    [
      13740,
      82958
    ],
    [
      -153,
      223
    ],
    [
      -245,
      188
    ],
    [
      -78,
      515
    ],
    [
      -358,
      478
    ],
    [
      -150,
      558
    ],
    [
      -267,
      38
    ],
    [
      -441,
      15
    ],
    [
      -326,
      170
    ],
    [
      -574,
      613
    ],
    [
      -266,
      112
    ],
    [
      -486,
      211
    ],
    [
      -385,
      -51
    ],
    [
      -546,
      272
    ],
    [
      -330,
      252
    ],
    [
      -309,
      -125
    ],
    [
      58,
      -411
    ],
    [
      -154,
      -38
    ],
    [
      -321,
      -123
    ],
    [
      -245,
      -199
    ],
    [
      -308,
      -126
    ],
    [
      -39,
      348
    ],
    [
      125,
      580
    ],
    [
      295,
      182
    ],
    [
      -76,
      148
    ],
    [
      -354,
      -329
    ],
    [
      -190,
      -394
    ],
    [
      -400,
      -420
    ],
    [
      203,
      -287
    ],
    [
      -262,
      -424
    ],
    [
      -299,
      -248
    ],
    [
      -278,
      -180
    ],
    [
      -69,
      -261
    ],
    [
      -434,
      -305
    ],
    [
      -87,
      -278
    ],
    [
      -325,
      -252
    ],
    [
      -191,
      45
    ],
    [
      -259,
      -165
    ],
    [
      -282,
      -201
    ],
    [
      -231,
      -197
    ],
    [
      -477,
      -169
    ],
    [
      -43,
      99
    ],
    [
      304,
      276
    ],
    [
      271,
      182
    ],
    [
      296,
      324
    ],
    [
      345,
      66
    ],
    [
      137,
      243
    ],
    [
      385,
      353
    ],
    [
      62,
      119
    ],
    [
      205,
      208
    ],
    [
      48,
      448
    ],
    [
      141,
      349
    ],
    [
      -320,
      -179
    ],
    [
      -90,
      102
    ],
    [
      -150,
      -215
    ],
    [
      -181,
      300
    ],
    [
      -75,
      -212
    ],
    [
      -104,
      294
    ],
    [
      -278,
      -236
    ],
    [
      -170,
      0
    ],
    [
      -24,
      352
    ],
    [
      50,
      216
    ],
    [
      -179,
      211
    ],
    [
      -361,
      -113
    ],
    [
      -235,
      277
    ],
    [
      -190,
      142
    ],
    [
      -1,
      334
    ],
    [
      -214,
      252
    ],
    [
      108,
      340
    ],
    [
      226,
      330
    ],
    [
      99,
      303
    ],
    [
      225,
      43
    ],
    [
      191,
      -94
    ],
    [
      224,
      285
    ],
    [
      201,
      -51
    ],
    [
      212,
      183
    ],
    [
      -52,
      270
    ],
    [
      -155,
      106
    ],
    [
      205,
      228
    ],
    [
      -170,
      -7
    ],
    [
      -295,
      -128
    ],
    [
      -85,
      -131
    ],
    [
      -219,
      131
    ],
    [
      -392,
      -67
    ],
    [
      -407,
      142
    ],
    [
      -117,
      238
    ],
    [
      -351,
      343
    ],
    [
      390,
      247
    ],
    [
      620,
      289
    ],
    [
      228,
      0
    ],
    [
      -38,
      -296
    ],
    [
      586,
      23
    ],
    [
      -225,
      366
    ],
    [
      -342,
      225
    ],
    [
      -197,
      296
    ],
    [
      -267,
      252
    ],
    [
      -381,
      187
    ],
    [
      155,
      309
    ],
    [
      493,
      19
    ],
    [
      350,
      270
    ],
    [
      66,
      287
    ],
    [
      284,
      281
    ],
    [
      271,
      68
    ],
    [
      526,
      262
    ],
    [
      256,
      -40
    ],
    [
      427,
      315
    ],
    [
      421,
      -124
    ],
    [
      201,
      -266
    ],
    [
      123,
      114
    ],
    [
      469,
      -35
    ],
    [
      -16,
      -136
    ],
    [
      425,
      -101
    ],
    [
      283,
      59
    ],
    [
      585,
      -186
    ],
    [
      534,
      -56
    ],
    [
      214,
      -77
    ],
    [
      370,
      96
    ],
    [
      421,
      -177
    ],
    [
      302,
      -83
    ]
  ],
  [
    [
      2297,
      88264
    ],
    [
      171,
      -113
    ],
    [
      173,
      61
    ],
    [
      225,
      -156
    ],
    [
      276,
      -79
    ],
    [
      -23,
      -64
    ],
    [
      -211,
      -125
    ],
    [
      -211,
      128
    ],
    [
      -106,
      107
    ],
    [
      -245,
      -34
    ],
    [
      -66,
      52
    ],
    [
      17,
      223
    ]
  ],
  [
    [
      74266,
      79657
    ],
    [
      -212,
      -393
    ],
    [
      -230,
      -56
    ],
    [
      -13,
      -592
    ],
    [
      -155,
      -267
    ],
    [
      -551,
      194
    ],
    [
      -200,
      -1058
    ],
    [
      -143,
      -131
    ],
    [
      -550,
      -236
    ],
    [
      250,
      -1026
    ],
    [
      -190,
      -154
    ],
    [
      22,
      -337
    ]
  ],
  [
    [
      72294,
      75601
    ],
    [
      -171,
      87
    ],
    [
      -140,
      212
    ],
    [
      -412,
      62
    ],
    [
      -461,
      16
    ],
    [
      -100,
      -65
    ],
    [
      -396,
      248
    ],
    [
      -158,
      -122
    ],
    [
      -43,
      -349
    ],
    [
      -457,
      204
    ],
    [
      -183,
      -84
    ],
    [
      -62,
      -259
    ]
  ],
  [
    [
      69711,
      75551
    ],
    [
      -159,
      -109
    ],
    [
      -367,
      -412
    ],
    [
      -121,
      -422
    ],
    [
      -104,
      -4
    ],
    [
      -76,
      280
    ],
    [
      -353,
      19
    ],
    [
      -57,
      484
    ],
    [
      -135,
      4
    ],
    [
      21,
      593
    ],
    [
      -333,
      431
    ],
    [
      -476,
      -46
    ],
    [
      -326,
      -86
    ],
    [
      -265,
      533
    ],
    [
      -227,
      223
    ],
    [
      -431,
      423
    ],
    [
      -52,
      51
    ],
    [
      -715,
      -349
    ],
    [
      11,
      -2178
    ]
  ],
  [
    [
      65546,
      74986
    ],
    [
      -142,
      -29
    ],
    [
      -195,
      463
    ],
    [
      -188,
      166
    ],
    [
      -315,
      -123
    ],
    [
      -123,
      -197
    ]
  ],
  [
    [
      64583,
      75266
    ],
    [
      -15,
      144
    ],
    [
      68,
      246
    ],
    [
      -53,
      206
    ],
    [
      -322,
      202
    ],
    [
      -125,
      530
    ],
    [
      -154,
      150
    ],
    [
      -9,
      192
    ],
    [
      270,
      -56
    ],
    [
      11,
      432
    ],
    [
      236,
      96
    ],
    [
      243,
      -88
    ],
    [
      50,
      576
    ],
    [
      -50,
      365
    ],
    [
      -278,
      -28
    ],
    [
      -236,
      144
    ],
    [
      -321,
      -260
    ],
    [
      -259,
      -124
    ]
  ],
  [
    [
      63639,
      77993
    ],
    [
      -142,
      96
    ],
    [
      29,
      304
    ],
    [
      -177,
      395
    ],
    [
      -207,
      -17
    ],
    [
      -235,
      401
    ],
    [
      160,
      448
    ],
    [
      -81,
      120
    ],
    [
      222,
      649
    ],
    [
      285,
      -342
    ],
    [
      35,
      431
    ],
    [
      573,
      643
    ],
    [
      434,
      15
    ],
    [
      612,
      -409
    ],
    [
      329,
      -239
    ],
    [
      295,
      249
    ],
    [
      440,
      12
    ],
    [
      356,
      -306
    ],
    [
      80,
      175
    ],
    [
      391,
      -25
    ],
    [
      69,
      280
    ],
    [
      -450,
      406
    ],
    [
      267,
      288
    ],
    [
      -52,
      161
    ],
    [
      266,
      153
    ],
    [
      -200,
      405
    ],
    [
      127,
      202
    ],
    [
      1039,
      205
    ],
    [
      136,
      146
    ],
    [
      695,
      218
    ],
    [
      250,
      245
    ],
    [
      499,
      -127
    ],
    [
      88,
      -612
    ],
    [
      290,
      144
    ],
    [
      356,
      -202
    ],
    [
      -23,
      -322
    ],
    [
      267,
      33
    ],
    [
      696,
      558
    ],
    [
      -102,
      -185
    ],
    [
      355,
      -457
    ],
    [
      620,
      -1500
    ],
    [
      148,
      309
    ],
    [
      383,
      -340
    ],
    [
      399,
      151
    ],
    [
      154,
      -106
    ],
    [
      133,
      -341
    ],
    [
      194,
      -115
    ],
    [
      119,
      -251
    ],
    [
      358,
      79
    ],
    [
      147,
      -361
    ]
  ],
  [
    [
      69711,
      75551
    ],
    [
      83,
      -58
    ],
    [
      -234,
      -382
    ],
    [
      205,
      -223
    ],
    [
      198,
      147
    ],
    [
      329,
      -311
    ],
    [
      -355,
      -425
    ],
    [
      -212,
      58
    ]
  ],
  [
    [
      69725,
      74357
    ],
    [
      -114,
      -15
    ],
    [
      -40,
      164
    ],
    [
      58,
      274
    ],
    [
      -371,
      -137
    ],
    [
      -89,
      -380
    ],
    [
      -132,
      -326
    ],
    [
      -232,
      28
    ],
    [
      -72,
      -261
    ],
    [
      204,
      -140
    ],
    [
      60,
      -440
    ],
    [
      -156,
      -598
    ]
  ],
  [
    [
      68841,
      72526
    ],
    [
      -210,
      124
    ],
    [
      -154,
      4
    ]
  ],
  [
    [
      68477,
      72654
    ],
    [
      7,
      362
    ],
    [
      -369,
      253
    ],
    [
      -291,
      289
    ],
    [
      -181,
      278
    ],
    [
      -317,
      408
    ],
    [
      -137,
      609
    ],
    [
      -93,
      108
    ],
    [
      -301,
      -27
    ],
    [
      -106,
      121
    ],
    [
      -30,
      471
    ],
    [
      -374,
      312
    ],
    [
      -234,
      -343
    ],
    [
      -237,
      -204
    ],
    [
      45,
      -297
    ],
    [
      -313,
      -8
    ]
  ],
  [
    [
      89166,
      49043
    ],
    [
      482,
      -407
    ],
    [
      513,
      -338
    ],
    [
      192,
      -302
    ],
    [
      154,
      -297
    ],
    [
      43,
      -349
    ],
    [
      462,
      -365
    ],
    [
      68,
      -313
    ],
    [
      -256,
      -64
    ],
    [
      62,
      -393
    ],
    [
      248,
      -388
    ],
    [
      180,
      -627
    ],
    [
      159,
      20
    ],
    [
      -11,
      -262
    ],
    [
      215,
      -100
    ],
    [
      -84,
      -111
    ],
    [
      295,
      -249
    ],
    [
      -30,
      -171
    ],
    [
      -184,
      -41
    ],
    [
      -69,
      153
    ],
    [
      -238,
      66
    ],
    [
      -281,
      89
    ],
    [
      -216,
      377
    ],
    [
      -158,
      325
    ],
    [
      -144,
      517
    ],
    [
      -362,
      259
    ],
    [
      -235,
      -169
    ],
    [
      -170,
      -195
    ],
    [
      35,
      -436
    ],
    [
      -218,
      -203
    ],
    [
      -155,
      99
    ],
    [
      -288,
      25
    ]
  ],
  [
    [
      89175,
      45193
    ],
    [
      -4,
      1925
    ],
    [
      -5,
      1925
    ]
  ],
  [
    [
      92399,
      48417
    ],
    [
      106,
      -189
    ],
    [
      33,
      -307
    ],
    [
      -87,
      -157
    ],
    [
      -52,
      348
    ],
    [
      -65,
      229
    ],
    [
      -126,
      193
    ],
    [
      -158,
      252
    ],
    [
      -200,
      174
    ],
    [
      77,
      143
    ],
    [
      150,
      -166
    ],
    [
      94,
      -130
    ],
    [
      117,
      -142
    ],
    [
      111,
      -248
    ]
  ],
  [
    [
      92027,
      47129
    ],
    [
      -152,
      -144
    ],
    [
      -142,
      -138
    ],
    [
      -148,
      1
    ],
    [
      -228,
      171
    ],
    [
      -158,
      165
    ],
    [
      23,
      183
    ],
    [
      249,
      -86
    ],
    [
      152,
      46
    ],
    [
      42,
      283
    ],
    [
      40,
      15
    ],
    [
      27,
      -314
    ],
    [
      158,
      45
    ],
    [
      78,
      202
    ],
    [
      155,
      211
    ],
    [
      -30,
      348
    ],
    [
      166,
      11
    ],
    [
      56,
      -97
    ],
    [
      -5,
      -327
    ],
    [
      -93,
      -361
    ],
    [
      -146,
      -48
    ],
    [
      -44,
      -166
    ]
  ],
  [
    [
      92988,
      47425
    ],
    [
      84,
      -134
    ],
    [
      135,
      -375
    ],
    [
      131,
      -200
    ],
    [
      -39,
      -166
    ],
    [
      -78,
      -59
    ],
    [
      -120,
      227
    ],
    [
      -122,
      375
    ],
    [
      -59,
      450
    ],
    [
      38,
      57
    ],
    [
      30,
      -175
    ]
  ],
  [
    [
      89175,
      45193
    ],
    [
      -247,
      485
    ],
    [
      -282,
      118
    ],
    [
      -69,
      -168
    ],
    [
      -352,
      -18
    ],
    [
      118,
      481
    ],
    [
      175,
      164
    ],
    [
      -72,
      642
    ],
    [
      -134,
      496
    ],
    [
      -538,
      500
    ],
    [
      -229,
      50
    ],
    [
      -417,
      546
    ],
    [
      -82,
      -287
    ],
    [
      -107,
      -52
    ],
    [
      -63,
      216
    ],
    [
      -1,
      257
    ],
    [
      -212,
      290
    ],
    [
      299,
      213
    ],
    [
      198,
      -11
    ],
    [
      -23,
      156
    ],
    [
      -407,
      1
    ],
    [
      -110,
      352
    ],
    [
      -248,
      109
    ],
    [
      -117,
      293
    ],
    [
      374,
      143
    ],
    [
      142,
      192
    ],
    [
      446,
      -242
    ],
    [
      44,
      -220
    ],
    [
      78,
      -955
    ],
    [
      287,
      -354
    ],
    [
      232,
      627
    ],
    [
      319,
      356
    ],
    [
      247,
      1
    ],
    [
      238,
      -206
    ],
    [
      206,
      -212
    ],
    [
      298,
      -113
    ]
  ],
  [
    [
      84713,
      45326
    ],
    [
      28,
      -117
    ],
    [
      5,
      -179
    ]
  ],
  [
    [
      84746,
      45030
    ],
    [
      -181,
      -441
    ],
    [
      -238,
      -130
    ],
    [
      -33,
      71
    ],
    [
      25,
      201
    ],
    [
      119,
      360
    ],
    [
      275,
      235
    ]
  ],
  [
    [
      87280,
      46506
    ],
    [
      -27,
      445
    ],
    [
      49,
      212
    ],
    [
      58,
      200
    ],
    [
      63,
      -173
    ],
    [
      0,
      -282
    ],
    [
      -143,
      -402
    ]
  ],
  [
    [
      82744,
      53024
    ],
    [
      -158,
      -533
    ],
    [
      204,
      -560
    ],
    [
      -48,
      -272
    ],
    [
      312,
      -546
    ],
    [
      -329,
      -70
    ],
    [
      -93,
      -403
    ],
    [
      12,
      -535
    ],
    [
      -267,
      -404
    ],
    [
      -7,
      -589
    ],
    [
      -107,
      -903
    ],
    [
      -41,
      210
    ],
    [
      -316,
      -266
    ],
    [
      -110,
      361
    ],
    [
      -198,
      34
    ],
    [
      -139,
      189
    ],
    [
      -330,
      -212
    ],
    [
      -101,
      285
    ],
    [
      -182,
      -32
    ],
    [
      -229,
      68
    ],
    [
      -43,
      793
    ],
    [
      -138,
      164
    ],
    [
      -134,
      505
    ],
    [
      -38,
      517
    ],
    [
      32,
      548
    ],
    [
      165,
      392
    ]
  ],
  [
    [
      80461,
      51765
    ],
    [
      47,
      -395
    ],
    [
      190,
      -334
    ],
    [
      179,
      121
    ],
    [
      177,
      -43
    ],
    [
      162,
      299
    ],
    [
      133,
      52
    ],
    [
      263,
      -166
    ],
    [
      226,
      126
    ],
    [
      143,
      822
    ],
    [
      107,
      205
    ],
    [
      96,
      672
    ],
    [
      319,
      0
    ],
    [
      241,
      -100
    ]
  ],
  [
    [
      85936,
      48924
    ],
    [
      305,
      -172
    ],
    [
      101,
      -452
    ],
    [
      -234,
      244
    ],
    [
      -232,
      49
    ],
    [
      -157,
      -39
    ],
    [
      -192,
      21
    ],
    [
      65,
      325
    ],
    [
      344,
      24
    ]
  ],
  [
    [
      85242,
      48340
    ],
    [
      -192,
      108
    ],
    [
      -54,
      254
    ],
    [
      281,
      29
    ],
    [
      69,
      -195
    ],
    [
      -104,
      -196
    ]
  ],
  [
    [
      85536,
      51864
    ],
    [
      20,
      -322
    ],
    [
      164,
      -52
    ],
    [
      26,
      -241
    ],
    [
      -15,
      -517
    ],
    [
      -143,
      58
    ],
    [
      -42,
      -359
    ],
    [
      114,
      -312
    ],
    [
      -78,
      -71
    ],
    [
      -112,
      374
    ],
    [
      -82,
      755
    ],
    [
      56,
      472
    ],
    [
      92,
      215
    ]
  ],
  [
    [
      84146,
      51097
    ],
    [
      319,
      25
    ],
    [
      275,
      429
    ],
    [
      48,
      -132
    ],
    [
      -223,
      -587
    ],
    [
      -209,
      -113
    ],
    [
      -267,
      115
    ],
    [
      -463,
      -29
    ],
    [
      -243,
      -85
    ],
    [
      -39,
      -447
    ],
    [
      248,
      -526
    ],
    [
      150,
      268
    ],
    [
      518,
      201
    ],
    [
      -22,
      -272
    ],
    [
      -121,
      86
    ],
    [
      -121,
      -347
    ],
    [
      -245,
      -229
    ],
    [
      263,
      -757
    ],
    [
      -50,
      -203
    ],
    [
      249,
      -682
    ],
    [
      -2,
      -388
    ],
    [
      -148,
      -173
    ],
    [
      -109,
      207
    ],
    [
      134,
      484
    ],
    [
      -273,
      -229
    ],
    [
      -69,
      164
    ],
    [
      36,
      228
    ],
    [
      -200,
      346
    ],
    [
      21,
      576
    ],
    [
      -186,
      -179
    ],
    [
      24,
      -689
    ],
    [
      11,
      -846
    ],
    [
      -176,
      -85
    ],
    [
      -119,
      173
    ],
    [
      79,
      544
    ],
    [
      -43,
      570
    ],
    [
      -117,
      4
    ],
    [
      -86,
      405
    ],
    [
      115,
      387
    ],
    [
      40,
      469
    ],
    [
      139,
      891
    ],
    [
      58,
      243
    ],
    [
      237,
      439
    ],
    [
      217,
      -174
    ],
    [
      350,
      -82
    ]
  ],
  [
    [
      83414,
      44519
    ],
    [
      -368,
      414
    ],
    [
      259,
      116
    ],
    [
      146,
      -180
    ],
    [
      97,
      -180
    ],
    [
      -17,
      -159
    ],
    [
      -117,
      -11
    ]
  ],
  [
    [
      83705,
      45536
    ],
    [
      185,
      45
    ],
    [
      249,
      216
    ],
    [
      -41,
      -328
    ],
    [
      -417,
      -168
    ],
    [
      -370,
      73
    ],
    [
      0,
      216
    ],
    [
      220,
      123
    ],
    [
      174,
      -177
    ]
  ],
  [
    [
      82849,
      45639
    ],
    [
      172,
      48
    ],
    [
      69,
      -251
    ],
    [
      -321,
      -119
    ],
    [
      -193,
      -79
    ],
    [
      -149,
      5
    ],
    [
      95,
      340
    ],
    [
      153,
      5
    ],
    [
      74,
      209
    ],
    [
      100,
      -158
    ]
  ],
  [
    [
      80134,
      46785
    ],
    [
      38,
      -210
    ],
    [
      533,
      -59
    ],
    [
      61,
      244
    ],
    [
      515,
      -284
    ],
    [
      101,
      -383
    ],
    [
      417,
      -108
    ],
    [
      341,
      -351
    ],
    [
      -317,
      -225
    ],
    [
      -306,
      238
    ],
    [
      -251,
      -16
    ],
    [
      -288,
      44
    ],
    [
      -260,
      106
    ],
    [
      -322,
      225
    ],
    [
      -204,
      59
    ],
    [
      -116,
      -74
    ],
    [
      -506,
      243
    ],
    [
      -48,
      254
    ],
    [
      -255,
      44
    ],
    [
      191,
      564
    ],
    [
      337,
      -35
    ],
    [
      224,
      -231
    ],
    [
      115,
      -45
    ]
  ],
  [
    [
      78991,
      49939
    ],
    [
      47,
      -412
    ],
    [
      97,
      -330
    ],
    [
      204,
      -52
    ],
    [
      135,
      -374
    ],
    [
      -70,
      -735
    ],
    [
      -11,
      -914
    ],
    [
      -308,
      -12
    ],
    [
      -234,
      494
    ],
    [
      -356,
      482
    ],
    [
      -119,
      358
    ],
    [
      -210,
      481
    ],
    [
      -138,
      443
    ],
    [
      -212,
      827
    ],
    [
      -244,
      493
    ],
    [
      -81,
      508
    ],
    [
      -103,
      461
    ],
    [
      -250,
      372
    ],
    [
      -145,
      506
    ],
    [
      -209,
      330
    ],
    [
      -290,
      652
    ],
    [
      -24,
      300
    ],
    [
      178,
      -24
    ],
    [
      430,
      -114
    ],
    [
      246,
      -577
    ],
    [
      215,
      -401
    ],
    [
      153,
      -246
    ],
    [
      263,
      -635
    ],
    [
      283,
      -9
    ],
    [
      233,
      -405
    ],
    [
      161,
      -495
    ],
    [
      211,
      -270
    ],
    [
      -111,
      -482
    ],
    [
      159,
      -205
    ],
    [
      100,
      -15
    ]
  ],
  [
    [
      30935,
      19481
    ],
    [
      106,
      -274
    ],
    [
      139,
      -443
    ],
    [
      361,
      -355
    ],
    [
      389,
      -147
    ],
    [
      -125,
      -296
    ],
    [
      -264,
      -29
    ],
    [
      -141,
      208
    ]
  ],
  [
    [
      31400,
      18145
    ],
    [
      -168,
      16
    ],
    [
      -297,
      1
    ],
    [
      0,
      1319
    ]
  ],
  [
    [
      33993,
      32727
    ],
    [
      -70,
      -473
    ],
    [
      -74,
      -607
    ],
    [
      3,
      -588
    ],
    [
      -61,
      -132
    ],
    [
      -21,
      -382
    ]
  ],
  [
    [
      33770,
      30545
    ],
    [
      -19,
      -308
    ],
    [
      353,
      -506
    ],
    [
      -38,
      -408
    ],
    [
      173,
      -257
    ],
    [
      -14,
      -289
    ],
    [
      -267,
      -757
    ],
    [
      -412,
      -317
    ],
    [
      -557,
      -123
    ],
    [
      -305,
      59
    ],
    [
      59,
      -352
    ],
    [
      -57,
      -442
    ],
    [
      51,
      -298
    ],
    [
      -167,
      -208
    ],
    [
      -284,
      -82
    ],
    [
      -267,
      216
    ],
    [
      -108,
      -155
    ],
    [
      39,
      -587
    ],
    [
      188,
      -178
    ],
    [
      152,
      186
    ],
    [
      82,
      -307
    ],
    [
      -255,
      -183
    ],
    [
      -223,
      -367
    ],
    [
      -41,
      -595
    ],
    [
      -66,
      -316
    ],
    [
      -262,
      -2
    ],
    [
      -218,
      -302
    ],
    [
      -80,
      -443
    ],
    [
      273,
      -433
    ],
    [
      266,
      -119
    ],
    [
      -96,
      -531
    ],
    [
      -328,
      -333
    ],
    [
      -180,
      -692
    ],
    [
      -254,
      -234
    ],
    [
      -113,
      -276
    ],
    [
      89,
      -614
    ],
    [
      185,
      -342
    ],
    [
      -117,
      30
    ]
  ],
  [
    [
      30952,
      19680
    ],
    [
      -257,
      93
    ],
    [
      -672,
      79
    ],
    [
      -115,
      344
    ],
    [
      6,
      443
    ],
    [
      -185,
      -38
    ],
    [
      -98,
      214
    ],
    [
      -24,
      626
    ],
    [
      213,
      260
    ],
    [
      88,
      375
    ],
    [
      -33,
      299
    ],
    [
      148,
      504
    ],
    [
      101,
      782
    ],
    [
      -30,
      347
    ],
    [
      122,
      112
    ],
    [
      -30,
      223
    ],
    [
      -129,
      118
    ],
    [
      92,
      248
    ],
    [
      -126,
      224
    ],
    [
      -65,
      682
    ],
    [
      112,
      120
    ],
    [
      -47,
      720
    ],
    [
      65,
      605
    ],
    [
      75,
      527
    ],
    [
      166,
      215
    ],
    [
      -84,
      576
    ],
    [
      -1,
      543
    ],
    [
      210,
      386
    ],
    [
      -7,
      494
    ],
    [
      159,
      576
    ],
    [
      1,
      544
    ],
    [
      -72,
      108
    ],
    [
      -128,
      1020
    ],
    [
      171,
      607
    ],
    [
      -27,
      572
    ],
    [
      100,
      537
    ],
    [
      182,
      555
    ],
    [
      196,
      367
    ],
    [
      -83,
      232
    ],
    [
      58,
      190
    ],
    [
      -9,
      985
    ],
    [
      302,
      291
    ],
    [
      96,
      614
    ],
    [
      -34,
      148
    ]
  ],
  [
    [
      31359,
      37147
    ],
    [
      231,
      534
    ],
    [
      364,
      -144
    ],
    [
      163,
      -427
    ],
    [
      109,
      475
    ],
    [
      316,
      -24
    ],
    [
      45,
      -127
    ]
  ],
  [
    [
      32587,
      37434
    ],
    [
      511,
      -964
    ],
    [
      227,
      -89
    ],
    [
      339,
      -437
    ],
    [
      286,
      -231
    ],
    [
      40,
      -261
    ],
    [
      -273,
      -898
    ],
    [
      280,
      -160
    ],
    [
      312,
      -91
    ],
    [
      220,
      95
    ],
    [
      252,
      453
    ],
    [
      45,
      521
    ]
  ],
  [
    [
      34826,
      35372
    ],
    [
      138,
      114
    ],
    [
      139,
      -341
    ],
    [
      -6,
      -472
    ],
    [
      -234,
      -326
    ],
    [
      -186,
      -241
    ],
    [
      -314,
      -573
    ],
    [
      -370,
      -806
    ]
  ],
  [
    [
      31400,
      18145
    ],
    [
      -92,
      -239
    ],
    [
      -238,
      -183
    ],
    [
      -137,
      19
    ],
    [
      -164,
      48
    ],
    [
      -202,
      177
    ],
    [
      -291,
      86
    ],
    [
      -350,
      330
    ],
    [
      -283,
      317
    ],
    [
      -383,
      662
    ],
    [
      229,
      -124
    ],
    [
      390,
      -395
    ],
    [
      369,
      -212
    ],
    [
      143,
      271
    ],
    [
      90,
      405
    ],
    [
      256,
      244
    ],
    [
      198,
      -70
    ]
  ],
  [
    [
      30669,
      40193
    ],
    [
      136,
      -402
    ],
    [
      37,
      -426
    ],
    [
      146,
      -250
    ],
    [
      -88,
      -572
    ],
    [
      150,
      -663
    ],
    [
      109,
      -814
    ],
    [
      200,
      81
    ]
  ],
  [
    [
      30952,
      19680
    ],
    [
      -247,
      4
    ],
    [
      -134,
      -145
    ],
    [
      -250,
      -213
    ],
    [
      -45,
      -552
    ],
    [
      -118,
      -14
    ],
    [
      -313,
      192
    ],
    [
      -318,
      412
    ],
    [
      -346,
      338
    ],
    [
      -87,
      374
    ],
    [
      79,
      346
    ],
    [
      -140,
      393
    ],
    [
      -36,
      1007
    ],
    [
      119,
      568
    ],
    [
      293,
      457
    ],
    [
      -422,
      172
    ],
    [
      265,
      522
    ],
    [
      94,
      982
    ],
    [
      309,
      -208
    ],
    [
      145,
      1224
    ],
    [
      -186,
      157
    ],
    [
      -87,
      -738
    ],
    [
      -175,
      83
    ],
    [
      87,
      845
    ],
    [
      95,
      1095
    ],
    [
      127,
      404
    ],
    [
      -80,
      576
    ],
    [
      -22,
      666
    ],
    [
      117,
      19
    ],
    [
      170,
      954
    ],
    [
      192,
      945
    ],
    [
      118,
      881
    ],
    [
      -64,
      885
    ],
    [
      83,
      487
    ],
    [
      -34,
      730
    ],
    [
      163,
      721
    ],
    [
      50,
      1143
    ],
    [
      89,
      1227
    ],
    [
      87,
      1321
    ],
    [
      -20,
      967
    ],
    [
      -58,
      832
    ]
  ],
  [
    [
      30452,
      39739
    ],
    [
      143,
      151
    ],
    [
      74,
      303
    ]
  ],
  [
    [
      58538,
      45652
    ],
    [
      -109,
      60
    ],
    [
      -373,
      -99
    ],
    [
      -75,
      -71
    ],
    [
      -79,
      -377
    ],
    [
      62,
      -261
    ],
    [
      -49,
      -699
    ],
    [
      -34,
      -593
    ],
    [
      75,
      -105
    ],
    [
      194,
      -230
    ],
    [
      76,
      107
    ],
    [
      23,
      -637
    ],
    [
      -212,
      5
    ],
    [
      -114,
      325
    ],
    [
      -103,
      252
    ],
    [
      -213,
      82
    ],
    [
      -62,
      310
    ],
    [
      -170,
      -187
    ],
    [
      -222,
      83
    ],
    [
      -93,
      268
    ],
    [
      -176,
      55
    ],
    [
      -131,
      -15
    ],
    [
      -15,
      184
    ],
    [
      -96,
      15
    ]
  ],
  [
    [
      56642,
      44124
    ],
    [
      -127,
      35
    ],
    [
      -172,
      -89
    ],
    [
      -121,
      15
    ],
    [
      -68,
      -54
    ],
    [
      15,
      703
    ],
    [
      -93,
      219
    ],
    [
      -21,
      363
    ],
    [
      41,
      356
    ],
    [
      -56,
      228
    ],
    [
      -5,
      372
    ],
    [
      -337,
      -5
    ],
    [
      24,
      213
    ],
    [
      -142,
      -2
    ],
    [
      -15,
      -103
    ],
    [
      -172,
      -23
    ],
    [
      -69,
      -344
    ],
    [
      -42,
      -148
    ],
    [
      -154,
      83
    ],
    [
      -91,
      -83
    ],
    [
      -184,
      -47
    ],
    [
      -106,
      309
    ],
    [
      -64,
      191
    ],
    [
      -80,
      354
    ],
    [
      -68,
      440
    ],
    [
      -820,
      8
    ],
    [
      -98,
      -71
    ],
    [
      -80,
      11
    ],
    [
      -115,
      -79
    ]
  ],
  [
    [
      53422,
      46976
    ],
    [
      -39,
      183
    ]
  ],
  [
    [
      53383,
      47159
    ],
    [
      71,
      62
    ],
    [
      9,
      258
    ],
    [
      45,
      152
    ],
    [
      101,
      124
    ]
  ],
  [
    [
      53609,
      47755
    ],
    [
      73,
      -60
    ],
    [
      95,
      226
    ],
    [
      152,
      -6
    ],
    [
      17,
      -167
    ],
    [
      104,
      -105
    ],
    [
      164,
      370
    ],
    [
      161,
      289
    ],
    [
      71,
      189
    ],
    [
      -10,
      486
    ],
    [
      121,
      574
    ],
    [
      127,
      304
    ],
    [
      183,
      285
    ],
    [
      32,
      189
    ],
    [
      7,
      216
    ],
    [
      45,
      205
    ],
    [
      -14,
      335
    ],
    [
      34,
      524
    ],
    [
      55,
      368
    ],
    [
      83,
      316
    ],
    [
      16,
      357
    ]
  ],
  [
    [
      55125,
      52650
    ],
    [
      25,
      412
    ],
    [
      108,
      300
    ],
    [
      149,
      190
    ],
    [
      229,
      -200
    ],
    [
      177,
      -218
    ],
    [
      203,
      -59
    ],
    [
      207,
      -115
    ],
    [
      83,
      357
    ],
    [
      38,
      46
    ],
    [
      127,
      -60
    ],
    [
      309,
      295
    ],
    [
      110,
      -125
    ],
    [
      90,
      18
    ],
    [
      41,
      143
    ],
    [
      104,
      51
    ],
    [
      209,
      -62
    ],
    [
      178,
      -14
    ],
    [
      91,
      63
    ]
  ],
  [
    [
      57603,
      53672
    ],
    [
      169,
      -488
    ],
    [
      124,
      -71
    ],
    [
      75,
      99
    ],
    [
      128,
      -39
    ],
    [
      155,
      125
    ],
    [
      66,
      -252
    ],
    [
      244,
      -393
    ]
  ],
  [
    [
      58564,
      52653
    ],
    [
      -16,
      -691
    ],
    [
      111,
      -80
    ],
    [
      -89,
      -210
    ],
    [
      -107,
      -157
    ],
    [
      -106,
      -308
    ],
    [
      -59,
      -274
    ],
    [
      -15,
      -475
    ],
    [
      -65,
      -225
    ],
    [
      -2,
      -446
    ]
  ],
  [
    [
      58216,
      49787
    ],
    [
      -80,
      -165
    ],
    [
      -10,
      -351
    ],
    [
      -38,
      -46
    ],
    [
      -26,
      -323
    ]
  ],
  [
    [
      58062,
      48902
    ],
    [
      70,
      -268
    ],
    [
      17,
      -713
    ]
  ],
  [
    [
      61551,
      49585
    ],
    [
      -165,
      488
    ],
    [
      -3,
      2152
    ],
    [
      243,
      670
    ]
  ],
  [
    [
      61626,
      52895
    ],
    [
      76,
      186
    ],
    [
      178,
      11
    ],
    [
      247,
      417
    ],
    [
      362,
      26
    ],
    [
      785,
      1773
    ]
  ],
  [
    [
      63274,
      55308
    ],
    [
      194,
      493
    ],
    [
      125,
      363
    ],
    [
      0,
      308
    ],
    [
      0,
      596
    ],
    [
      1,
      244
    ],
    [
      2,
      9
    ]
  ],
  [
    [
      63596,
      57321
    ],
    [
      89,
      12
    ],
    [
      128,
      88
    ],
    [
      147,
      59
    ],
    [
      132,
      202
    ],
    [
      105,
      2
    ],
    [
      6,
      -163
    ],
    [
      -25,
      -344
    ],
    [
      1,
      -310
    ],
    [
      -59,
      -214
    ],
    [
      -78,
      -639
    ],
    [
      -134,
      -659
    ],
    [
      -172,
      -755
    ],
    [
      -238,
      -866
    ],
    [
      -237,
      -661
    ],
    [
      -327,
      -806
    ],
    [
      -278,
      -479
    ],
    [
      -415,
      -586
    ],
    [
      -259,
      -450
    ],
    [
      -304,
      -715
    ],
    [
      -64,
      -312
    ],
    [
      -63,
      -140
    ]
  ],
  [
    [
      59417,
      50018
    ],
    [
      -3,
      627
    ],
    [
      80,
      239
    ],
    [
      137,
      391
    ],
    [
      101,
      431
    ],
    [
      -123,
      678
    ],
    [
      -32,
      296
    ],
    [
      -132,
      411
    ]
  ],
  [
    [
      59445,
      53091
    ],
    [
      171,
      352
    ],
    [
      188,
      390
    ]
  ],
  [
    [
      59804,
      53833
    ],
    [
      145,
      -99
    ],
    [
      0,
      -332
    ],
    [
      95,
      -194
    ],
    [
      193,
      0
    ],
    [
      352,
      -502
    ],
    [
      87,
      -6
    ],
    [
      65,
      16
    ],
    [
      62,
      -68
    ],
    [
      185,
      -47
    ],
    [
      82,
      247
    ],
    [
      254,
      247
    ],
    [
      112,
      -200
    ],
    [
      190,
      0
    ]
  ],
  [
    [
      61551,
      49585
    ],
    [
      -195,
      -236
    ],
    [
      -68,
      -246
    ],
    [
      -104,
      -44
    ],
    [
      -40,
      -416
    ],
    [
      -89,
      -238
    ],
    [
      -54,
      -393
    ],
    [
      -112,
      -195
    ]
  ],
  [
    [
      56824,
      55442
    ],
    [
      -212,
      258
    ],
    [
      -96,
      170
    ],
    [
      -18,
      184
    ],
    [
      45,
      246
    ],
    [
      -1,
      241
    ],
    [
      -160,
      369
    ],
    [
      -31,
      253
    ]
  ],
  [
    [
      56351,
      57163
    ],
    [
      3,
      143
    ],
    [
      -102,
      174
    ],
    [
      -3,
      343
    ],
    [
      -58,
      228
    ],
    [
      -98,
      -34
    ],
    [
      28,
      217
    ],
    [
      72,
      246
    ],
    [
      -32,
      245
    ],
    [
      92,
      181
    ],
    [
      -58,
      138
    ],
    [
      73,
      365
    ],
    [
      127,
      435
    ],
    [
      240,
      -41
    ],
    [
      -14,
      2345
    ]
  ],
  [
    [
      56621,
      62148
    ],
    [
      3,
      248
    ],
    [
      320,
      2
    ],
    [
      0,
      1180
    ]
  ],
  [
    [
      56944,
      63578
    ],
    [
      1117,
      0
    ],
    [
      1077,
      0
    ],
    [
      1102,
      0
    ]
  ],
  [
    [
      60240,
      63578
    ],
    [
      90,
      -580
    ],
    [
      -61,
      -107
    ],
    [
      40,
      -608
    ],
    [
      102,
      -706
    ],
    [
      106,
      -145
    ],
    [
      152,
      -219
    ]
  ],
  [
    [
      60669,
      61213
    ],
    [
      -141,
      -337
    ],
    [
      -204,
      -97
    ],
    [
      -88,
      -181
    ],
    [
      -27,
      -393
    ],
    [
      -120,
      -868
    ],
    [
      30,
      -236
    ]
  ],
  [
    [
      60119,
      59101
    ],
    [
      -45,
      -508
    ],
    [
      -112,
      -582
    ],
    [
      -168,
      -293
    ],
    [
      -119,
      -451
    ],
    [
      -28,
      -241
    ],
    [
      -132,
      -166
    ],
    [
      -82,
      -618
    ],
    [
      4,
      -531
    ]
  ],
  [
    [
      59437,
      55711
    ],
    [
      -3,
      460
    ],
    [
      -39,
      12
    ],
    [
      5,
      294
    ],
    [
      -33,
      203
    ],
    [
      -143,
      233
    ],
    [
      -34,
      426
    ],
    [
      34,
      436
    ],
    [
      -129,
      41
    ],
    [
      -19,
      -132
    ],
    [
      -167,
      -30
    ],
    [
      67,
      -173
    ],
    [
      23,
      -355
    ],
    [
      -152,
      -324
    ],
    [
      -138,
      -426
    ],
    [
      -144,
      -61
    ],
    [
      -233,
      345
    ],
    [
      -105,
      -122
    ],
    [
      -29,
      -172
    ],
    [
      -143,
      -112
    ],
    [
      -9,
      -122
    ],
    [
      -277,
      0
    ],
    [
      -38,
      122
    ],
    [
      -200,
      20
    ],
    [
      -100,
      -101
    ],
    [
      -77,
      51
    ],
    [
      -143,
      344
    ],
    [
      -48,
      163
    ],
    [
      -200,
      -81
    ],
    [
      -76,
      -274
    ],
    [
      -72,
      -528
    ],
    [
      -95,
      -111
    ],
    [
      -85,
      -65
    ],
    [
      189,
      -230
    ]
  ],
  [
    [
      56351,
      57163
    ],
    [
      -176,
      -101
    ],
    [
      -141,
      -239
    ],
    [
      -201,
      -645
    ],
    [
      -261,
      -273
    ],
    [
      -269,
      36
    ],
    [
      -78,
      -54
    ],
    [
      28,
      -208
    ],
    [
      -145,
      -207
    ],
    [
      -118,
      -230
    ],
    [
      -350,
      -226
    ],
    [
      -69,
      134
    ],
    [
      -46,
      11
    ],
    [
      -52,
      -152
    ],
    [
      -229,
      -44
    ]
  ],
  [
    [
      54244,
      54965
    ],
    [
      43,
      160
    ],
    [
      -87,
      407
    ],
    [
      -39,
      245
    ],
    [
      -121,
      100
    ],
    [
      -164,
      345
    ],
    [
      60,
      279
    ],
    [
      127,
      -60
    ],
    [
      78,
      42
    ],
    [
      155,
      -6
    ],
    [
      -151,
      537
    ],
    [
      10,
      393
    ],
    [
      -18,
      392
    ],
    [
      -111,
      378
    ]
  ],
  [
    [
      54026,
      58177
    ],
    [
      28,
      279
    ],
    [
      -178,
      13
    ],
    [
      0,
      380
    ],
    [
      -115,
      219
    ],
    [
      120,
      778
    ],
    [
      354,
      557
    ],
    [
      15,
      769
    ],
    [
      107,
      1199
    ],
    [
      60,
      254
    ],
    [
      -116,
      203
    ],
    [
      -4,
      188
    ],
    [
      -104,
      153
    ],
    [
      -68,
      919
    ]
  ],
  [
    [
      54125,
      64088
    ],
    [
      280,
      323
    ],
    [
      1108,
      -1132
    ],
    [
      1108,
      -1131
    ]
  ],
  [
    [
      30080,
      62227
    ],
    [
      24,
      -321
    ],
    [
      -21,
      -228
    ],
    [
      -68,
      -99
    ],
    [
      71,
      -177
    ],
    [
      -5,
      -161
    ]
  ],
  [
    [
      30081,
      61241
    ],
    [
      -185,
      100
    ],
    [
      -131,
      -41
    ],
    [
      -169,
      43
    ],
    [
      -130,
      -110
    ],
    [
      -149,
      184
    ],
    [
      24,
      190
    ],
    [
      256,
      -82
    ],
    [
      210,
      -47
    ],
    [
      100,
      131
    ],
    [
      -127,
      256
    ],
    [
      2,
      226
    ],
    [
      -175,
      92
    ],
    [
      62,
      163
    ],
    [
      170,
      -26
    ],
    [
      241,
      -93
    ]
  ],
  [
    [
      30080,
      62227
    ],
    [
      34,
      101
    ],
    [
      217,
      -3
    ],
    [
      165,
      -152
    ],
    [
      73,
      15
    ],
    [
      50,
      -209
    ],
    [
      152,
      11
    ],
    [
      -9,
      -176
    ],
    [
      124,
      -21
    ],
    [
      136,
      -217
    ],
    [
      -103,
      -240
    ],
    [
      -132,
      128
    ],
    [
      -127,
      -25
    ],
    [
      -92,
      28
    ],
    [
      -50,
      -107
    ],
    [
      -106,
      -37
    ],
    [
      -43,
      144
    ],
    [
      -92,
      -85
    ],
    [
      -111,
      -405
    ],
    [
      -71,
      94
    ],
    [
      -14,
      170
    ]
  ],
  [
    [
      76049,
      98451
    ],
    [
      600,
      133
    ],
    [
      540,
      -297
    ],
    [
      640,
      -572
    ],
    [
      -69,
      -531
    ],
    [
      -606,
      -73
    ],
    [
      -773,
      170
    ],
    [
      -462,
      226
    ],
    [
      -213,
      423
    ],
    [
      -379,
      117
    ],
    [
      722,
      404
    ]
  ],
  [
    [
      78565,
      97421
    ],
    [
      704,
      -336
    ],
    [
      -82,
      -240
    ],
    [
      -1566,
      -228
    ],
    [
      507,
      776
    ],
    [
      229,
      66
    ],
    [
      208,
      -38
    ]
  ],
  [
    [
      88563,
      95563
    ],
    [
      734,
      -26
    ],
    [
      1004,
      -313
    ],
    [
      -219,
      -439
    ],
    [
      -1023,
      16
    ],
    [
      -461,
      -139
    ],
    [
      -550,
      384
    ],
    [
      149,
      406
    ],
    [
      366,
      111
    ]
  ],
  [
    [
      91172,
      95096
    ],
    [
      697,
      -155
    ],
    [
      -321,
      -234
    ],
    [
      -444,
      53
    ],
    [
      -516,
      233
    ],
    [
      66,
      192
    ],
    [
      518,
      -89
    ]
  ],
  [
    [
      88850,
      93928
    ],
    [
      263,
      234
    ],
    [
      348,
      54
    ],
    [
      394,
      -226
    ],
    [
      34,
      -155
    ],
    [
      -421,
      -4
    ],
    [
      -569,
      66
    ],
    [
      -49,
      31
    ]
  ],
  [
    [
      62457,
      98194
    ],
    [
      542,
      107
    ],
    [
      422,
      8
    ],
    [
      57,
      -160
    ],
    [
      159,
      142
    ],
    [
      262,
      97
    ],
    [
      412,
      -129
    ],
    [
      -107,
      -90
    ],
    [
      -373,
      -78
    ],
    [
      -250,
      -45
    ],
    [
      -39,
      -97
    ],
    [
      -324,
      -98
    ],
    [
      -301,
      140
    ],
    [
      158,
      185
    ],
    [
      -618,
      18
    ]
  ],
  [
    [
      56314,
      82678
    ],
    [
      -511,
      -9
    ],
    [
      -342,
      67
    ]
  ],
  [
    [
      55461,
      82736
    ],
    [
      63,
      260
    ],
    [
      383,
      191
    ]
  ],
  [
    [
      55907,
      83187
    ],
    [
      291,
      -103
    ],
    [
      123,
      -94
    ],
    [
      -30,
      -162
    ],
    [
      23,
      -150
    ]
  ],
  [
    [
      64863,
      94153
    ],
    [
      665,
      518
    ],
    [
      -75,
      268
    ],
    [
      621,
      312
    ],
    [
      917,
      380
    ],
    [
      925,
      110
    ],
    [
      475,
      220
    ],
    [
      541,
      76
    ],
    [
      193,
      -233
    ],
    [
      -187,
      -184
    ],
    [
      -984,
      -293
    ],
    [
      -848,
      -282
    ],
    [
      -863,
      -562
    ],
    [
      -414,
      -577
    ],
    [
      -435,
      -568
    ],
    [
      56,
      -491
    ],
    [
      531,
      -484
    ],
    [
      -164,
      -52
    ],
    [
      -907,
      77
    ],
    [
      -74,
      262
    ],
    [
      -503,
      158
    ],
    [
      -40,
      320
    ],
    [
      284,
      126
    ],
    [
      -10,
      323
    ],
    [
      551,
      503
    ],
    [
      -255,
      73
    ]
  ],
  [
    [
      89698,
      82309
    ],
    [
      96,
      -569
    ],
    [
      -7,
      -581
    ],
    [
      114,
      -597
    ],
    [
      280,
      -1046
    ],
    [
      -411,
      195
    ],
    [
      -171,
      -854
    ],
    [
      271,
      -605
    ],
    [
      -8,
      -413
    ],
    [
      -211,
      356
    ],
    [
      -182,
      -457
    ],
    [
      -51,
      496
    ],
    [
      31,
      575
    ],
    [
      -32,
      638
    ],
    [
      64,
      446
    ],
    [
      13,
      790
    ],
    [
      -163,
      581
    ],
    [
      24,
      808
    ],
    [
      257,
      271
    ],
    [
      -110,
      274
    ],
    [
      123,
      83
    ],
    [
      73,
      -391
    ]
  ],
  [
    [
      86327,
      75524
    ],
    [
      -39,
      104
    ]
  ],
  [
    [
      86288,
      75628
    ],
    [
      -2,
      300
    ],
    [
      142,
      16
    ],
    [
      40,
      698
    ],
    [
      -73,
      506
    ],
    [
      238,
      208
    ],
    [
      338,
      -104
    ],
    [
      186,
      575
    ],
    [
      96,
      647
    ],
    [
      107,
      216
    ],
    [
      146,
      532
    ],
    [
      -459,
      -175
    ],
    [
      -240,
      -233
    ],
    [
      -423,
      1
    ],
    [
      -112,
      555
    ],
    [
      -329,
      420
    ],
    [
      -483,
      189
    ],
    [
      -103,
      579
    ],
    [
      -97,
      363
    ],
    [
      -104,
      254
    ],
    [
      -172,
      596
    ],
    [
      -244,
      217
    ],
    [
      -415,
      176
    ],
    [
      -369,
      -16
    ],
    [
      -345,
      -106
    ],
    [
      -229,
      -294
    ],
    [
      152,
      -141
    ],
    [
      4,
      -326
    ],
    [
      -155,
      -189
    ],
    [
      -251,
      -627
    ],
    [
      3,
      -260
    ],
    [
      -392,
      -373
    ],
    [
      -333,
      223
    ]
  ],
  [
    [
      82410,
      80055
    ],
    [
      -331,
      -49
    ],
    [
      -146,
      198
    ],
    [
      -166,
      63
    ],
    [
      -407,
      -416
    ],
    [
      -366,
      -98
    ],
    [
      -255,
      -146
    ],
    [
      -350,
      96
    ],
    [
      -258,
      -6
    ],
    [
      -168,
      302
    ],
    [
      -272,
      284
    ],
    [
      -279,
      78
    ],
    [
      -351,
      -78
    ],
    [
      -263,
      -109
    ],
    [
      -394,
      248
    ],
    [
      -53,
      443
    ],
    [
      -327,
      152
    ],
    [
      -252,
      69
    ],
    [
      -311,
      244
    ],
    [
      -288,
      -612
    ],
    [
      113,
      -348
    ],
    [
      -270,
      -411
    ],
    [
      -402,
      148
    ],
    [
      -277,
      22
    ],
    [
      -186,
      276
    ],
    [
      -289,
      8
    ],
    [
      -242,
      182
    ],
    [
      -423,
      -278
    ],
    [
      -530,
      -509
    ],
    [
      -292,
      -102
    ]
  ],
  [
    [
      74375,
      79706
    ],
    [
      -109,
      -49
    ]
  ],
  [
    [
      63639,
      77993
    ],
    [
      -127,
      -350
    ],
    [
      -269,
      -97
    ],
    [
      -276,
      -610
    ],
    [
      252,
      -561
    ],
    [
      -27,
      -398
    ],
    [
      303,
      -696
    ]
  ],
  [
    [
      63495,
      75281
    ],
    [
      -166,
      -238
    ],
    [
      -48,
      -150
    ],
    [
      -122,
      40
    ],
    [
      -191,
      359
    ],
    [
      -78,
      20
    ]
  ],
  [
    [
      62890,
      75312
    ],
    [
      -175,
      137
    ],
    [
      -85,
      242
    ],
    [
      -259,
      124
    ],
    [
      -169,
      -93
    ],
    [
      -48,
      110
    ],
    [
      -378,
      283
    ],
    [
      -409,
      96
    ],
    [
      -235,
      101
    ],
    [
      -34,
      -70
    ]
  ],
  [
    [
      61098,
      76242
    ],
    [
      -354,
      499
    ],
    [
      -317,
      223
    ],
    [
      -240,
      347
    ],
    [
      202,
      95
    ],
    [
      231,
      494
    ],
    [
      -156,
      234
    ],
    [
      410,
      241
    ],
    [
      -8,
      129
    ],
    [
      -249,
      -95
    ]
  ],
  [
    [
      60617,
      78409
    ],
    [
      9,
      262
    ],
    [
      143,
      165
    ],
    [
      269,
      43
    ],
    [
      44,
      197
    ],
    [
      -62,
      326
    ],
    [
      113,
      310
    ],
    [
      -3,
      173
    ],
    [
      -410,
      192
    ],
    [
      -162,
      -6
    ],
    [
      -172,
      277
    ],
    [
      -213,
      -94
    ],
    [
      -352,
      208
    ],
    [
      6,
      116
    ],
    [
      -99,
      256
    ],
    [
      -222,
      29
    ],
    [
      -23,
      183
    ],
    [
      70,
      120
    ],
    [
      -178,
      334
    ],
    [
      -288,
      -57
    ],
    [
      -84,
      30
    ],
    [
      -70,
      -134
    ],
    [
      -104,
      23
    ]
  ],
  [
    [
      58829,
      81362
    ],
    [
      -68,
      379
    ],
    [
      -66,
      196
    ],
    [
      54,
      55
    ],
    [
      224,
      -20
    ],
    [
      108,
      129
    ],
    [
      -80,
      157
    ],
    [
      -187,
      104
    ],
    [
      16,
      107
    ],
    [
      -113,
      108
    ],
    [
      -174,
      387
    ],
    [
      60,
      159
    ],
    [
      -27,
      277
    ],
    [
      -272,
      141
    ],
    [
      -146,
      -70
    ],
    [
      -39,
      146
    ],
    [
      -293,
      149
    ]
  ],
  [
    [
      57826,
      83766
    ],
    [
      -89,
      348
    ],
    [
      -24,
      287
    ],
    [
      -134,
      136
    ]
  ],
  [
    [
      57579,
      84537
    ],
    [
      120,
      187
    ],
    [
      -83,
      551
    ],
    [
      198,
      341
    ],
    [
      -42,
      103
    ]
  ],
  [
    [
      57772,
      85719
    ],
    [
      316,
      327
    ],
    [
      -291,
      280
    ]
  ],
  [
    [
      57797,
      86326
    ],
    [
      594,
      755
    ],
    [
      258,
      341
    ],
    [
      105,
      301
    ],
    [
      -411,
      405
    ],
    [
      113,
      385
    ],
    [
      -250,
      440
    ],
    [
      187,
      506
    ],
    [
      -323,
      673
    ],
    [
      256,
      445
    ],
    [
      -425,
      394
    ],
    [
      41,
      414
    ]
  ],
  [
    [
      57942,
      91385
    ],
    [
      224,
      54
    ],
    [
      473,
      237
    ]
  ],
  [
    [
      58639,
      91676
    ],
    [
      286,
      206
    ],
    [
      456,
      -358
    ],
    [
      761,
      -140
    ],
    [
      1050,
      -668
    ],
    [
      213,
      -281
    ],
    [
      18,
      -393
    ],
    [
      -308,
      -311
    ],
    [
      -454,
      -157
    ],
    [
      -1240,
      449
    ],
    [
      -204,
      -75
    ],
    [
      453,
      -433
    ],
    [
      18,
      -274
    ],
    [
      18,
      -604
    ],
    [
      358,
      -180
    ],
    [
      217,
      -153
    ],
    [
      36,
      286
    ],
    [
      -168,
      254
    ],
    [
      177,
      224
    ],
    [
      672,
      -368
    ],
    [
      233,
      144
    ],
    [
      -186,
      433
    ],
    [
      647,
      578
    ],
    [
      256,
      -34
    ],
    [
      260,
      -206
    ],
    [
      161,
      406
    ],
    [
      -231,
      352
    ],
    [
      136,
      353
    ],
    [
      -204,
      367
    ],
    [
      777,
      -190
    ],
    [
      158,
      -331
    ],
    [
      -351,
      -73
    ],
    [
      1,
      -328
    ],
    [
      219,
      -203
    ],
    [
      429,
      128
    ],
    [
      68,
      377
    ],
    [
      580,
      282
    ],
    [
      970,
      507
    ],
    [
      209,
      -29
    ],
    [
      -273,
      -359
    ],
    [
      344,
      -61
    ],
    [
      199,
      202
    ],
    [
      521,
      16
    ],
    [
      412,
      245
    ],
    [
      317,
      -356
    ],
    [
      315,
      391
    ],
    [
      -291,
      343
    ],
    [
      145,
      195
    ],
    [
      820,
      -179
    ],
    [
      385,
      -185
    ],
    [
      1006,
      -675
    ],
    [
      186,
      309
    ],
    [
      -282,
      313
    ],
    [
      -8,
      125
    ],
    [
      -335,
      58
    ],
    [
      92,
      280
    ],
    [
      -149,
      461
    ],
    [
      -8,
      189
    ],
    [
      512,
      535
    ],
    [
      183,
      537
    ],
    [
      206,
      116
    ],
    [
      736,
      -156
    ],
    [
      57,
      -328
    ],
    [
      -263,
      -479
    ],
    [
      173,
      -189
    ],
    [
      89,
      -413
    ],
    [
      -63,
      -809
    ],
    [
      307,
      -362
    ],
    [
      -120,
      -395
    ],
    [
      -544,
      -839
    ],
    [
      318,
      -87
    ],
    [
      110,
      213
    ],
    [
      306,
      151
    ],
    [
      74,
      293
    ],
    [
      240,
      281
    ],
    [
      -162,
      336
    ],
    [
      130,
      390
    ],
    [
      -304,
      49
    ],
    [
      -67,
      328
    ],
    [
      222,
      593
    ],
    [
      -361,
      482
    ],
    [
      497,
      398
    ],
    [
      -64,
      421
    ],
    [
      139,
      13
    ],
    [
      145,
      -328
    ],
    [
      -109,
      -570
    ],
    [
      297,
      -108
    ],
    [
      -127,
      426
    ],
    [
      465,
      233
    ],
    [
      577,
      31
    ],
    [
      513,
      -337
    ],
    [
      -247,
      492
    ],
    [
      -28,
      630
    ],
    [
      483,
      119
    ],
    [
      669,
      -26
    ],
    [
      602,
      77
    ],
    [
      -226,
      309
    ],
    [
      321,
      388
    ],
    [
      319,
      16
    ],
    [
      540,
      293
    ],
    [
      734,
      79
    ],
    [
      93,
      162
    ],
    [
      729,
      55
    ],
    [
      227,
      -133
    ],
    [
      624,
      314
    ],
    [
      510,
      -10
    ],
    [
      77,
      255
    ],
    [
      265,
      252
    ],
    [
      656,
      242
    ],
    [
      476,
      -191
    ],
    [
      -378,
      -146
    ],
    [
      629,
      -90
    ],
    [
      75,
      -292
    ],
    [
      254,
      143
    ],
    [
      812,
      -7
    ],
    [
      626,
      -289
    ],
    [
      223,
      -221
    ],
    [
      -69,
      -307
    ],
    [
      -307,
      -175
    ],
    [
      -730,
      -328
    ],
    [
      -209,
      -175
    ],
    [
      345,
      -83
    ],
    [
      410,
      -149
    ],
    [
      251,
      112
    ],
    [
      141,
      -379
    ],
    [
      122,
      153
    ],
    [
      444,
      93
    ],
    [
      892,
      -97
    ],
    [
      67,
      -276
    ],
    [
      1162,
      -88
    ],
    [
      15,
      451
    ],
    [
      590,
      -104
    ],
    [
      443,
      4
    ],
    [
      449,
      -312
    ],
    [
      128,
      -378
    ],
    [
      -165,
      -247
    ],
    [
      349,
      -465
    ],
    [
      437,
      -240
    ],
    [
      268,
      620
    ],
    [
      446,
      -266
    ],
    [
      473,
      159
    ],
    [
      538,
      -182
    ],
    [
      204,
      166
    ],
    [
      455,
      -83
    ],
    [
      -201,
      549
    ],
    [
      367,
      256
    ],
    [
      2509,
      -384
    ],
    [
      236,
      -351
    ],
    [
      727,
      -451
    ],
    [
      1122,
      112
    ],
    [
      553,
      -98
    ],
    [
      231,
      -244
    ],
    [
      -33,
      -432
    ],
    [
      342,
      -168
    ],
    [
      372,
      121
    ],
    [
      492,
      15
    ],
    [
      525,
      -116
    ],
    [
      526,
      66
    ],
    [
      484,
      -526
    ],
    [
      344,
      189
    ],
    [
      -224,
      378
    ],
    [
      123,
      262
    ],
    [
      886,
      -165
    ],
    [
      578,
      36
    ],
    [
      799,
      -282
    ],
    [
      -99610,
      -258
    ],
    [
      681,
      -451
    ],
    [
      728,
      -588
    ],
    [
      -24,
      -367
    ],
    [
      187,
      -147
    ],
    [
      -64,
      429
    ],
    [
      754,
      -88
    ],
    [
      544,
      -553
    ],
    [
      -276,
      -257
    ],
    [
      -455,
      -61
    ],
    [
      -7,
      -578
    ],
    [
      -111,
      -122
    ],
    [
      -260,
      17
    ],
    [
      -212,
      206
    ],
    [
      -369,
      172
    ],
    [
      -62,
      257
    ],
    [
      -283,
      96
    ],
    [
      -315,
      -76
    ],
    [
      -151,
      207
    ],
    [
      60,
      219
    ],
    [
      -333,
      -140
    ],
    [
      126,
      -278
    ],
    [
      -158,
      -251
    ],
    [
      99997,
      -3
    ],
    [
      -357,
      -260
    ],
    [
      -360,
      44
    ],
    [
      250,
      -315
    ],
    [
      166,
      -487
    ],
    [
      128,
      -159
    ],
    [
      32,
      -244
    ],
    [
      -71,
      -157
    ],
    [
      -518,
      129
    ],
    [
      -777,
      -445
    ],
    [
      -247,
      -69
    ],
    [
      -425,
      -415
    ],
    [
      -403,
      -362
    ],
    [
      -102,
      -269
    ],
    [
      -397,
      409
    ],
    [
      -724,
      -464
    ],
    [
      -126,
      219
    ],
    [
      -268,
      -253
    ],
    [
      -371,
      81
    ],
    [
      -90,
      -388
    ],
    [
      -333,
      -572
    ],
    [
      10,
      -239
    ],
    [
      316,
      -132
    ],
    [
      -37,
      -860
    ],
    [
      -258,
      -22
    ],
    [
      -119,
      -494
    ],
    [
      116,
      -255
    ],
    [
      -486,
      -302
    ],
    [
      -96,
      -674
    ],
    [
      -415,
      -144
    ],
    [
      -83,
      -600
    ],
    [
      -400,
      -551
    ],
    [
      -103,
      407
    ],
    [
      -119,
      862
    ],
    [
      -155,
      1313
    ],
    [
      134,
      819
    ],
    [
      234,
      353
    ],
    [
      14,
      276
    ],
    [
      432,
      132
    ],
    [
      496,
      744
    ],
    [
      479,
      608
    ],
    [
      499,
      471
    ],
    [
      223,
      833
    ],
    [
      -337,
      -50
    ],
    [
      -167,
      -487
    ],
    [
      -705,
      -649
    ],
    [
      -227,
      727
    ],
    [
      -717,
      -201
    ],
    [
      -696,
      -990
    ],
    [
      230,
      -362
    ],
    [
      -620,
      -154
    ],
    [
      -430,
      -61
    ],
    [
      20,
      427
    ],
    [
      -431,
      90
    ],
    [
      -344,
      -291
    ],
    [
      -850,
      102
    ],
    [
      -914,
      -175
    ],
    [
      -899,
      -1153
    ],
    [
      -1065,
      -1394
    ],
    [
      438,
      -74
    ],
    [
      136,
      -370
    ],
    [
      270,
      -132
    ],
    [
      178,
      295
    ],
    [
      305,
      -38
    ],
    [
      401,
      -650
    ],
    [
      9,
      -503
    ],
    [
      -217,
      -590
    ],
    [
      -23,
      -705
    ],
    [
      -126,
      -945
    ],
    [
      -418,
      -855
    ],
    [
      -94,
      -409
    ],
    [
      -377,
      -688
    ],
    [
      -374,
      -682
    ],
    [
      -179,
      -349
    ],
    [
      -370,
      -346
    ],
    [
      -175,
      -8
    ],
    [
      -175,
      287
    ],
    [
      -373,
      -432
    ],
    [
      -43,
      -197
    ]
  ],
  [
    [
      0,
      92833
    ],
    [
      36,
      24
    ],
    [
      235,
      -1
    ],
    [
      402,
      -169
    ],
    [
      -24,
      -81
    ],
    [
      -286,
      -141
    ],
    [
      -363,
      -36
    ],
    [
      99694,
      -30
    ],
    [
      -49,
      187
    ],
    [
      -99645,
      247
    ]
  ],
  [
    [
      59287,
      77741
    ],
    [
      73,
      146
    ],
    [
      198,
      -127
    ],
    [
      89,
      -23
    ],
    [
      36,
      -117
    ],
    [
      42,
      -18
    ]
  ],
  [
    [
      59725,
      77602
    ],
    [
      2,
      -51
    ],
    [
      136,
      -142
    ],
    [
      284,
      35
    ],
    [
      -55,
      -210
    ],
    [
      -304,
      -103
    ],
    [
      -377,
      -342
    ],
    [
      -154,
      121
    ],
    [
      61,
      277
    ],
    [
      -304,
      173
    ],
    [
      50,
      113
    ],
    [
      265,
      197
    ],
    [
      -42,
      71
    ]
  ],
  [
    [
      28061,
      66408
    ],
    [
      130,
      47
    ],
    [
      184,
      -18
    ],
    [
      8,
      -153
    ],
    [
      -303,
      -95
    ],
    [
      -19,
      219
    ]
  ],
  [
    [
      28391,
      66555
    ],
    [
      220,
      -265
    ],
    [
      -48,
      -420
    ],
    [
      -51,
      75
    ],
    [
      4,
      309
    ],
    [
      -124,
      234
    ],
    [
      -1,
      67
    ]
  ],
  [
    [
      28280,
      65474
    ],
    [
      84,
      -23
    ],
    [
      97,
      -491
    ],
    [
      1,
      -343
    ],
    [
      -68,
      -29
    ],
    [
      -70,
      340
    ],
    [
      -104,
      171
    ],
    [
      60,
      375
    ]
  ],
  [
    [
      33e3,
      19946
    ],
    [
      333,
      354
    ],
    [
      236,
      -148
    ],
    [
      167,
      237
    ],
    [
      222,
      -266
    ],
    [
      -83,
      -207
    ],
    [
      -375,
      -177
    ],
    [
      -125,
      207
    ],
    [
      -236,
      -266
    ],
    [
      -139,
      266
    ]
  ],
  [
    [
      54206,
      97653
    ],
    [
      105,
      202
    ],
    [
      408,
      20
    ],
    [
      350,
      -206
    ],
    [
      915,
      -440
    ],
    [
      -699,
      -233
    ],
    [
      -155,
      -435
    ],
    [
      -243,
      -111
    ],
    [
      -132,
      -490
    ],
    [
      -335,
      -23
    ],
    [
      -598,
      361
    ],
    [
      252,
      210
    ],
    [
      -416,
      170
    ],
    [
      -541,
      499
    ],
    [
      -216,
      463
    ],
    [
      757,
      212
    ],
    [
      152,
      -207
    ],
    [
      396,
      8
    ]
  ],
  [
    [
      57942,
      91385
    ],
    [
      117,
      414
    ],
    [
      -356,
      235
    ],
    [
      -431,
      -200
    ],
    [
      -137,
      -433
    ],
    [
      -265,
      -262
    ],
    [
      -298,
      143
    ],
    [
      -362,
      -29
    ],
    [
      -309,
      312
    ],
    [
      -167,
      -156
    ]
  ],
  [
    [
      55734,
      91409
    ],
    [
      -172,
      -24
    ],
    [
      -41,
      -389
    ],
    [
      -523,
      95
    ],
    [
      -74,
      -329
    ],
    [
      -267,
      2
    ],
    [
      -183,
      -421
    ],
    [
      -278,
      -655
    ],
    [
      -431,
      -831
    ],
    [
      101,
      -202
    ],
    [
      -97,
      -234
    ],
    [
      -275,
      10
    ],
    [
      -180,
      -554
    ],
    [
      17,
      -784
    ],
    [
      177,
      -300
    ],
    [
      -92,
      -694
    ],
    [
      -231,
      -405
    ],
    [
      -122,
      -341
    ]
  ],
  [
    [
      53063,
      85353
    ],
    [
      -187,
      363
    ],
    [
      -548,
      -684
    ],
    [
      -371,
      -138
    ],
    [
      -384,
      301
    ],
    [
      -99,
      635
    ],
    [
      -88,
      1363
    ],
    [
      256,
      381
    ],
    [
      733,
      496
    ],
    [
      549,
      609
    ],
    [
      508,
      824
    ],
    [
      668,
      1141
    ],
    [
      465,
      444
    ],
    [
      763,
      741
    ],
    [
      610,
      259
    ],
    [
      457,
      -31
    ],
    [
      423,
      489
    ],
    [
      506,
      -26
    ],
    [
      499,
      118
    ],
    [
      869,
      -433
    ],
    [
      -358,
      -158
    ],
    [
      305,
      -371
    ]
  ],
  [
    [
      57613,
      97879
    ],
    [
      -412,
      -318
    ],
    [
      -806,
      -70
    ],
    [
      -819,
      98
    ],
    [
      -50,
      163
    ],
    [
      -398,
      11
    ],
    [
      -304,
      271
    ],
    [
      858,
      165
    ],
    [
      403,
      -142
    ],
    [
      281,
      177
    ],
    [
      702,
      -148
    ],
    [
      545,
      -207
    ]
  ],
  [
    [
      56867,
      96577
    ],
    [
      -620,
      -241
    ],
    [
      -490,
      137
    ],
    [
      191,
      152
    ],
    [
      -167,
      189
    ],
    [
      575,
      119
    ],
    [
      110,
      -222
    ],
    [
      401,
      -134
    ]
  ],
  [
    [
      37010,
      99398
    ],
    [
      932,
      353
    ],
    [
      975,
      -27
    ],
    [
      354,
      218
    ],
    [
      982,
      57
    ],
    [
      2219,
      -74
    ],
    [
      1737,
      -469
    ],
    [
      -513,
      -227
    ],
    [
      -1062,
      -26
    ],
    [
      -1496,
      -58
    ],
    [
      140,
      -105
    ],
    [
      984,
      65
    ],
    [
      836,
      -204
    ],
    [
      540,
      181
    ],
    [
      231,
      -212
    ],
    [
      -305,
      -344
    ],
    [
      707,
      220
    ],
    [
      1348,
      229
    ],
    [
      833,
      -114
    ],
    [
      156,
      -253
    ],
    [
      -1132,
      -420
    ],
    [
      -157,
      -136
    ],
    [
      -888,
      -102
    ],
    [
      643,
      -28
    ],
    [
      -324,
      -431
    ],
    [
      -224,
      -383
    ],
    [
      9,
      -658
    ],
    [
      333,
      -386
    ],
    [
      -434,
      -24
    ],
    [
      -457,
      -187
    ],
    [
      513,
      -313
    ],
    [
      65,
      -502
    ],
    [
      -297,
      -55
    ],
    [
      360,
      -508
    ],
    [
      -617,
      -42
    ],
    [
      322,
      -241
    ],
    [
      -91,
      -208
    ],
    [
      -391,
      -91
    ],
    [
      -388,
      -2
    ],
    [
      348,
      -400
    ],
    [
      4,
      -263
    ],
    [
      -549,
      244
    ],
    [
      -143,
      -158
    ],
    [
      375,
      -148
    ],
    [
      364,
      -361
    ],
    [
      105,
      -476
    ],
    [
      -495,
      -114
    ],
    [
      -214,
      228
    ],
    [
      -344,
      340
    ],
    [
      95,
      -401
    ],
    [
      -322,
      -311
    ],
    [
      732,
      -25
    ],
    [
      383,
      -32
    ],
    [
      -745,
      -515
    ],
    [
      -755,
      -466
    ],
    [
      -813,
      -204
    ],
    [
      -306,
      -2
    ],
    [
      -288,
      -228
    ],
    [
      -386,
      -624
    ],
    [
      -597,
      -414
    ],
    [
      -192,
      -24
    ],
    [
      -370,
      -145
    ],
    [
      -399,
      -138
    ],
    [
      -238,
      -365
    ],
    [
      -4,
      -415
    ],
    [
      -141,
      -388
    ],
    [
      -453,
      -472
    ],
    [
      112,
      -462
    ],
    [
      -125,
      -488
    ],
    [
      -142,
      -577
    ],
    [
      -391,
      -36
    ],
    [
      -410,
      482
    ],
    [
      -556,
      3
    ],
    [
      -269,
      324
    ],
    [
      -186,
      577
    ],
    [
      -481,
      735
    ],
    [
      -141,
      385
    ],
    [
      -38,
      530
    ],
    [
      -384,
      546
    ],
    [
      100,
      435
    ],
    [
      -186,
      208
    ],
    [
      275,
      691
    ],
    [
      418,
      220
    ],
    [
      110,
      247
    ],
    [
      58,
      461
    ],
    [
      -318,
      -209
    ],
    [
      -151,
      -88
    ],
    [
      -249,
      -84
    ],
    [
      -341,
      193
    ],
    [
      -19,
      401
    ],
    [
      109,
      314
    ],
    [
      258,
      9
    ],
    [
      567,
      -157
    ],
    [
      -478,
      375
    ],
    [
      -249,
      202
    ],
    [
      -276,
      -83
    ],
    [
      -232,
      147
    ],
    [
      310,
      550
    ],
    [
      -169,
      220
    ],
    [
      -220,
      409
    ],
    [
      -335,
      626
    ],
    [
      -353,
      230
    ],
    [
      3,
      247
    ],
    [
      -745,
      346
    ],
    [
      -590,
      43
    ],
    [
      -743,
      -24
    ],
    [
      -677,
      -44
    ],
    [
      -323,
      188
    ],
    [
      -482,
      372
    ],
    [
      729,
      186
    ],
    [
      559,
      31
    ],
    [
      -1188,
      154
    ],
    [
      -627,
      241
    ],
    [
      39,
      229
    ],
    [
      1051,
      285
    ],
    [
      1018,
      284
    ],
    [
      107,
      214
    ],
    [
      -750,
      213
    ],
    [
      243,
      235
    ],
    [
      961,
      413
    ],
    [
      404,
      63
    ],
    [
      -115,
      265
    ],
    [
      658,
      156
    ],
    [
      854,
      93
    ],
    [
      853,
      5
    ],
    [
      303,
      -184
    ],
    [
      737,
      325
    ],
    [
      663,
      -221
    ],
    [
      390,
      -46
    ],
    [
      577,
      -192
    ],
    [
      -660,
      318
    ],
    [
      38,
      253
    ]
  ],
  [
    [
      69148,
      21851
    ],
    [
      179,
      -186
    ],
    [
      263,
      -74
    ],
    [
      9,
      -112
    ],
    [
      -77,
      -269
    ],
    [
      -427,
      -38
    ],
    [
      -7,
      314
    ],
    [
      41,
      244
    ],
    [
      19,
      121
    ]
  ],
  [
    [
      84713,
      45326
    ],
    [
      32,
      139
    ],
    [
      239,
      133
    ],
    [
      194,
      20
    ],
    [
      87,
      74
    ],
    [
      105,
      -74
    ],
    [
      -102,
      -160
    ],
    [
      -289,
      -258
    ],
    [
      -233,
      -170
    ]
  ],
  [
    [
      54540,
      33696
    ],
    [
      133,
      292
    ],
    [
      109,
      -162
    ],
    [
      47,
      -252
    ],
    [
      125,
      -43
    ],
    [
      175,
      -112
    ],
    [
      149,
      43
    ],
    [
      248,
      302
    ],
    [
      0,
      2182
    ]
  ],
  [
    [
      55526,
      35946
    ],
    [
      75,
      -88
    ],
    [
      165,
      -562
    ],
    [
      -26,
      -360
    ],
    [
      62,
      -207
    ],
    [
      199,
      60
    ],
    [
      139,
      264
    ],
    [
      132,
      177
    ],
    [
      68,
      283
    ],
    [
      135,
      137
    ],
    [
      117,
      -71
    ],
    [
      133,
      -166
    ],
    [
      226,
      -29
    ],
    [
      178,
      138
    ],
    [
      28,
      184
    ],
    [
      48,
      283
    ],
    [
      152,
      47
    ],
    [
      83,
      222
    ],
    [
      93,
      393
    ],
    [
      249,
      442
    ],
    [
      393,
      435
    ]
  ],
  [
    [
      58175,
      37528
    ],
    [
      113,
      -7
    ],
    [
      134,
      -100
    ],
    [
      94,
      71
    ],
    [
      148,
      -59
    ]
  ],
  [
    [
      58664,
      37433
    ],
    [
      133,
      -832
    ],
    [
      72,
      -419
    ],
    [
      -49,
      -659
    ],
    [
      23,
      -212
    ]
  ],
  [
    [
      58843,
      35311
    ],
    [
      -140,
      108
    ],
    [
      -80,
      -42
    ],
    [
      -26,
      -172
    ],
    [
      -76,
      -222
    ],
    [
      2,
      -204
    ],
    [
      166,
      -320
    ],
    [
      163,
      63
    ],
    [
      56,
      263
    ]
  ],
  [
    [
      58908,
      34785
    ],
    [
      211,
      -5
    ]
  ],
  [
    [
      59119,
      34780
    ],
    [
      -70,
      -430
    ],
    [
      -32,
      -491
    ],
    [
      -72,
      -267
    ],
    [
      -190,
      -298
    ],
    [
      -54,
      -86
    ],
    [
      -118,
      -300
    ],
    [
      -77,
      -303
    ],
    [
      -158,
      -424
    ],
    [
      -314,
      -609
    ],
    [
      -196,
      -355
    ],
    [
      -210,
      -269
    ],
    [
      -290,
      -229
    ],
    [
      -141,
      -31
    ],
    [
      -36,
      -164
    ],
    [
      -169,
      88
    ],
    [
      -138,
      -113
    ],
    [
      -301,
      114
    ],
    [
      -168,
      -72
    ],
    [
      -115,
      31
    ],
    [
      -286,
      -233
    ],
    [
      -238,
      -94
    ],
    [
      -171,
      -223
    ],
    [
      -127,
      -14
    ],
    [
      -117,
      210
    ],
    [
      -94,
      11
    ],
    [
      -120,
      264
    ],
    [
      -13,
      -82
    ],
    [
      -37,
      159
    ],
    [
      2,
      346
    ],
    [
      -90,
      396
    ],
    [
      89,
      108
    ],
    [
      -7,
      453
    ],
    [
      -182,
      553
    ],
    [
      -139,
      501
    ],
    [
      -1,
      1
    ],
    [
      -199,
      768
    ]
  ],
  [
    [
      58049,
      33472
    ],
    [
      -121,
      182
    ],
    [
      -130,
      -120
    ],
    [
      -151,
      -232
    ],
    [
      -148,
      -374
    ],
    [
      209,
      -454
    ],
    [
      99,
      59
    ],
    [
      51,
      188
    ],
    [
      155,
      93
    ],
    [
      47,
      192
    ],
    [
      85,
      288
    ],
    [
      -96,
      178
    ]
  ],
  [
    [
      23016,
      65864
    ],
    [
      -107,
      -518
    ],
    [
      -49,
      -426
    ],
    [
      -20,
      -791
    ],
    [
      -27,
      -289
    ],
    [
      48,
      -322
    ],
    [
      86,
      -288
    ],
    [
      56,
      -458
    ],
    [
      184,
      -440
    ],
    [
      65,
      -337
    ],
    [
      109,
      -291
    ],
    [
      295,
      -157
    ],
    [
      114,
      -247
    ],
    [
      244,
      165
    ],
    [
      212,
      60
    ],
    [
      208,
      106
    ],
    [
      175,
      101
    ],
    [
      176,
      241
    ],
    [
      67,
      345
    ],
    [
      22,
      496
    ],
    [
      48,
      173
    ],
    [
      188,
      155
    ],
    [
      294,
      137
    ],
    [
      246,
      -21
    ],
    [
      169,
      50
    ],
    [
      66,
      -125
    ],
    [
      -9,
      -285
    ],
    [
      -149,
      -351
    ],
    [
      -66,
      -360
    ],
    [
      51,
      -103
    ],
    [
      -42,
      -255
    ],
    [
      -69,
      -461
    ],
    [
      -71,
      152
    ],
    [
      -58,
      -10
    ]
  ],
  [
    [
      25472,
      61510
    ],
    [
      -53,
      -8
    ],
    [
      -99,
      -357
    ],
    [
      -51,
      70
    ],
    [
      -33,
      -27
    ],
    [
      2,
      -87
    ]
  ],
  [
    [
      25238,
      61101
    ],
    [
      -257,
      7
    ],
    [
      -259,
      -1
    ],
    [
      -1,
      -333
    ],
    [
      -125,
      -1
    ],
    [
      103,
      -198
    ],
    [
      103,
      -136
    ],
    [
      31,
      -128
    ],
    [
      45,
      -36
    ],
    [
      -7,
      -201
    ],
    [
      -357,
      -2
    ],
    [
      -133,
      -481
    ],
    [
      39,
      -111
    ],
    [
      -32,
      -138
    ],
    [
      -7,
      -172
    ]
  ],
  [
    [
      24381,
      59170
    ],
    [
      -314,
      636
    ],
    [
      -144,
      191
    ],
    [
      -226,
      155
    ],
    [
      -156,
      -43
    ],
    [
      -223,
      -223
    ],
    [
      -140,
      -58
    ],
    [
      -196,
      156
    ],
    [
      -208,
      112
    ],
    [
      -260,
      271
    ],
    [
      -208,
      83
    ],
    [
      -314,
      275
    ],
    [
      -233,
      282
    ],
    [
      -70,
      158
    ],
    [
      -155,
      35
    ],
    [
      -284,
      187
    ],
    [
      -116,
      270
    ],
    [
      -299,
      335
    ],
    [
      -139,
      373
    ],
    [
      -66,
      288
    ],
    [
      93,
      57
    ],
    [
      -29,
      169
    ],
    [
      64,
      153
    ],
    [
      1,
      204
    ],
    [
      -93,
      266
    ],
    [
      -25,
      235
    ],
    [
      -94,
      298
    ],
    [
      -244,
      587
    ],
    [
      -280,
      462
    ],
    [
      -135,
      368
    ],
    [
      -238,
      241
    ],
    [
      -51,
      145
    ],
    [
      42,
      365
    ],
    [
      -142,
      138
    ],
    [
      -164,
      287
    ],
    [
      -69,
      412
    ],
    [
      -149,
      48
    ],
    [
      -162,
      311
    ],
    [
      -130,
      288
    ],
    [
      -12,
      184
    ],
    [
      -149,
      446
    ],
    [
      -99,
      452
    ],
    [
      5,
      227
    ],
    [
      -201,
      234
    ],
    [
      -93,
      -25
    ],
    [
      -159,
      163
    ],
    [
      -44,
      -240
    ],
    [
      46,
      -284
    ],
    [
      27,
      -444
    ],
    [
      95,
      -243
    ],
    [
      206,
      -407
    ],
    [
      46,
      -139
    ],
    [
      42,
      -42
    ],
    [
      37,
      -203
    ],
    [
      49,
      8
    ],
    [
      56,
      -381
    ],
    [
      85,
      -150
    ],
    [
      59,
      -210
    ],
    [
      174,
      -300
    ],
    [
      92,
      -550
    ],
    [
      83,
      -259
    ],
    [
      77,
      -277
    ],
    [
      15,
      -311
    ],
    [
      134,
      -20
    ],
    [
      112,
      -268
    ],
    [
      100,
      -264
    ],
    [
      -6,
      -106
    ],
    [
      -117,
      -217
    ],
    [
      -49,
      3
    ],
    [
      -74,
      359
    ],
    [
      -181,
      337
    ],
    [
      -201,
      286
    ],
    [
      -142,
      150
    ],
    [
      9,
      432
    ],
    [
      -42,
      320
    ],
    [
      -132,
      183
    ],
    [
      -191,
      264
    ],
    [
      -37,
      -76
    ],
    [
      -70,
      154
    ],
    [
      -171,
      143
    ],
    [
      -164,
      343
    ],
    [
      20,
      44
    ],
    [
      115,
      -33
    ],
    [
      103,
      221
    ],
    [
      10,
      266
    ],
    [
      -214,
      422
    ],
    [
      -163,
      163
    ],
    [
      -102,
      369
    ],
    [
      -103,
      388
    ],
    [
      -129,
      472
    ],
    [
      -113,
      531
    ]
  ],
  [
    [
      33993,
      32727
    ],
    [
      180,
      63
    ],
    [
      279,
      -457
    ],
    [
      103,
      18
    ],
    [
      286,
      -379
    ],
    [
      218,
      -327
    ],
    [
      160,
      -402
    ],
    [
      -122,
      -280
    ],
    [
      77,
      -334
    ]
  ],
  [
    [
      35174,
      30629
    ],
    [
      -121,
      -372
    ],
    [
      -313,
      -328
    ],
    [
      -205,
      118
    ],
    [
      -151,
      -63
    ],
    [
      -256,
      253
    ],
    [
      -189,
      -19
    ],
    [
      -169,
      327
    ]
  ],
  [
    [
      34826,
      35372
    ],
    [
      54,
      341
    ],
    [
      38,
      350
    ],
    [
      0,
      325
    ],
    [
      -100,
      107
    ],
    [
      -104,
      -96
    ],
    [
      -103,
      26
    ],
    [
      -33,
      228
    ],
    [
      -26,
      541
    ],
    [
      -52,
      177
    ],
    [
      -187,
      160
    ],
    [
      -114,
      -116
    ],
    [
      -293,
      113
    ],
    [
      18,
      802
    ],
    [
      -82,
      329
    ]
  ],
  [
    [
      33842,
      38659
    ],
    [
      87,
      122
    ],
    [
      -27,
      337
    ],
    [
      77,
      259
    ],
    [
      49,
      465
    ],
    [
      -66,
      367
    ],
    [
      -151,
      166
    ],
    [
      -30,
      233
    ],
    [
      41,
      342
    ],
    [
      -533,
      24
    ],
    [
      -107,
      688
    ],
    [
      81,
      10
    ],
    [
      -3,
      255
    ],
    [
      -55,
      172
    ],
    [
      -12,
      342
    ],
    [
      -161,
      175
    ],
    [
      -175,
      -6
    ],
    [
      -115,
      172
    ],
    [
      -188,
      117
    ],
    [
      -109,
      220
    ],
    [
      -311,
      98
    ],
    [
      -302,
      529
    ],
    [
      23,
      396
    ],
    [
      -34,
      227
    ],
    [
      29,
      443
    ],
    [
      -363,
      -100
    ],
    [
      -147,
      -222
    ],
    [
      -243,
      -239
    ],
    [
      -62,
      -179
    ],
    [
      -143,
      -13
    ],
    [
      -206,
      50
    ]
  ],
  [
    [
      30686,
      44109
    ],
    [
      -157,
      -102
    ],
    [
      -126,
      68
    ],
    [
      18,
      898
    ],
    [
      -228,
      -348
    ],
    [
      -245,
      15
    ],
    [
      -105,
      315
    ],
    [
      -184,
      34
    ],
    [
      59,
      254
    ],
    [
      -155,
      359
    ],
    [
      -115,
      532
    ],
    [
      73,
      108
    ],
    [
      0,
      250
    ],
    [
      168,
      171
    ],
    [
      -28,
      319
    ],
    [
      71,
      206
    ],
    [
      20,
      275
    ],
    [
      318,
      402
    ],
    [
      227,
      114
    ],
    [
      37,
      89
    ],
    [
      251,
      -28
    ]
  ],
  [
    [
      30585,
      48040
    ],
    [
      125,
      1620
    ],
    [
      6,
      256
    ],
    [
      -43,
      339
    ],
    [
      -123,
      215
    ],
    [
      1,
      430
    ],
    [
      156,
      97
    ],
    [
      56,
      -61
    ],
    [
      9,
      226
    ],
    [
      -162,
      61
    ],
    [
      -4,
      370
    ],
    [
      541,
      -13
    ],
    [
      92,
      203
    ],
    [
      77,
      -187
    ],
    [
      55,
      -349
    ],
    [
      52,
      73
    ]
  ],
  [
    [
      31423,
      51320
    ],
    [
      153,
      -312
    ],
    [
      216,
      38
    ],
    [
      54,
      181
    ],
    [
      206,
      138
    ],
    [
      115,
      97
    ],
    [
      32,
      250
    ],
    [
      198,
      168
    ],
    [
      -15,
      124
    ],
    [
      -235,
      51
    ],
    [
      -39,
      372
    ],
    [
      12,
      396
    ],
    [
      -125,
      153
    ],
    [
      52,
      55
    ],
    [
      206,
      -76
    ],
    [
      221,
      -148
    ],
    [
      80,
      140
    ],
    [
      200,
      92
    ],
    [
      310,
      221
    ],
    [
      102,
      225
    ],
    [
      -37,
      167
    ]
  ],
  [
    [
      33129,
      53652
    ],
    [
      145,
      26
    ],
    [
      64,
      -136
    ],
    [
      -36,
      -259
    ],
    [
      96,
      -90
    ],
    [
      63,
      -274
    ],
    [
      -77,
      -209
    ],
    [
      -44,
      -502
    ],
    [
      71,
      -299
    ],
    [
      20,
      -274
    ],
    [
      171,
      -277
    ],
    [
      137,
      -29
    ],
    [
      30,
      116
    ],
    [
      88,
      25
    ],
    [
      126,
      104
    ],
    [
      90,
      157
    ],
    [
      154,
      -50
    ],
    [
      67,
      21
    ]
  ],
  [
    [
      34294,
      51702
    ],
    [
      151,
      -48
    ],
    [
      25,
      120
    ],
    [
      -46,
      118
    ],
    [
      28,
      171
    ],
    [
      112,
      -53
    ],
    [
      131,
      61
    ],
    [
      159,
      -125
    ]
  ],
  [
    [
      34854,
      51946
    ],
    [
      121,
      -122
    ],
    [
      86,
      160
    ],
    [
      62,
      -25
    ],
    [
      38,
      -166
    ],
    [
      133,
      42
    ],
    [
      107,
      224
    ],
    [
      85,
      436
    ],
    [
      164,
      540
    ]
  ],
  [
    [
      35650,
      53035
    ],
    [
      95,
      28
    ],
    [
      69,
      -327
    ],
    [
      155,
      -1033
    ],
    [
      149,
      -97
    ],
    [
      7,
      -408
    ],
    [
      -208,
      -487
    ],
    [
      86,
      -178
    ],
    [
      491,
      -92
    ],
    [
      10,
      -593
    ],
    [
      211,
      388
    ],
    [
      349,
      -212
    ],
    [
      462,
      -361
    ],
    [
      135,
      -346
    ],
    [
      -45,
      -327
    ],
    [
      323,
      182
    ],
    [
      540,
      -313
    ],
    [
      415,
      23
    ],
    [
      411,
      -489
    ],
    [
      355,
      -662
    ],
    [
      214,
      -170
    ],
    [
      237,
      -24
    ],
    [
      101,
      -186
    ],
    [
      94,
      -752
    ],
    [
      46,
      -358
    ],
    [
      -110,
      -977
    ],
    [
      -142,
      -385
    ],
    [
      -391,
      -822
    ],
    [
      -177,
      -668
    ],
    [
      -206,
      -513
    ],
    [
      -69,
      -11
    ],
    [
      -78,
      -435
    ],
    [
      20,
      -1107
    ],
    [
      -77,
      -910
    ],
    [
      -30,
      -390
    ],
    [
      -88,
      -233
    ],
    [
      -49,
      -790
    ],
    [
      -282,
      -771
    ],
    [
      -47,
      -610
    ],
    [
      -225,
      -256
    ],
    [
      -65,
      -355
    ],
    [
      -302,
      2
    ],
    [
      -437,
      -227
    ],
    [
      -195,
      -263
    ],
    [
      -311,
      -173
    ],
    [
      -327,
      -470
    ],
    [
      -235,
      -586
    ],
    [
      -41,
      -441
    ],
    [
      46,
      -326
    ],
    [
      -51,
      -597
    ],
    [
      -63,
      -289
    ],
    [
      -195,
      -325
    ],
    [
      -308,
      -1040
    ],
    [
      -244,
      -468
    ],
    [
      -189,
      -277
    ],
    [
      -127,
      -562
    ],
    [
      -183,
      -337
    ]
  ],
  [
    [
      33842,
      38659
    ],
    [
      -4,
      182
    ],
    [
      -259,
      302
    ],
    [
      -258,
      9
    ],
    [
      -484,
      -172
    ],
    [
      -133,
      -520
    ],
    [
      -7,
      -318
    ],
    [
      -110,
      -708
    ]
  ],
  [
    [
      30669,
      40193
    ],
    [
      175,
      638
    ],
    [
      -119,
      496
    ],
    [
      63,
      199
    ],
    [
      -49,
      219
    ],
    [
      108,
      295
    ],
    [
      6,
      503
    ],
    [
      13,
      415
    ],
    [
      60,
      200
    ],
    [
      -240,
      951
    ]
  ],
  [
    [
      30452,
      39739
    ],
    [
      -279,
      340
    ],
    [
      -24,
      242
    ],
    [
      -551,
      593
    ],
    [
      -498,
      646
    ],
    [
      -214,
      365
    ],
    [
      -115,
      488
    ],
    [
      46,
      170
    ],
    [
      -236,
      775
    ],
    [
      -274,
      1090
    ],
    [
      -262,
      1177
    ],
    [
      -114,
      269
    ],
    [
      -87,
      435
    ],
    [
      -216,
      386
    ],
    [
      -198,
      239
    ],
    [
      90,
      264
    ],
    [
      -134,
      563
    ],
    [
      86,
      414
    ],
    [
      221,
      373
    ]
  ],
  [
    [
      27693,
      48568
    ],
    [
      33,
      -246
    ],
    [
      -79,
      -141
    ],
    [
      8,
      -216
    ],
    [
      114,
      47
    ],
    [
      113,
      -64
    ],
    [
      116,
      -298
    ],
    [
      157,
      243
    ],
    [
      53,
      398
    ],
    [
      170,
      514
    ],
    [
      334,
      233
    ],
    [
      303,
      619
    ],
    [
      86,
      384
    ],
    [
      -38,
      449
    ]
  ],
  [
    [
      29063,
      50490
    ],
    [
      74,
      56
    ],
    [
      184,
      -280
    ],
    [
      89,
      -279
    ],
    [
      129,
      -152
    ],
    [
      163,
      -620
    ],
    [
      207,
      -74
    ],
    [
      153,
      157
    ],
    [
      101,
      -103
    ],
    [
      166,
      51
    ],
    [
      213,
      -276
    ],
    [
      -179,
      -602
    ],
    [
      83,
      -14
    ],
    [
      139,
      -314
    ]
  ],
  [
    [
      29063,
      50490
    ],
    [
      -119,
      140
    ],
    [
      -137,
      195
    ],
    [
      -79,
      -94
    ],
    [
      -235,
      82
    ],
    [
      -68,
      255
    ],
    [
      -52,
      -10
    ],
    [
      -278,
      338
    ]
  ],
  [
    [
      28095,
      51396
    ],
    [
      -37,
      183
    ],
    [
      103,
      44
    ],
    [
      -12,
      296
    ],
    [
      65,
      214
    ],
    [
      138,
      40
    ],
    [
      117,
      371
    ],
    [
      106,
      310
    ],
    [
      -102,
      141
    ],
    [
      52,
      343
    ],
    [
      -62,
      540
    ],
    [
      59,
      155
    ],
    [
      -44,
      500
    ],
    [
      -112,
      315
    ]
  ],
  [
    [
      28366,
      54848
    ],
    [
      36,
      287
    ],
    [
      89,
      -43
    ],
    [
      52,
      176
    ],
    [
      -64,
      348
    ],
    [
      34,
      86
    ]
  ],
  [
    [
      28513,
      55702
    ],
    [
      143,
      -18
    ],
    [
      209,
      412
    ],
    [
      114,
      63
    ],
    [
      3,
      195
    ],
    [
      51,
      500
    ],
    [
      159,
      274
    ],
    [
      175,
      11
    ],
    [
      22,
      123
    ],
    [
      218,
      -49
    ],
    [
      218,
      298
    ],
    [
      109,
      132
    ],
    [
      134,
      285
    ],
    [
      98,
      -36
    ],
    [
      73,
      -156
    ],
    [
      -54,
      -199
    ]
  ],
  [
    [
      30185,
      57537
    ],
    [
      -178,
      -99
    ],
    [
      -71,
      -295
    ],
    [
      -107,
      -169
    ],
    [
      -81,
      -220
    ],
    [
      -34,
      -422
    ],
    [
      -77,
      -345
    ],
    [
      144,
      -40
    ],
    [
      35,
      -271
    ],
    [
      62,
      -130
    ],
    [
      21,
      -238
    ],
    [
      -33,
      -219
    ],
    [
      10,
      -123
    ],
    [
      69,
      -49
    ],
    [
      66,
      -207
    ],
    [
      357,
      57
    ],
    [
      161,
      -75
    ],
    [
      196,
      -508
    ],
    [
      112,
      63
    ],
    [
      200,
      -32
    ],
    [
      158,
      68
    ],
    [
      99,
      -102
    ],
    [
      -50,
      -318
    ],
    [
      -62,
      -199
    ],
    [
      -22,
      -423
    ],
    [
      56,
      -393
    ],
    [
      79,
      -175
    ],
    [
      9,
      -133
    ],
    [
      -140,
      -294
    ],
    [
      100,
      -130
    ],
    [
      74,
      -207
    ],
    [
      85,
      -589
    ]
  ],
  [
    [
      28366,
      54848
    ],
    [
      -93,
      170
    ],
    [
      -59,
      319
    ],
    [
      68,
      158
    ],
    [
      -70,
      40
    ],
    [
      -52,
      196
    ],
    [
      -138,
      164
    ],
    [
      -122,
      -38
    ],
    [
      -56,
      -205
    ],
    [
      -112,
      -149
    ],
    [
      -61,
      -20
    ],
    [
      -27,
      -123
    ],
    [
      132,
      -321
    ],
    [
      -75,
      -76
    ],
    [
      -40,
      -87
    ],
    [
      -130,
      -30
    ],
    [
      -48,
      353
    ],
    [
      -36,
      -101
    ],
    [
      -92,
      35
    ],
    [
      -56,
      238
    ],
    [
      -114,
      39
    ],
    [
      -72,
      69
    ],
    [
      -119,
      -1
    ],
    [
      -8,
      -128
    ],
    [
      -32,
      89
    ]
  ],
  [
    [
      26954,
      55439
    ],
    [
      14,
      117
    ],
    [
      23,
      120
    ],
    [
      -10,
      107
    ],
    [
      41,
      70
    ],
    [
      -58,
      88
    ],
    [
      -1,
      238
    ],
    [
      107,
      53
    ]
  ],
  [
    [
      27070,
      56232
    ],
    [
      100,
      -212
    ],
    [
      -6,
      -126
    ],
    [
      111,
      -26
    ],
    [
      26,
      48
    ],
    [
      77,
      -145
    ],
    [
      136,
      42
    ],
    [
      119,
      150
    ],
    [
      168,
      119
    ],
    [
      95,
      176
    ],
    [
      153,
      -34
    ],
    [
      -10,
      -58
    ],
    [
      155,
      -21
    ],
    [
      124,
      -102
    ],
    [
      90,
      -177
    ],
    [
      105,
      -164
    ]
  ],
  [
    [
      26954,
      55439
    ],
    [
      -151,
      131
    ],
    [
      -56,
      124
    ],
    [
      32,
      103
    ],
    [
      -11,
      130
    ],
    [
      -77,
      142
    ],
    [
      -109,
      116
    ],
    [
      -95,
      76
    ],
    [
      -19,
      173
    ],
    [
      -73,
      105
    ],
    [
      18,
      -172
    ],
    [
      -55,
      -141
    ],
    [
      -64,
      164
    ],
    [
      -89,
      58
    ],
    [
      -38,
      120
    ],
    [
      2,
      179
    ],
    [
      36,
      187
    ],
    [
      -78,
      83
    ],
    [
      64,
      114
    ]
  ],
  [
    [
      26191,
      57131
    ],
    [
      42,
      76
    ],
    [
      183,
      -156
    ],
    [
      63,
      77
    ],
    [
      89,
      -50
    ],
    [
      46,
      -121
    ],
    [
      82,
      -40
    ],
    [
      66,
      126
    ]
  ],
  [
    [
      26762,
      57043
    ],
    [
      70,
      -321
    ],
    [
      108,
      -238
    ],
    [
      130,
      -252
    ]
  ],
  [
    [
      26191,
      57131
    ],
    [
      -96,
      186
    ],
    [
      -130,
      238
    ],
    [
      -61,
      200
    ],
    [
      -117,
      185
    ],
    [
      -140,
      267
    ],
    [
      31,
      91
    ],
    [
      46,
      -88
    ],
    [
      21,
      41
    ]
  ],
  [
    [
      25745,
      58251
    ],
    [
      86,
      25
    ],
    [
      35,
      135
    ],
    [
      41,
      5
    ],
    [
      -6,
      290
    ],
    [
      65,
      14
    ],
    [
      58,
      -4
    ],
    [
      60,
      158
    ],
    [
      82,
      -120
    ],
    [
      29,
      74
    ],
    [
      51,
      70
    ],
    [
      97,
      163
    ],
    [
      4,
      121
    ],
    [
      27,
      -5
    ],
    [
      36,
      141
    ],
    [
      29,
      17
    ],
    [
      47,
      -90
    ],
    [
      56,
      -27
    ],
    [
      61,
      76
    ],
    [
      70,
      0
    ],
    [
      97,
      77
    ],
    [
      38,
      81
    ],
    [
      95,
      -12
    ]
  ],
  [
    [
      26903,
      59440
    ],
    [
      -24,
      -57
    ],
    [
      -14,
      -132
    ],
    [
      29,
      -216
    ],
    [
      -64,
      -202
    ],
    [
      -30,
      -237
    ],
    [
      -9,
      -261
    ],
    [
      15,
      -152
    ],
    [
      7,
      -266
    ],
    [
      -43,
      -58
    ],
    [
      -26,
      -253
    ],
    [
      19,
      -156
    ],
    [
      -56,
      -151
    ],
    [
      12,
      -159
    ],
    [
      43,
      -97
    ]
  ],
  [
    [
      25745,
      58251
    ],
    [
      -48,
      185
    ],
    [
      -84,
      51
    ]
  ],
  [
    [
      25613,
      58487
    ],
    [
      19,
      237
    ],
    [
      -38,
      64
    ],
    [
      -57,
      42
    ],
    [
      -122,
      -70
    ],
    [
      -10,
      79
    ],
    [
      -84,
      95
    ],
    [
      -60,
      118
    ],
    [
      -82,
      50
    ]
  ],
  [
    [
      25179,
      59102
    ],
    [
      58,
      150
    ],
    [
      -22,
      116
    ],
    [
      20,
      113
    ],
    [
      131,
      166
    ],
    [
      127,
      225
    ]
  ],
  [
    [
      25493,
      59872
    ],
    [
      29,
      -23
    ],
    [
      61,
      104
    ],
    [
      79,
      8
    ],
    [
      26,
      -48
    ],
    [
      43,
      29
    ],
    [
      129,
      -53
    ],
    [
      128,
      15
    ],
    [
      90,
      66
    ],
    [
      32,
      66
    ],
    [
      89,
      -31
    ],
    [
      66,
      -40
    ],
    [
      73,
      14
    ],
    [
      55,
      51
    ],
    [
      127,
      -82
    ],
    [
      44,
      -13
    ],
    [
      85,
      -110
    ],
    [
      80,
      -132
    ],
    [
      101,
      -91
    ],
    [
      73,
      -162
    ]
  ],
  [
    [
      25613,
      58487
    ],
    [
      -31,
      -139
    ],
    [
      -161,
      9
    ],
    [
      -100,
      57
    ],
    [
      -115,
      117
    ],
    [
      -154,
      37
    ],
    [
      -79,
      127
    ]
  ],
  [
    [
      24973,
      58695
    ],
    [
      9,
      86
    ],
    [
      95,
      149
    ],
    [
      52,
      66
    ],
    [
      -15,
      69
    ],
    [
      65,
      37
    ]
  ],
  [
    [
      25238,
      61101
    ],
    [
      -2,
      -468
    ],
    [
      -22,
      -667
    ],
    [
      83,
      0
    ]
  ],
  [
    [
      25297,
      59966
    ],
    [
      90,
      -107
    ],
    [
      24,
      88
    ],
    [
      82,
      -75
    ]
  ],
  [
    [
      24973,
      58695
    ],
    [
      -142,
      103
    ],
    [
      -174,
      11
    ],
    [
      -127,
      117
    ],
    [
      -149,
      244
    ]
  ],
  [
    [
      25472,
      61510
    ],
    [
      1,
      -87
    ],
    [
      53,
      -3
    ],
    [
      -5,
      -160
    ],
    [
      -45,
      -256
    ],
    [
      24,
      -91
    ],
    [
      -29,
      -212
    ],
    [
      18,
      -56
    ],
    [
      -32,
      -299
    ],
    [
      -55,
      -156
    ],
    [
      -50,
      -19
    ],
    [
      -55,
      -205
    ]
  ],
  [
    [
      30185,
      57537
    ],
    [
      -8,
      -139
    ],
    [
      -163,
      -69
    ],
    [
      91,
      -268
    ],
    [
      -3,
      -309
    ],
    [
      -123,
      -344
    ],
    [
      105,
      -468
    ],
    [
      120,
      38
    ],
    [
      62,
      427
    ],
    [
      -86,
      208
    ],
    [
      -14,
      447
    ],
    [
      346,
      241
    ],
    [
      -38,
      278
    ],
    [
      97,
      186
    ],
    [
      100,
      -415
    ],
    [
      195,
      -9
    ],
    [
      180,
      -330
    ],
    [
      11,
      -195
    ],
    [
      249,
      -6
    ],
    [
      297,
      61
    ],
    [
      159,
      -264
    ],
    [
      213,
      -74
    ],
    [
      155,
      185
    ],
    [
      4,
      149
    ],
    [
      344,
      35
    ],
    [
      333,
      9
    ],
    [
      -236,
      -175
    ],
    [
      95,
      -279
    ],
    [
      222,
      -44
    ],
    [
      210,
      -291
    ],
    [
      45,
      -473
    ],
    [
      144,
      13
    ],
    [
      109,
      -139
    ]
  ],
  [
    [
      33400,
      55523
    ],
    [
      -220,
      -347
    ],
    [
      -24,
      -215
    ],
    [
      95,
      -220
    ],
    [
      -69,
      -110
    ],
    [
      -171,
      -95
    ],
    [
      5,
      -273
    ],
    [
      -75,
      -163
    ],
    [
      188,
      -448
    ]
  ],
  [
    [
      33400,
      55523
    ],
    [
      183,
      -217
    ],
    [
      171,
      -385
    ],
    [
      8,
      -304
    ],
    [
      105,
      -14
    ],
    [
      149,
      -289
    ],
    [
      109,
      -205
    ]
  ],
  [
    [
      34125,
      54109
    ],
    [
      -44,
      -532
    ],
    [
      -169,
      -154
    ],
    [
      15,
      -139
    ],
    [
      -51,
      -305
    ],
    [
      123,
      -429
    ],
    [
      89,
      -1
    ],
    [
      37,
      -333
    ],
    [
      169,
      -514
    ]
  ],
  [
    [
      34125,
      54109
    ],
    [
      333,
      -119
    ],
    [
      30,
      107
    ],
    [
      225,
      43
    ],
    [
      298,
      -159
    ]
  ],
  [
    [
      35011,
      53981
    ],
    [
      -144,
      -508
    ],
    [
      22,
      -404
    ],
    [
      109,
      -351
    ],
    [
      -49,
      -254
    ],
    [
      -24,
      -270
    ],
    [
      -71,
      -248
    ]
  ],
  [
    [
      35011,
      53981
    ],
    [
      95,
      -65
    ],
    [
      204,
      -140
    ],
    [
      294,
      -499
    ],
    [
      46,
      -242
    ]
  ],
  [
    [
      51718,
      79804
    ],
    [
      131,
      -155
    ],
    [
      400,
      -109
    ],
    [
      -140,
      -404
    ],
    [
      -35,
      -421
    ]
  ],
  [
    [
      52074,
      78715
    ],
    [
      -77,
      -101
    ],
    [
      -126,
      54
    ],
    [
      9,
      -150
    ],
    [
      -203,
      -332
    ],
    [
      -5,
      -267
    ],
    [
      133,
      92
    ],
    [
      95,
      -259
    ]
  ],
  [
    [
      51900,
      77752
    ],
    [
      -11,
      -167
    ],
    [
      82,
      -222
    ],
    [
      -97,
      -180
    ],
    [
      72,
      -457
    ],
    [
      151,
      -75
    ],
    [
      -32,
      -256
    ]
  ],
  [
    [
      52065,
      76395
    ],
    [
      -252,
      -334
    ],
    [
      -548,
      160
    ],
    [
      -404,
      -192
    ],
    [
      -32,
      -355
    ]
  ],
  [
    [
      50829,
      75674
    ],
    [
      -322,
      -77
    ],
    [
      -313,
      267
    ],
    [
      -101,
      -127
    ],
    [
      -511,
      268
    ],
    [
      -111,
      230
    ]
  ],
  [
    [
      49471,
      76235
    ],
    [
      144,
      354
    ],
    [
      53,
      1177
    ],
    [
      -287,
      620
    ],
    [
      -205,
      299
    ],
    [
      -424,
      227
    ],
    [
      -28,
      431
    ],
    [
      360,
      129
    ],
    [
      466,
      -152
    ],
    [
      -88,
      669
    ],
    [
      263,
      -254
    ],
    [
      646,
      461
    ],
    [
      84,
      484
    ],
    [
      243,
      119
    ]
  ],
  [
    [
      50698,
      80799
    ],
    [
      40,
      -207
    ],
    [
      129,
      -10
    ],
    [
      129,
      -237
    ],
    [
      194,
      -279
    ],
    [
      143,
      46
    ],
    [
      243,
      -269
    ]
  ],
  [
    [
      51576,
      79843
    ],
    [
      62,
      -52
    ],
    [
      80,
      13
    ]
  ],
  [
    [
      52429,
      75765
    ],
    [
      179,
      226
    ],
    [
      47,
      -507
    ],
    [
      -92,
      -456
    ],
    [
      -126,
      120
    ],
    [
      -64,
      398
    ],
    [
      56,
      219
    ]
  ],
  [
    [
      27693,
      48568
    ],
    [
      148,
      442
    ],
    [
      -60,
      258
    ],
    [
      -106,
      -275
    ],
    [
      -166,
      259
    ],
    [
      56,
      167
    ],
    [
      -47,
      536
    ],
    [
      97,
      89
    ],
    [
      52,
      368
    ],
    [
      105,
      381
    ],
    [
      -20,
      241
    ],
    [
      153,
      126
    ],
    [
      190,
      236
    ]
  ],
  [
    [
      31588,
      61519
    ],
    [
      142,
      -52
    ],
    [
      50,
      -118
    ],
    [
      -71,
      -149
    ],
    [
      -209,
      4
    ],
    [
      -163,
      -21
    ],
    [
      -16,
      253
    ],
    [
      40,
      86
    ],
    [
      227,
      -3
    ]
  ],
  [
    [
      28453,
      61504
    ],
    [
      187,
      -53
    ],
    [
      147,
      -142
    ],
    [
      46,
      -161
    ],
    [
      -195,
      -11
    ],
    [
      -84,
      -99
    ],
    [
      -156,
      95
    ],
    [
      -159,
      215
    ],
    [
      34,
      135
    ],
    [
      116,
      41
    ],
    [
      64,
      -20
    ]
  ],
  [
    [
      27147,
      64280
    ],
    [
      240,
      -42
    ],
    [
      219,
      -7
    ],
    [
      261,
      -201
    ],
    [
      110,
      -216
    ],
    [
      260,
      66
    ],
    [
      98,
      -138
    ],
    [
      235,
      -366
    ],
    [
      173,
      -267
    ],
    [
      92,
      8
    ],
    [
      165,
      -120
    ],
    [
      -20,
      -167
    ],
    [
      205,
      -24
    ],
    [
      210,
      -242
    ],
    [
      -33,
      -138
    ],
    [
      -185,
      -75
    ],
    [
      -187,
      -29
    ],
    [
      -191,
      46
    ],
    [
      -398,
      -57
    ],
    [
      186,
      329
    ],
    [
      -113,
      154
    ],
    [
      -179,
      39
    ],
    [
      -96,
      171
    ],
    [
      -66,
      336
    ],
    [
      -157,
      -23
    ],
    [
      -259,
      159
    ],
    [
      -83,
      124
    ],
    [
      -362,
      91
    ],
    [
      -97,
      115
    ],
    [
      104,
      148
    ],
    [
      -273,
      30
    ],
    [
      -199,
      -307
    ],
    [
      -115,
      -8
    ],
    [
      -40,
      -144
    ],
    [
      -138,
      -65
    ],
    [
      -118,
      56
    ],
    [
      146,
      183
    ],
    [
      60,
      213
    ],
    [
      126,
      131
    ],
    [
      142,
      116
    ],
    [
      210,
      56
    ],
    [
      67,
      65
    ]
  ],
  [
    [
      58175,
      37528
    ],
    [
      -177,
      267
    ],
    [
      -215,
      90
    ],
    [
      -82,
      375
    ],
    [
      0,
      208
    ],
    [
      -119,
      64
    ],
    [
      -315,
      649
    ],
    [
      -87,
      342
    ],
    [
      -56,
      105
    ],
    [
      -107,
      473
    ]
  ],
  [
    [
      57017,
      40101
    ],
    [
      311,
      -65
    ],
    [
      90,
      -68
    ],
    [
      94,
      13
    ],
    [
      154,
      383
    ],
    [
      241,
      486
    ],
    [
      100,
      46
    ],
    [
      33,
      205
    ],
    [
      159,
      235
    ],
    [
      210,
      81
    ]
  ],
  [
    [
      58409,
      41417
    ],
    [
      18,
      -220
    ],
    [
      232,
      12
    ],
    [
      128,
      -125
    ],
    [
      60,
      -146
    ],
    [
      132,
      -43
    ],
    [
      145,
      -190
    ],
    [
      0,
      -748
    ],
    [
      -54,
      -409
    ],
    [
      -12,
      -442
    ],
    [
      45,
      -175
    ],
    [
      -31,
      -348
    ],
    [
      -42,
      -53
    ],
    [
      -74,
      -426
    ],
    [
      -292,
      -671
    ]
  ],
  [
    [
      55526,
      35946
    ],
    [
      0,
      1725
    ],
    [
      274,
      20
    ],
    [
      8,
      2105
    ],
    [
      207,
      19
    ],
    [
      428,
      207
    ],
    [
      106,
      -243
    ],
    [
      177,
      231
    ],
    [
      85,
      2
    ],
    [
      156,
      133
    ]
  ],
  [
    [
      56967,
      40145
    ],
    [
      50,
      -44
    ]
  ],
  [
    [
      54540,
      33696
    ],
    [
      -207,
      446
    ],
    [
      -108,
      432
    ],
    [
      -62,
      575
    ],
    [
      -68,
      428
    ],
    [
      -93,
      910
    ],
    [
      -7,
      707
    ],
    [
      -35,
      322
    ],
    [
      -108,
      243
    ],
    [
      -144,
      489
    ],
    [
      -146,
      708
    ],
    [
      -60,
      371
    ],
    [
      -226,
      577
    ],
    [
      -17,
      453
    ]
  ],
  [
    [
      53259,
      40357
    ],
    [
      134,
      113
    ],
    [
      166,
      100
    ],
    [
      180,
      -17
    ],
    [
      166,
      -267
    ],
    [
      42,
      41
    ],
    [
      1126,
      26
    ],
    [
      192,
      -284
    ],
    [
      673,
      -83
    ],
    [
      510,
      241
    ]
  ],
  [
    [
      56448,
      40227
    ],
    [
      228,
      134
    ],
    [
      180,
      -34
    ],
    [
      109,
      -133
    ],
    [
      2,
      -49
    ]
  ],
  [
    [
      45357,
      58612
    ],
    [
      -115,
      460
    ],
    [
      -138,
      210
    ],
    [
      122,
      112
    ],
    [
      134,
      415
    ],
    [
      66,
      304
    ]
  ],
  [
    [
      45426,
      60113
    ],
    [
      96,
      189
    ],
    [
      138,
      -51
    ],
    [
      135,
      129
    ],
    [
      155,
      6
    ],
    [
      133,
      -173
    ],
    [
      184,
      -157
    ],
    [
      168,
      -435
    ],
    [
      184,
      -405
    ]
  ],
  [
    [
      46619,
      59216
    ],
    [
      13,
      -368
    ],
    [
      54,
      -338
    ],
    [
      104,
      -166
    ],
    [
      24,
      -229
    ],
    [
      -13,
      -184
    ]
  ],
  [
    [
      46801,
      57931
    ],
    [
      -40,
      -33
    ],
    [
      -151,
      47
    ],
    [
      -21,
      -66
    ],
    [
      -61,
      -13
    ],
    [
      -200,
      144
    ],
    [
      -134,
      6
    ]
  ],
  [
    [
      46194,
      58016
    ],
    [
      -513,
      25
    ],
    [
      -75,
      -67
    ],
    [
      -92,
      19
    ],
    [
      -147,
      -96
    ]
  ],
  [
    [
      45367,
      57897
    ],
    [
      -46,
      453
    ]
  ],
  [
    [
      45321,
      58350
    ],
    [
      253,
      -13
    ],
    [
      67,
      83
    ],
    [
      50,
      5
    ],
    [
      103,
      136
    ],
    [
      119,
      -124
    ],
    [
      121,
      -11
    ],
    [
      120,
      133
    ],
    [
      -56,
      170
    ],
    [
      -92,
      -99
    ],
    [
      -86,
      3
    ],
    [
      -110,
      145
    ],
    [
      -88,
      -9
    ],
    [
      -63,
      -140
    ],
    [
      -302,
      -17
    ]
  ],
  [
    [
      46619,
      59216
    ],
    [
      93,
      107
    ],
    [
      47,
      348
    ],
    [
      88,
      14
    ],
    [
      194,
      -165
    ],
    [
      157,
      117
    ],
    [
      107,
      -39
    ],
    [
      42,
      131
    ],
    [
      1114,
      9
    ],
    [
      62,
      414
    ],
    [
      -48,
      73
    ],
    [
      -134,
      2550
    ],
    [
      -134,
      2550
    ],
    [
      425,
      10
    ]
  ],
  [
    [
      48632,
      65335
    ],
    [
      937,
      -1289
    ],
    [
      937,
      -1289
    ],
    [
      66,
      -277
    ],
    [
      173,
      -169
    ],
    [
      129,
      -96
    ],
    [
      3,
      -376
    ],
    [
      308,
      58
    ]
  ],
  [
    [
      51185,
      61897
    ],
    [
      1,
      -1361
    ],
    [
      -152,
      -394
    ],
    [
      -24,
      -364
    ],
    [
      -247,
      -94
    ],
    [
      -379,
      -51
    ],
    [
      -102,
      -210
    ],
    [
      -178,
      -23
    ]
  ],
  [
    [
      50104,
      59400
    ],
    [
      -178,
      -3
    ],
    [
      -70,
      114
    ],
    [
      -153,
      -84
    ],
    [
      -259,
      -246
    ],
    [
      -53,
      -184
    ],
    [
      -216,
      -265
    ],
    [
      -38,
      -152
    ],
    [
      -116,
      -120
    ],
    [
      -134,
      79
    ],
    [
      -76,
      -144
    ],
    [
      -41,
      -405
    ],
    [
      -221,
      -490
    ],
    [
      7,
      -200
    ],
    [
      -76,
      -250
    ],
    [
      18,
      -343
    ]
  ],
  [
    [
      48498,
      56707
    ],
    [
      -114,
      -88
    ],
    [
      -65,
      -74
    ],
    [
      -43,
      253
    ],
    [
      -80,
      -67
    ],
    [
      -48,
      11
    ],
    [
      -51,
      -172
    ],
    [
      -215,
      5
    ],
    [
      -77,
      89
    ],
    [
      -36,
      -54
    ]
  ],
  [
    [
      47769,
      56610
    ],
    [
      -85,
      170
    ],
    [
      15,
      176
    ],
    [
      -35,
      69
    ],
    [
      -59,
      -58
    ],
    [
      11,
      192
    ],
    [
      57,
      152
    ],
    [
      -114,
      248
    ],
    [
      -33,
      163
    ],
    [
      -62,
      130
    ],
    [
      -55,
      15
    ],
    [
      -67,
      -83
    ],
    [
      -90,
      -79
    ],
    [
      -76,
      -128
    ],
    [
      -119,
      48
    ],
    [
      -77,
      150
    ],
    [
      -46,
      19
    ],
    [
      -73,
      -78
    ],
    [
      -44,
      -1
    ],
    [
      -16,
      216
    ]
  ],
  [
    [
      47587,
      66766
    ],
    [
      1045,
      -1431
    ]
  ],
  [
    [
      45426,
      60113
    ],
    [
      -24,
      318
    ],
    [
      78,
      291
    ],
    [
      34,
      557
    ],
    [
      -30,
      583
    ],
    [
      -34,
      294
    ],
    [
      28,
      295
    ],
    [
      -72,
      281
    ],
    [
      -146,
      255
    ]
  ],
  [
    [
      50747,
      54278
    ],
    [
      -229,
      -69
    ]
  ],
  [
    [
      50518,
      54209
    ],
    [
      -69,
      407
    ],
    [
      13,
      1357
    ],
    [
      -56,
      122
    ],
    [
      -11,
      290
    ],
    [
      -96,
      207
    ],
    [
      -85,
      174
    ],
    [
      35,
      311
    ]
  ],
  [
    [
      50249,
      57077
    ],
    [
      96,
      67
    ],
    [
      56,
      258
    ],
    [
      136,
      56
    ],
    [
      61,
      176
    ]
  ],
  [
    [
      50598,
      57634
    ],
    [
      93,
      173
    ],
    [
      100,
      2
    ],
    [
      212,
      -340
    ]
  ],
  [
    [
      51003,
      57469
    ],
    [
      -11,
      -197
    ],
    [
      62,
      -350
    ],
    [
      -54,
      -238
    ],
    [
      29,
      -159
    ],
    [
      -135,
      -366
    ],
    [
      -86,
      -181
    ],
    [
      -52,
      -372
    ],
    [
      7,
      -376
    ],
    [
      -16,
      -952
    ]
  ],
  [
    [
      54026,
      58177
    ],
    [
      -78,
      -34
    ],
    [
      -9,
      -188
    ]
  ],
  [
    [
      53939,
      57955
    ],
    [
      -52,
      -13
    ],
    [
      -188,
      647
    ],
    [
      -65,
      24
    ],
    [
      -217,
      -331
    ],
    [
      -215,
      173
    ],
    [
      -150,
      34
    ],
    [
      -80,
      -83
    ],
    [
      -163,
      18
    ],
    [
      -164,
      -252
    ],
    [
      -141,
      -14
    ],
    [
      -337,
      305
    ],
    [
      -131,
      -145
    ],
    [
      -142,
      10
    ],
    [
      -104,
      223
    ],
    [
      -279,
      221
    ],
    [
      -298,
      -70
    ],
    [
      -72,
      -128
    ],
    [
      -39,
      -340
    ],
    [
      -80,
      -238
    ],
    [
      -19,
      -527
    ]
  ],
  [
    [
      50598,
      57634
    ],
    [
      6,
      405
    ],
    [
      -320,
      134
    ],
    [
      -9,
      286
    ],
    [
      -156,
      386
    ],
    [
      -37,
      269
    ],
    [
      22,
      286
    ]
  ],
  [
    [
      51185,
      61897
    ],
    [
      392,
      263
    ],
    [
      804,
      1161
    ],
    [
      952,
      1126
    ]
  ],
  [
    [
      53333,
      64447
    ],
    [
      439,
      -255
    ],
    [
      156,
      -324
    ],
    [
      197,
      220
    ]
  ],
  [
    [
      53939,
      57955
    ],
    [
      110,
      -235
    ],
    [
      -31,
      -107
    ],
    [
      -14,
      -196
    ],
    [
      -234,
      -457
    ],
    [
      -74,
      -377
    ],
    [
      -39,
      -307
    ],
    [
      -59,
      -132
    ],
    [
      -56,
      -414
    ],
    [
      -148,
      -243
    ],
    [
      -43,
      -299
    ],
    [
      -63,
      -238
    ],
    [
      -26,
      -246
    ],
    [
      -191,
      -199
    ],
    [
      -156,
      243
    ],
    [
      -105,
      -10
    ],
    [
      -165,
      -345
    ],
    [
      -81,
      -6
    ],
    [
      -132,
      -570
    ],
    [
      -71,
      -418
    ]
  ],
  [
    [
      52361,
      53399
    ],
    [
      -289,
      -213
    ],
    [
      -105,
      31
    ],
    [
      -107,
      -132
    ],
    [
      -222,
      13
    ],
    [
      -149,
      370
    ],
    [
      -91,
      427
    ],
    [
      -197,
      389
    ],
    [
      -209,
      -7
    ],
    [
      -245,
      1
    ]
  ],
  [
    [
      54244,
      54965
    ],
    [
      -140,
      -599
    ],
    [
      -67,
      -107
    ],
    [
      -21,
      -458
    ],
    [
      28,
      -249
    ],
    [
      -23,
      -176
    ],
    [
      132,
      -309
    ],
    [
      23,
      -212
    ],
    [
      103,
      -305
    ],
    [
      127,
      -190
    ],
    [
      12,
      -269
    ],
    [
      29,
      -172
    ]
  ],
  [
    [
      54447,
      51919
    ],
    [
      -20,
      -319
    ],
    [
      -220,
      140
    ],
    [
      -225,
      156
    ],
    [
      -350,
      23
    ]
  ],
  [
    [
      53632,
      51919
    ],
    [
      -35,
      32
    ],
    [
      -164,
      -76
    ],
    [
      -169,
      79
    ],
    [
      -132,
      -38
    ]
  ],
  [
    [
      53132,
      51916
    ],
    [
      -452,
      13
    ]
  ],
  [
    [
      52680,
      51929
    ],
    [
      40,
      466
    ],
    [
      -108,
      391
    ],
    [
      -127,
      100
    ],
    [
      -56,
      265
    ],
    [
      -72,
      85
    ],
    [
      4,
      163
    ]
  ],
  [
    [
      50518,
      54209
    ],
    [
      -224,
      -126
    ]
  ],
  [
    [
      50294,
      54083
    ],
    [
      -62,
      207
    ],
    [
      -74,
      375
    ],
    [
      -22,
      294
    ],
    [
      61,
      532
    ],
    [
      -69,
      215
    ],
    [
      -27,
      466
    ],
    [
      1,
      429
    ],
    [
      -116,
      305
    ],
    [
      20,
      184
    ]
  ],
  [
    [
      50006,
      57090
    ],
    [
      243,
      -13
    ]
  ],
  [
    [
      50294,
      54083
    ],
    [
      -436,
      -346
    ],
    [
      -154,
      -203
    ],
    [
      -250,
      -171
    ],
    [
      -248,
      168
    ]
  ],
  [
    [
      49206,
      53531
    ],
    [
      13,
      233
    ],
    [
      -121,
      509
    ],
    [
      73,
      667
    ],
    [
      117,
      496
    ],
    [
      -74,
      841
    ]
  ],
  [
    [
      49214,
      56277
    ],
    [
      -38,
      444
    ],
    [
      7,
      336
    ],
    [
      482,
      27
    ],
    [
      123,
      -43
    ],
    [
      90,
      96
    ],
    [
      128,
      -47
    ]
  ],
  [
    [
      48498,
      56707
    ],
    [
      125,
      -129
    ],
    [
      49,
      -195
    ],
    [
      125,
      -125
    ],
    [
      97,
      149
    ],
    [
      130,
      22
    ],
    [
      190,
      -152
    ]
  ],
  [
    [
      49206,
      53531
    ],
    [
      -126,
      -7
    ],
    [
      -194,
      116
    ],
    [
      -178,
      -7
    ],
    [
      -329,
      -103
    ],
    [
      -193,
      -170
    ],
    [
      -275,
      -217
    ],
    [
      -54,
      15
    ]
  ],
  [
    [
      47857,
      53158
    ],
    [
      22,
      487
    ],
    [
      26,
      74
    ],
    [
      -8,
      233
    ],
    [
      -118,
      247
    ],
    [
      -88,
      40
    ],
    [
      -81,
      162
    ],
    [
      60,
      262
    ],
    [
      -28,
      286
    ],
    [
      13,
      172
    ]
  ],
  [
    [
      47655,
      55121
    ],
    [
      44,
      0
    ],
    [
      17,
      258
    ],
    [
      -22,
      114
    ],
    [
      27,
      82
    ],
    [
      103,
      71
    ],
    [
      -69,
      473
    ],
    [
      -64,
      245
    ],
    [
      23,
      200
    ],
    [
      55,
      46
    ]
  ],
  [
    [
      47655,
      55121
    ],
    [
      -78,
      15
    ],
    [
      -57,
      -238
    ],
    [
      -78,
      3
    ],
    [
      -55,
      126
    ],
    [
      19,
      237
    ],
    [
      -116,
      362
    ],
    [
      -73,
      -67
    ],
    [
      -59,
      -13
    ]
  ],
  [
    [
      47158,
      55546
    ],
    [
      -77,
      -34
    ],
    [
      3,
      217
    ],
    [
      -44,
      155
    ],
    [
      9,
      171
    ],
    [
      -60,
      249
    ],
    [
      -78,
      211
    ],
    [
      -222,
      1
    ],
    [
      -65,
      -112
    ],
    [
      -76,
      -13
    ],
    [
      -48,
      -128
    ],
    [
      -32,
      -163
    ],
    [
      -148,
      -260
    ]
  ],
  [
    [
      46320,
      55840
    ],
    [
      -122,
      349
    ],
    [
      -108,
      232
    ],
    [
      -71,
      76
    ],
    [
      -69,
      118
    ],
    [
      -32,
      261
    ],
    [
      -41,
      130
    ],
    [
      -80,
      97
    ]
  ],
  [
    [
      45797,
      57103
    ],
    [
      123,
      288
    ],
    [
      84,
      -11
    ],
    [
      73,
      99
    ],
    [
      61,
      1
    ],
    [
      44,
      78
    ],
    [
      -24,
      196
    ],
    [
      31,
      62
    ],
    [
      5,
      200
    ]
  ],
  [
    [
      45797,
      57103
    ],
    [
      -149,
      247
    ],
    [
      -117,
      39
    ],
    [
      -63,
      166
    ],
    [
      1,
      90
    ],
    [
      -84,
      125
    ],
    [
      -18,
      127
    ]
  ],
  [
    [
      47857,
      53158
    ],
    [
      -73,
      -5
    ],
    [
      -286,
      282
    ],
    [
      -252,
      449
    ],
    [
      -237,
      324
    ],
    [
      -187,
      381
    ]
  ],
  [
    [
      46822,
      54589
    ],
    [
      66,
      189
    ],
    [
      15,
      172
    ],
    [
      126,
      320
    ],
    [
      129,
      276
    ]
  ],
  [
    [
      46822,
      54589
    ],
    [
      -75,
      44
    ],
    [
      -200,
      238
    ],
    [
      -144,
      316
    ],
    [
      -49,
      216
    ],
    [
      -34,
      437
    ]
  ],
  [
    [
      55125,
      52650
    ],
    [
      -178,
      33
    ],
    [
      -188,
      99
    ],
    [
      -166,
      -313
    ],
    [
      -146,
      -550
    ]
  ],
  [
    [
      56824,
      55442
    ],
    [
      152,
      -239
    ],
    [
      2,
      -192
    ],
    [
      187,
      -308
    ],
    [
      116,
      -255
    ],
    [
      70,
      -355
    ],
    [
      208,
      -234
    ],
    [
      44,
      -187
    ]
  ],
  [
    [
      53609,
      47755
    ],
    [
      -104,
      203
    ],
    [
      -84,
      -100
    ],
    [
      -112,
      -255
    ]
  ],
  [
    [
      53309,
      47603
    ],
    [
      -228,
      626
    ]
  ],
  [
    [
      53081,
      48229
    ],
    [
      212,
      326
    ],
    [
      -105,
      391
    ],
    [
      95,
      148
    ],
    [
      187,
      73
    ],
    [
      23,
      261
    ],
    [
      148,
      -283
    ],
    [
      245,
      -25
    ],
    [
      85,
      279
    ],
    [
      36,
      393
    ],
    [
      -31,
      461
    ],
    [
      -131,
      350
    ],
    [
      120,
      684
    ],
    [
      -69,
      117
    ],
    [
      -207,
      -48
    ],
    [
      -78,
      305
    ],
    [
      21,
      258
    ]
  ],
  [
    [
      53081,
      48229
    ],
    [
      -285,
      596
    ],
    [
      -184,
      488
    ],
    [
      -169,
      610
    ],
    [
      9,
      196
    ],
    [
      61,
      189
    ],
    [
      67,
      430
    ],
    [
      56,
      438
    ]
  ],
  [
    [
      52636,
      51176
    ],
    [
      94,
      35
    ],
    [
      404,
      -6
    ],
    [
      -2,
      711
    ]
  ],
  [
    [
      52636,
      51176
    ],
    [
      -52,
      90
    ],
    [
      96,
      663
    ]
  ],
  [
    [
      59099,
      45126
    ],
    [
      131,
      -264
    ],
    [
      71,
      -501
    ],
    [
      -47,
      -160
    ],
    [
      -56,
      -479
    ],
    [
      53,
      -490
    ],
    [
      -87,
      -205
    ],
    [
      -85,
      -549
    ],
    [
      147,
      -153
    ]
  ],
  [
    [
      59226,
      42325
    ],
    [
      -843,
      -487
    ],
    [
      26,
      -421
    ]
  ],
  [
    [
      56448,
      40227
    ],
    [
      -181,
      369
    ],
    [
      -188,
      483
    ],
    [
      13,
      1880
    ],
    [
      579,
      -7
    ],
    [
      -24,
      203
    ],
    [
      41,
      222
    ],
    [
      -49,
      277
    ],
    [
      32,
      286
    ],
    [
      -29,
      184
    ]
  ],
  [
    [
      59599,
      43773
    ],
    [
      -77,
      -449
    ],
    [
      77,
      -768
    ],
    [
      97,
      9
    ],
    [
      100,
      -191
    ],
    [
      116,
      -427
    ],
    [
      24,
      -760
    ],
    [
      -120,
      -124
    ],
    [
      -85,
      -410
    ],
    [
      -181,
      365
    ],
    [
      -21,
      417
    ],
    [
      59,
      274
    ],
    [
      -16,
      237
    ],
    [
      -110,
      149
    ],
    [
      -77,
      -54
    ],
    [
      -159,
      284
    ]
  ],
  [
    [
      61198,
      44484
    ],
    [
      45,
      -265
    ],
    [
      -11,
      -588
    ],
    [
      34,
      -519
    ],
    [
      11,
      -923
    ],
    [
      49,
      -290
    ],
    [
      -83,
      -422
    ],
    [
      -108,
      -410
    ],
    [
      -177,
      -366
    ],
    [
      -254,
      -225
    ],
    [
      -313,
      -287
    ],
    [
      -313,
      -634
    ],
    [
      -107,
      -108
    ],
    [
      -194,
      -420
    ],
    [
      -115,
      -136
    ],
    [
      -23,
      -421
    ],
    [
      132,
      -448
    ],
    [
      54,
      -346
    ],
    [
      4,
      -177
    ],
    [
      49,
      29
    ],
    [
      -8,
      -579
    ],
    [
      -45,
      -275
    ],
    [
      65,
      -101
    ],
    [
      -41,
      -245
    ],
    [
      -116,
      -211
    ],
    [
      -229,
      -199
    ],
    [
      -334,
      -320
    ],
    [
      -122,
      -219
    ],
    [
      24,
      -248
    ],
    [
      71,
      -40
    ],
    [
      -24,
      -311
    ]
  ],
  [
    [
      58908,
      34785
    ],
    [
      -24,
      261
    ],
    [
      -41,
      265
    ]
  ],
  [
    [
      53383,
      47159
    ],
    [
      -74,
      444
    ]
  ],
  [
    [
      53259,
      40357
    ],
    [
      -26,
      372
    ],
    [
      38,
      519
    ],
    [
      96,
      541
    ],
    [
      15,
      254
    ],
    [
      90,
      532
    ],
    [
      66,
      243
    ],
    [
      159,
      386
    ],
    [
      90,
      263
    ],
    [
      29,
      438
    ],
    [
      -15,
      335
    ],
    [
      -83,
      211
    ],
    [
      -74,
      358
    ],
    [
      -68,
      355
    ],
    [
      15,
      122
    ],
    [
      85,
      235
    ],
    [
      -84,
      570
    ],
    [
      -57,
      396
    ],
    [
      -139,
      374
    ],
    [
      26,
      115
    ]
  ],
  [
    [
      58062,
      48902
    ],
    [
      169,
      -46
    ],
    [
      85,
      336
    ],
    [
      147,
      -38
    ]
  ],
  [
    [
      59922,
      69905
    ],
    [
      -49,
      -186
    ]
  ],
  [
    [
      59873,
      69719
    ],
    [
      -100,
      82
    ],
    [
      -58,
      -394
    ],
    [
      69,
      -66
    ],
    [
      -71,
      -81
    ],
    [
      -12,
      -156
    ],
    [
      131,
      80
    ]
  ],
  [
    [
      59832,
      69184
    ],
    [
      7,
      -230
    ],
    [
      -139,
      -944
    ]
  ],
  [
    [
      59700,
      68010
    ],
    [
      -27,
      153
    ],
    [
      -155,
      862
    ]
  ],
  [
    [
      59518,
      69025
    ],
    [
      80,
      194
    ],
    [
      -19,
      34
    ],
    [
      74,
      276
    ],
    [
      56,
      446
    ],
    [
      40,
      149
    ],
    [
      8,
      6
    ]
  ],
  [
    [
      59757,
      70130
    ],
    [
      93,
      -1
    ],
    [
      25,
      104
    ],
    [
      75,
      8
    ]
  ],
  [
    [
      59950,
      70241
    ],
    [
      4,
      -242
    ],
    [
      -38,
      -90
    ],
    [
      6,
      -4
    ]
  ],
  [
    [
      59757,
      70130
    ],
    [
      99,
      482
    ],
    [
      138,
      416
    ],
    [
      5,
      21
    ]
  ],
  [
    [
      59999,
      71049
    ],
    [
      125,
      -31
    ],
    [
      45,
      -231
    ],
    [
      -151,
      -223
    ],
    [
      -68,
      -323
    ]
  ],
  [
    [
      63761,
      43212
    ],
    [
      74,
      -251
    ],
    [
      69,
      -390
    ],
    [
      45,
      -711
    ],
    [
      72,
      -276
    ],
    [
      -28,
      -284
    ],
    [
      -49,
      -174
    ],
    [
      -94,
      347
    ],
    [
      -53,
      -175
    ],
    [
      53,
      -438
    ],
    [
      -24,
      -250
    ],
    [
      -77,
      -137
    ],
    [
      -18,
      -500
    ],
    [
      -109,
      -689
    ],
    [
      -137,
      -814
    ],
    [
      -172,
      -1120
    ],
    [
      -106,
      -821
    ],
    [
      -125,
      -685
    ],
    [
      -226,
      -140
    ],
    [
      -243,
      -250
    ],
    [
      -160,
      151
    ],
    [
      -220,
      211
    ],
    [
      -77,
      312
    ],
    [
      -18,
      524
    ],
    [
      -98,
      471
    ],
    [
      -26,
      425
    ],
    [
      50,
      426
    ],
    [
      128,
      102
    ],
    [
      1,
      197
    ],
    [
      133,
      447
    ],
    [
      25,
      377
    ],
    [
      -65,
      280
    ],
    [
      -52,
      372
    ],
    [
      -23,
      544
    ],
    [
      97,
      331
    ],
    [
      38,
      375
    ],
    [
      138,
      22
    ],
    [
      155,
      121
    ],
    [
      103,
      107
    ],
    [
      122,
      7
    ],
    [
      158,
      337
    ],
    [
      229,
      364
    ],
    [
      83,
      297
    ],
    [
      -38,
      253
    ],
    [
      118,
      -71
    ],
    [
      153,
      410
    ],
    [
      6,
      356
    ],
    [
      92,
      264
    ],
    [
      96,
      -254
    ]
  ],
  [
    [
      59873,
      69719
    ],
    [
      0,
      -362
    ],
    [
      -41,
      -173
    ]
  ],
  [
    [
      45321,
      58350
    ],
    [
      36,
      262
    ]
  ],
  [
    [
      52633,
      68486
    ],
    [
      -118,
      1061
    ],
    [
      -171,
      238
    ],
    [
      -3,
      143
    ],
    [
      -227,
      352
    ],
    [
      -24,
      445
    ],
    [
      171,
      330
    ],
    [
      65,
      487
    ],
    [
      -44,
      563
    ],
    [
      57,
      303
    ]
  ],
  [
    [
      52339,
      72408
    ],
    [
      302,
      239
    ],
    [
      195,
      -71
    ],
    [
      -9,
      -299
    ],
    [
      236,
      217
    ],
    [
      20,
      -113
    ],
    [
      -139,
      -290
    ],
    [
      -2,
      -273
    ],
    [
      96,
      -147
    ],
    [
      -36,
      -511
    ],
    [
      -183,
      -297
    ],
    [
      53,
      -322
    ],
    [
      143,
      -10
    ],
    [
      70,
      -281
    ],
    [
      106,
      -92
    ]
  ],
  [
    [
      53191,
      70158
    ],
    [
      -16,
      -454
    ],
    [
      -135,
      -170
    ],
    [
      -86,
      -189
    ],
    [
      -191,
      -228
    ],
    [
      30,
      -244
    ],
    [
      -24,
      -250
    ],
    [
      -136,
      -137
    ]
  ],
  [
    [
      47592,
      66920
    ],
    [
      -2,
      700
    ],
    [
      449,
      436
    ],
    [
      277,
      90
    ],
    [
      227,
      159
    ],
    [
      107,
      295
    ],
    [
      324,
      234
    ],
    [
      12,
      438
    ],
    [
      161,
      51
    ],
    [
      126,
      219
    ],
    [
      363,
      99
    ],
    [
      51,
      230
    ],
    [
      -73,
      125
    ],
    [
      -96,
      624
    ],
    [
      -17,
      359
    ],
    [
      -104,
      379
    ]
  ],
  [
    [
      49397,
      71358
    ],
    [
      267,
      323
    ],
    [
      300,
      102
    ],
    [
      175,
      244
    ],
    [
      268,
      180
    ],
    [
      471,
      105
    ],
    [
      459,
      48
    ],
    [
      140,
      -87
    ],
    [
      262,
      232
    ],
    [
      297,
      5
    ],
    [
      113,
      -137
    ],
    [
      190,
      35
    ]
  ],
  [
    [
      52633,
      68486
    ],
    [
      90,
      -522
    ],
    [
      15,
      -274
    ],
    [
      -49,
      -482
    ],
    [
      21,
      -270
    ],
    [
      -36,
      -323
    ],
    [
      24,
      -371
    ],
    [
      -110,
      -247
    ],
    [
      164,
      -431
    ],
    [
      11,
      -253
    ],
    [
      99,
      -330
    ],
    [
      130,
      109
    ],
    [
      219,
      -275
    ],
    [
      122,
      -370
    ]
  ],
  [
    [
      59922,
      69905
    ],
    [
      309,
      -234
    ],
    [
      544,
      630
    ]
  ],
  [
    [
      60775,
      70301
    ],
    [
      112,
      -720
    ]
  ],
  [
    [
      60887,
      69581
    ],
    [
      -53,
      -89
    ],
    [
      -556,
      -296
    ],
    [
      277,
      -591
    ],
    [
      -92,
      -101
    ],
    [
      -46,
      -197
    ],
    [
      -212,
      -82
    ],
    [
      -66,
      -213
    ],
    [
      -120,
      -182
    ],
    [
      -310,
      94
    ]
  ],
  [
    [
      59709,
      67924
    ],
    [
      -9,
      86
    ]
  ],
  [
    [
      64327,
      64904
    ],
    [
      49,
      29
    ],
    [
      11,
      -162
    ],
    [
      217,
      93
    ],
    [
      230,
      -15
    ],
    [
      168,
      -18
    ],
    [
      190,
      400
    ],
    [
      207,
      379
    ],
    [
      176,
      364
    ]
  ],
  [
    [
      65575,
      65974
    ],
    [
      52,
      -202
    ]
  ],
  [
    [
      65627,
      65772
    ],
    [
      38,
      -466
    ]
  ],
  [
    [
      65665,
      65306
    ],
    [
      -142,
      -3
    ],
    [
      -23,
      -384
    ],
    [
      50,
      -82
    ],
    [
      -126,
      -117
    ],
    [
      -1,
      -241
    ],
    [
      -81,
      -245
    ],
    [
      -7,
      -238
    ]
  ],
  [
    [
      65335,
      63996
    ],
    [
      -56,
      -125
    ],
    [
      -835,
      298
    ],
    [
      -106,
      599
    ],
    [
      -11,
      136
    ]
  ],
  [
    [
      64113,
      65205
    ],
    [
      -18,
      430
    ],
    [
      75,
      310
    ],
    [
      76,
      64
    ],
    [
      84,
      -185
    ],
    [
      5,
      -346
    ],
    [
      -61,
      -348
    ]
  ],
  [
    [
      64274,
      65130
    ],
    [
      -77,
      -42
    ],
    [
      -84,
      117
    ]
  ],
  [
    [
      63326,
      68290
    ],
    [
      58,
      -261
    ],
    [
      -25,
      -135
    ],
    [
      89,
      -445
    ]
  ],
  [
    [
      63448,
      67449
    ],
    [
      -196,
      -16
    ],
    [
      -69,
      282
    ],
    [
      -248,
      57
    ]
  ],
  [
    [
      62935,
      67772
    ],
    [
      204,
      567
    ],
    [
      187,
      -49
    ]
  ],
  [
    [
      60775,
      70301
    ],
    [
      615,
      614
    ],
    [
      105,
      715
    ],
    [
      -26,
      431
    ],
    [
      152,
      146
    ],
    [
      142,
      369
    ]
  ],
  [
    [
      61763,
      72576
    ],
    [
      119,
      92
    ],
    [
      324,
      -77
    ],
    [
      97,
      -150
    ],
    [
      133,
      100
    ]
  ],
  [
    [
      62436,
      72541
    ],
    [
      180,
      -705
    ],
    [
      182,
      -177
    ],
    [
      21,
      -345
    ],
    [
      -139,
      -204
    ],
    [
      -65,
      -461
    ],
    [
      193,
      -562
    ],
    [
      340,
      -324
    ],
    [
      143,
      -449
    ],
    [
      -46,
      -428
    ],
    [
      89,
      0
    ],
    [
      3,
      -314
    ],
    [
      153,
      -311
    ]
  ],
  [
    [
      63490,
      68261
    ],
    [
      -164,
      29
    ]
  ],
  [
    [
      62935,
      67772
    ],
    [
      -516,
      47
    ],
    [
      -784,
      1188
    ],
    [
      -413,
      414
    ],
    [
      -335,
      160
    ]
  ],
  [
    [
      65665,
      65306
    ],
    [
      125,
      -404
    ],
    [
      155,
      -214
    ],
    [
      203,
      -78
    ],
    [
      165,
      -107
    ],
    [
      125,
      -339
    ],
    [
      75,
      -196
    ],
    [
      100,
      -75
    ],
    [
      -1,
      -132
    ],
    [
      -101,
      -352
    ],
    [
      -44,
      -166
    ],
    [
      -117,
      -189
    ],
    [
      -104,
      -404
    ],
    [
      -126,
      31
    ],
    [
      -58,
      -141
    ],
    [
      -44,
      -300
    ],
    [
      34,
      -395
    ],
    [
      -26,
      -72
    ],
    [
      -128,
      2
    ],
    [
      -174,
      -221
    ],
    [
      -27,
      -288
    ],
    [
      -63,
      -125
    ],
    [
      -173,
      5
    ],
    [
      -109,
      -149
    ],
    [
      1,
      -238
    ],
    [
      -134,
      -165
    ],
    [
      -153,
      56
    ],
    [
      -186,
      -199
    ],
    [
      -128,
      -34
    ]
  ],
  [
    [
      64752,
      60417
    ],
    [
      -91,
      413
    ],
    [
      -217,
      975
    ]
  ],
  [
    [
      64444,
      61805
    ],
    [
      833,
      591
    ],
    [
      185,
      1182
    ],
    [
      -127,
      418
    ]
  ],
  [
    [
      65575,
      65974
    ],
    [
      80,
      201
    ],
    [
      35,
      -51
    ],
    [
      -26,
      -244
    ],
    [
      -37,
      -108
    ]
  ],
  [
    [
      96448,
      41190
    ],
    [
      175,
      -339
    ],
    [
      -92,
      -78
    ],
    [
      -93,
      259
    ],
    [
      10,
      158
    ]
  ],
  [
    [
      96330,
      41322
    ],
    [
      -39,
      163
    ],
    [
      -6,
      453
    ],
    [
      133,
      -182
    ],
    [
      45,
      -476
    ],
    [
      -75,
      74
    ],
    [
      -58,
      -32
    ]
  ],
  [
    [
      78495,
      57780
    ],
    [
      -66,
      713
    ],
    [
      178,
      492
    ],
    [
      359,
      112
    ],
    [
      261,
      -84
    ]
  ],
  [
    [
      79227,
      59013
    ],
    [
      229,
      -232
    ],
    [
      126,
      407
    ],
    [
      246,
      -217
    ]
  ],
  [
    [
      79828,
      58971
    ],
    [
      64,
      -394
    ],
    [
      -34,
      -708
    ],
    [
      -467,
      -455
    ],
    [
      122,
      -358
    ],
    [
      -292,
      -43
    ],
    [
      -240,
      -238
    ]
  ],
  [
    [
      78981,
      56775
    ],
    [
      -233,
      87
    ],
    [
      -112,
      307
    ],
    [
      -141,
      611
    ]
  ],
  [
    [
      78495,
      57780
    ],
    [
      -249,
      271
    ],
    [
      -238,
      -11
    ],
    [
      41,
      464
    ],
    [
      -245,
      -3
    ],
    [
      -22,
      -650
    ],
    [
      -150,
      -863
    ],
    [
      -90,
      -522
    ],
    [
      19,
      -428
    ],
    [
      181,
      -18
    ],
    [
      113,
      -539
    ],
    [
      50,
      -512
    ],
    [
      155,
      -338
    ],
    [
      168,
      -69
    ],
    [
      144,
      -306
    ]
  ],
  [
    [
      78372,
      54256
    ],
    [
      -91,
      -243
    ],
    [
      -183,
      -71
    ],
    [
      -22,
      304
    ],
    [
      -227,
      258
    ],
    [
      -48,
      -105
    ]
  ],
  [
    [
      77801,
      54399
    ],
    [
      -110,
      227
    ],
    [
      -47,
      292
    ],
    [
      -148,
      334
    ],
    [
      -135,
      280
    ],
    [
      -45,
      -347
    ],
    [
      -53,
      328
    ],
    [
      30,
      369
    ],
    [
      82,
      566
    ]
  ],
  [
    [
      77375,
      56448
    ],
    [
      135,
      607
    ],
    [
      152,
      551
    ],
    [
      -108,
      539
    ],
    [
      4,
      274
    ],
    [
      -32,
      330
    ],
    [
      -185,
      470
    ],
    [
      -66,
      296
    ],
    [
      96,
      109
    ],
    [
      101,
      514
    ],
    [
      -113,
      390
    ],
    [
      -177,
      431
    ],
    [
      -134,
      519
    ],
    [
      117,
      107
    ],
    [
      127,
      639
    ],
    [
      196,
      26
    ],
    [
      162,
      256
    ],
    [
      159,
      137
    ]
  ],
  [
    [
      77809,
      62643
    ],
    [
      120,
      -182
    ],
    [
      16,
      -355
    ],
    [
      188,
      -27
    ],
    [
      -68,
      -623
    ],
    [
      6,
      -530
    ],
    [
      293,
      353
    ],
    [
      83,
      -104
    ],
    [
      163,
      17
    ],
    [
      56,
      205
    ],
    [
      210,
      -40
    ],
    [
      211,
      -480
    ],
    [
      18,
      -583
    ],
    [
      224,
      -515
    ],
    [
      -12,
      -500
    ],
    [
      -90,
      -266
    ]
  ],
  [
    [
      77809,
      62643
    ],
    [
      59,
      218
    ],
    [
      237,
      384
    ]
  ],
  [
    [
      78105,
      63245
    ],
    [
      25,
      -139
    ],
    [
      148,
      -16
    ],
    [
      -42,
      676
    ],
    [
      144,
      86
    ]
  ],
  [
    [
      78380,
      63852
    ],
    [
      162,
      -466
    ],
    [
      125,
      -537
    ],
    [
      342,
      -5
    ],
    [
      108,
      -515
    ],
    [
      -178,
      -155
    ],
    [
      -80,
      -212
    ],
    [
      333,
      -353
    ],
    [
      231,
      -699
    ],
    [
      175,
      -520
    ],
    [
      210,
      -411
    ],
    [
      70,
      -418
    ],
    [
      -50,
      -590
    ]
  ],
  [
    [
      77375,
      56448
    ],
    [
      -27,
      439
    ],
    [
      86,
      452
    ],
    [
      -94,
      350
    ],
    [
      23,
      644
    ],
    [
      -113,
      306
    ],
    [
      -90,
      707
    ],
    [
      -50,
      746
    ],
    [
      -121,
      490
    ],
    [
      -183,
      -297
    ],
    [
      -315,
      -421
    ],
    [
      -156,
      53
    ],
    [
      -172,
      138
    ],
    [
      96,
      732
    ],
    [
      -58,
      554
    ],
    [
      -218,
      681
    ],
    [
      34,
      213
    ],
    [
      -163,
      76
    ],
    [
      -197,
      481
    ]
  ],
  [
    [
      75657,
      62792
    ],
    [
      -18,
      476
    ],
    [
      97,
      -90
    ],
    [
      6,
      424
    ]
  ],
  [
    [
      75742,
      63602
    ],
    [
      137,
      140
    ],
    [
      -30,
      251
    ],
    [
      63,
      201
    ],
    [
      11,
      612
    ],
    [
      217,
      -135
    ],
    [
      124,
      487
    ],
    [
      14,
      288
    ],
    [
      153,
      496
    ],
    [
      -8,
      338
    ],
    [
      359,
      408
    ],
    [
      199,
      -107
    ],
    [
      -23,
      364
    ],
    [
      97,
      108
    ],
    [
      -20,
      224
    ]
  ],
  [
    [
      77035,
      67277
    ],
    [
      162,
      44
    ],
    [
      93,
      -348
    ],
    [
      121,
      -141
    ],
    [
      8,
      -452
    ],
    [
      -11,
      -487
    ],
    [
      -263,
      -493
    ],
    [
      -33,
      -701
    ],
    [
      293,
      98
    ],
    [
      66,
      -544
    ],
    [
      176,
      -115
    ],
    [
      -81,
      -490
    ],
    [
      206,
      -222
    ],
    [
      121,
      -109
    ],
    [
      203,
      172
    ],
    [
      9,
      -244
    ]
  ],
  [
    [
      78380,
      63852
    ],
    [
      149,
      145
    ],
    [
      221,
      -3
    ],
    [
      271,
      68
    ],
    [
      236,
      315
    ],
    [
      134,
      -222
    ],
    [
      254,
      -108
    ],
    [
      -44,
      -340
    ],
    [
      132,
      -240
    ],
    [
      280,
      -154
    ]
  ],
  [
    [
      80013,
      63313
    ],
    [
      -371,
      -505
    ],
    [
      -231,
      -558
    ],
    [
      -61,
      -410
    ],
    [
      212,
      -623
    ],
    [
      260,
      -772
    ],
    [
      252,
      -365
    ],
    [
      169,
      -475
    ],
    [
      127,
      -1093
    ],
    [
      -37,
      -1039
    ],
    [
      -232,
      -389
    ],
    [
      -318,
      -381
    ],
    [
      -227,
      -492
    ],
    [
      -346,
      -550
    ],
    [
      -101,
      378
    ],
    [
      78,
      401
    ],
    [
      -206,
      335
    ]
  ],
  [
    [
      86327,
      75524
    ],
    [
      0,
      0
    ]
  ],
  [
    [
      86327,
      75524
    ],
    [
      -106,
      36
    ],
    [
      -120,
      -200
    ],
    [
      -83,
      -202
    ],
    [
      10,
      -424
    ],
    [
      -143,
      -130
    ],
    [
      -50,
      -105
    ],
    [
      -104,
      -174
    ],
    [
      -185,
      -97
    ],
    [
      -121,
      -159
    ],
    [
      -9,
      -256
    ],
    [
      -32,
      -65
    ],
    [
      111,
      -96
    ],
    [
      157,
      -259
    ]
  ],
  [
    [
      85652,
      73393
    ],
    [
      -40,
      -143
    ],
    [
      -118,
      -39
    ],
    [
      -197,
      -29
    ],
    [
      -108,
      -266
    ],
    [
      -124,
      21
    ],
    [
      -17,
      -54
    ]
  ],
  [
    [
      85048,
      72883
    ],
    [
      -135,
      112
    ],
    [
      -34,
      -111
    ],
    [
      -81,
      -49
    ],
    [
      -10,
      112
    ],
    [
      -72,
      54
    ],
    [
      -75,
      94
    ],
    [
      76,
      260
    ],
    [
      66,
      69
    ],
    [
      -25,
      108
    ],
    [
      71,
      319
    ],
    [
      -18,
      96
    ],
    [
      -163,
      65
    ],
    [
      -131,
      158
    ]
  ],
  [
    [
      84517,
      74170
    ],
    [
      227,
      379
    ],
    [
      306,
      318
    ],
    [
      191,
      419
    ],
    [
      131,
      -185
    ],
    [
      241,
      -22
    ],
    [
      -44,
      312
    ],
    [
      429,
      254
    ],
    [
      111,
      331
    ],
    [
      179,
      -348
    ]
  ],
  [
    [
      85652,
      73393
    ],
    [
      240,
      -697
    ],
    [
      68,
      -383
    ],
    [
      3,
      -681
    ],
    [
      -105,
      -325
    ],
    [
      -252,
      -113
    ],
    [
      -222,
      -245
    ],
    [
      -250,
      -51
    ],
    [
      -31,
      322
    ],
    [
      51,
      443
    ],
    [
      -122,
      615
    ],
    [
      206,
      99
    ],
    [
      -190,
      506
    ]
  ],
  [
    [
      82410,
      80055
    ],
    [
      -135,
      -446
    ],
    [
      -197,
      -590
    ],
    [
      72,
      -241
    ],
    [
      157,
      74
    ],
    [
      274,
      -92
    ],
    [
      214,
      219
    ],
    [
      223,
      -189
    ],
    [
      251,
      -413
    ],
    [
      -30,
      -210
    ],
    [
      -219,
      66
    ],
    [
      -404,
      -78
    ],
    [
      -195,
      -168
    ],
    [
      -204,
      -391
    ],
    [
      -423,
      -229
    ],
    [
      -277,
      -313
    ],
    [
      -286,
      120
    ],
    [
      -156,
      53
    ],
    [
      -146,
      -381
    ],
    [
      89,
      -227
    ],
    [
      45,
      -195
    ],
    [
      -194,
      -199
    ],
    [
      -200,
      -316
    ],
    [
      -324,
      -208
    ],
    [
      -417,
      -22
    ],
    [
      -448,
      -205
    ],
    [
      -324,
      -318
    ],
    [
      -123,
      184
    ],
    [
      -336,
      -1
    ],
    [
      -411,
      359
    ],
    [
      -274,
      88
    ],
    [
      -369,
      -82
    ],
    [
      -574,
      133
    ],
    [
      -306,
      -14
    ],
    [
      -163,
      351
    ],
    [
      -127,
      544
    ],
    [
      -171,
      66
    ],
    [
      -336,
      368
    ],
    [
      -374,
      83
    ],
    [
      -330,
      101
    ],
    [
      -100,
      256
    ],
    [
      107,
      690
    ],
    [
      -192,
      476
    ],
    [
      -396,
      222
    ],
    [
      -233,
      313
    ],
    [
      -73,
      413
    ]
  ],
  [
    [
      75742,
      63602
    ],
    [
      -147,
      937
    ],
    [
      -76,
      -2
    ],
    [
      -46,
      -377
    ],
    [
      -152,
      306
    ],
    [
      86,
      336
    ],
    [
      124,
      34
    ],
    [
      128,
      500
    ],
    [
      -160,
      101
    ],
    [
      -257,
      -8
    ],
    [
      -265,
      81
    ],
    [
      -24,
      410
    ],
    [
      -133,
      30
    ],
    [
      -220,
      255
    ],
    [
      -98,
      -401
    ],
    [
      200,
      -313
    ],
    [
      -173,
      -220
    ],
    [
      -62,
      -215
    ],
    [
      171,
      -159
    ],
    [
      -47,
      -356
    ],
    [
      96,
      -444
    ],
    [
      43,
      -486
    ]
  ],
  [
    [
      74730,
      63611
    ],
    [
      -39,
      -216
    ],
    [
      -189,
      7
    ],
    [
      -343,
      -122
    ],
    [
      16,
      -445
    ],
    [
      -148,
      -349
    ],
    [
      -400,
      -398
    ],
    [
      -311,
      -695
    ],
    [
      -209,
      -373
    ],
    [
      -276,
      -387
    ],
    [
      -1,
      -271
    ],
    [
      -138,
      -146
    ],
    [
      -251,
      -212
    ],
    [
      -129,
      -31
    ],
    [
      -84,
      -450
    ],
    [
      58,
      -769
    ],
    [
      15,
      -490
    ],
    [
      -118,
      -561
    ],
    [
      -1,
      -1004
    ],
    [
      -144,
      -29
    ],
    [
      -126,
      -450
    ],
    [
      84,
      -195
    ],
    [
      -253,
      -168
    ],
    [
      -93,
      -401
    ],
    [
      -112,
      -170
    ],
    [
      -263,
      552
    ],
    [
      -128,
      827
    ],
    [
      -107,
      596
    ],
    [
      -97,
      279
    ],
    [
      -148,
      568
    ],
    [
      -69,
      739
    ],
    [
      -48,
      369
    ],
    [
      -253,
      811
    ],
    [
      -115,
      1145
    ],
    [
      -83,
      756
    ],
    [
      1,
      716
    ],
    [
      -54,
      553
    ],
    [
      -404,
      -353
    ],
    [
      -196,
      70
    ],
    [
      -362,
      716
    ],
    [
      133,
      214
    ],
    [
      -82,
      232
    ],
    [
      -326,
      501
    ]
  ],
  [
    [
      68937,
      64577
    ],
    [
      185,
      395
    ],
    [
      612,
      -2
    ],
    [
      -56,
      507
    ],
    [
      -156,
      300
    ],
    [
      -31,
      455
    ],
    [
      -182,
      265
    ],
    [
      306,
      619
    ],
    [
      323,
      -45
    ],
    [
      290,
      620
    ],
    [
      174,
      599
    ],
    [
      270,
      593
    ],
    [
      -4,
      421
    ],
    [
      236,
      342
    ],
    [
      -224,
      292
    ],
    [
      -96,
      400
    ],
    [
      -99,
      517
    ],
    [
      137,
      255
    ],
    [
      421,
      -144
    ],
    [
      310,
      88
    ],
    [
      268,
      496
    ]
  ],
  [
    [
      71621,
      71550
    ],
    [
      298,
      -692
    ],
    [
      -28,
      -482
    ],
    [
      111,
      -303
    ],
    [
      -9,
      -301
    ],
    [
      -200,
      79
    ],
    [
      78,
      -651
    ],
    [
      273,
      -374
    ],
    [
      386,
      -413
    ]
  ],
  [
    [
      72530,
      68413
    ],
    [
      -176,
      -268
    ],
    [
      -108,
      -553
    ],
    [
      269,
      -224
    ],
    [
      262,
      -289
    ],
    [
      362,
      -332
    ],
    [
      381,
      -76
    ],
    [
      160,
      -301
    ],
    [
      215,
      -56
    ],
    [
      334,
      -138
    ],
    [
      231,
      10
    ],
    [
      32,
      234
    ],
    [
      -36,
      375
    ],
    [
      21,
      255
    ]
  ],
  [
    [
      74477,
      67050
    ],
    [
      170,
      124
    ],
    [
      23,
      -465
    ]
  ],
  [
    [
      74670,
      66709
    ],
    [
      6,
      -119
    ],
    [
      252,
      -224
    ],
    [
      175,
      92
    ],
    [
      234,
      -39
    ],
    [
      227,
      17
    ],
    [
      20,
      363
    ],
    [
      -113,
      189
    ]
  ],
  [
    [
      75471,
      66988
    ],
    [
      224,
      74
    ],
    [
      252,
      439
    ],
    [
      321,
      376
    ],
    [
      233,
      -145
    ],
    [
      198,
      249
    ],
    [
      130,
      -367
    ],
    [
      -94,
      -248
    ],
    [
      300,
      -89
    ]
  ],
  [
    [
      75657,
      62792
    ],
    [
      -79,
      308
    ],
    [
      -16,
      301
    ],
    [
      -53,
      285
    ],
    [
      -116,
      344
    ],
    [
      -256,
      23
    ],
    [
      25,
      -243
    ],
    [
      -87,
      -329
    ],
    [
      -118,
      120
    ],
    [
      -41,
      -108
    ],
    [
      -78,
      65
    ],
    [
      -108,
      53
    ]
  ],
  [
    [
      74670,
      66709
    ],
    [
      184,
      439
    ],
    [
      150,
      150
    ],
    [
      198,
      -137
    ],
    [
      147,
      -14
    ],
    [
      122,
      -159
    ]
  ],
  [
    [
      72530,
      68413
    ],
    [
      115,
      141
    ],
    [
      223,
      -182
    ],
    [
      280,
      -385
    ],
    [
      157,
      -84
    ],
    [
      93,
      -284
    ],
    [
      216,
      -117
    ],
    [
      225,
      -259
    ],
    [
      314,
      -136
    ],
    [
      324,
      -57
    ]
  ],
  [
    [
      68937,
      64577
    ],
    [
      -203,
      150
    ],
    [
      -83,
      424
    ],
    [
      -215,
      450
    ],
    [
      -512,
      -111
    ],
    [
      -451,
      -11
    ],
    [
      -391,
      -83
    ]
  ],
  [
    [
      67082,
      65396
    ],
    [
      105,
      687
    ],
    [
      400,
      305
    ],
    [
      -23,
      272
    ],
    [
      -133,
      96
    ],
    [
      -7,
      520
    ],
    [
      -266,
      260
    ],
    [
      -112,
      357
    ],
    [
      -137,
      310
    ]
  ],
  [
    [
      66909,
      68203
    ],
    [
      465,
      -301
    ],
    [
      278,
      88
    ],
    [
      166,
      -75
    ],
    [
      56,
      129
    ],
    [
      194,
      -52
    ],
    [
      361,
      246
    ],
    [
      10,
      503
    ],
    [
      154,
      334
    ],
    [
      207,
      -1
    ],
    [
      31,
      166
    ],
    [
      212,
      77
    ],
    [
      103,
      -55
    ],
    [
      108,
      166
    ],
    [
      -15,
      355
    ],
    [
      118,
      356
    ],
    [
      177,
      150
    ],
    [
      -110,
      390
    ],
    [
      265,
      -18
    ],
    [
      76,
      213
    ],
    [
      -12,
      227
    ],
    [
      139,
      248
    ],
    [
      -32,
      294
    ],
    [
      -66,
      250
    ],
    [
      163,
      258
    ],
    [
      298,
      124
    ],
    [
      319,
      68
    ],
    [
      141,
      109
    ],
    [
      162,
      67
    ]
  ],
  [
    [
      70877,
      72519
    ],
    [
      205,
      -276
    ],
    [
      82,
      -454
    ],
    [
      457,
      -239
    ]
  ],
  [
    [
      68841,
      72526
    ],
    [
      85,
      -72
    ],
    [
      201,
      189
    ],
    [
      93,
      -114
    ],
    [
      90,
      271
    ],
    [
      166,
      -12
    ],
    [
      43,
      86
    ],
    [
      29,
      239
    ],
    [
      120,
      205
    ],
    [
      150,
      -134
    ],
    [
      -30,
      -181
    ],
    [
      84,
      -28
    ],
    [
      -26,
      -496
    ],
    [
      110,
      -194
    ],
    [
      97,
      125
    ],
    [
      123,
      58
    ],
    [
      173,
      265
    ],
    [
      192,
      -44
    ],
    [
      286,
      -1
    ]
  ],
  [
    [
      70827,
      72688
    ],
    [
      50,
      -169
    ]
  ],
  [
    [
      66909,
      68203
    ],
    [
      252,
      536
    ],
    [
      -23,
      380
    ],
    [
      -210,
      100
    ],
    [
      -22,
      375
    ],
    [
      -91,
      472
    ],
    [
      119,
      323
    ],
    [
      -121,
      87
    ],
    [
      76,
      430
    ],
    [
      113,
      736
    ]
  ],
  [
    [
      67002,
      71642
    ],
    [
      284,
      -224
    ],
    [
      209,
      79
    ],
    [
      58,
      268
    ],
    [
      219,
      89
    ],
    [
      157,
      180
    ],
    [
      55,
      472
    ],
    [
      234,
      114
    ],
    [
      44,
      211
    ],
    [
      131,
      -158
    ],
    [
      84,
      -19
    ]
  ],
  [
    [
      69725,
      74357
    ],
    [
      -101,
      -182
    ],
    [
      -303,
      98
    ],
    [
      -26,
      -340
    ],
    [
      301,
      46
    ],
    [
      343,
      -192
    ],
    [
      526,
      89
    ]
  ],
  [
    [
      70465,
      73876
    ],
    [
      70,
      -546
    ],
    [
      91,
      59
    ],
    [
      169,
      -134
    ],
    [
      -10,
      -230
    ],
    [
      42,
      -337
    ]
  ],
  [
    [
      72294,
      75601
    ],
    [
      -39,
      -134
    ],
    [
      -438,
      -320
    ],
    [
      -99,
      -234
    ],
    [
      -356,
      -70
    ],
    [
      -105,
      -378
    ],
    [
      -294,
      80
    ],
    [
      -192,
      -116
    ],
    [
      -266,
      -279
    ],
    [
      39,
      -138
    ],
    [
      -79,
      -136
    ]
  ],
  [
    [
      67002,
      71642
    ],
    [
      -24,
      498
    ],
    [
      -207,
      21
    ],
    [
      -318,
      523
    ],
    [
      -221,
      65
    ],
    [
      -308,
      299
    ],
    [
      -197,
      55
    ],
    [
      -122,
      -110
    ],
    [
      -186,
      17
    ],
    [
      -197,
      -338
    ],
    [
      -244,
      -114
    ]
  ],
  [
    [
      64978,
      72558
    ],
    [
      -52,
      417
    ],
    [
      40,
      618
    ],
    [
      -216,
      200
    ],
    [
      71,
      405
    ],
    [
      -184,
      34
    ],
    [
      61,
      498
    ],
    [
      262,
      -145
    ],
    [
      244,
      189
    ],
    [
      -202,
      355
    ],
    [
      -80,
      338
    ],
    [
      -224,
      -151
    ],
    [
      -28,
      -433
    ],
    [
      -87,
      383
    ]
  ],
  [
    [
      62436,
      72541
    ],
    [
      -152,
      473
    ],
    [
      55,
      183
    ],
    [
      -87,
      678
    ],
    [
      190,
      168
    ]
  ],
  [
    [
      62442,
      74043
    ],
    [
      44,
      -223
    ],
    [
      141,
      -273
    ],
    [
      190,
      -78
    ]
  ],
  [
    [
      62817,
      73469
    ],
    [
      101,
      17
    ]
  ],
  [
    [
      62918,
      73486
    ],
    [
      327,
      436
    ],
    [
      104,
      44
    ],
    [
      82,
      -174
    ],
    [
      -95,
      -292
    ],
    [
      173,
      -309
    ],
    [
      69,
      29
    ]
  ],
  [
    [
      63578,
      73220
    ],
    [
      88,
      -436
    ],
    [
      263,
      -123
    ],
    [
      193,
      -296
    ],
    [
      395,
      -102
    ],
    [
      434,
      156
    ],
    [
      27,
      139
    ]
  ],
  [
    [
      67082,
      65396
    ],
    [
      -523,
      179
    ],
    [
      -303,
      136
    ],
    [
      -313,
      76
    ],
    [
      -118,
      725
    ],
    [
      -133,
      105
    ],
    [
      -214,
      -106
    ],
    [
      -280,
      -286
    ],
    [
      -339,
      196
    ],
    [
      -281,
      454
    ],
    [
      -267,
      168
    ],
    [
      -186,
      561
    ],
    [
      -205,
      788
    ],
    [
      -149,
      -96
    ],
    [
      -177,
      196
    ],
    [
      -104,
      -231
    ]
  ],
  [
    [
      59999,
      71049
    ],
    [
      -26,
      452
    ],
    [
      68,
      243
    ]
  ],
  [
    [
      60041,
      71744
    ],
    [
      74,
      129
    ],
    [
      75,
      130
    ],
    [
      15,
      329
    ],
    [
      91,
      -115
    ],
    [
      306,
      165
    ],
    [
      147,
      -112
    ],
    [
      229,
      2
    ],
    [
      320,
      222
    ],
    [
      149,
      -10
    ],
    [
      316,
      92
    ]
  ],
  [
    [
      62817,
      73469
    ],
    [
      -113,
      342
    ],
    [
      1,
      91
    ],
    [
      -123,
      -2
    ],
    [
      -82,
      159
    ],
    [
      -58,
      -16
    ]
  ],
  [
    [
      62442,
      74043
    ],
    [
      -109,
      172
    ],
    [
      -207,
      147
    ],
    [
      27,
      288
    ],
    [
      -47,
      208
    ]
  ],
  [
    [
      62106,
      74858
    ],
    [
      386,
      92
    ]
  ],
  [
    [
      62492,
      74950
    ],
    [
      57,
      -155
    ],
    [
      106,
      -103
    ],
    [
      -56,
      -148
    ],
    [
      148,
      -202
    ],
    [
      -78,
      -189
    ],
    [
      118,
      -160
    ],
    [
      124,
      -97
    ],
    [
      7,
      -410
    ]
  ],
  [
    [
      55734,
      91409
    ],
    [
      371,
      -289
    ],
    [
      433,
      -402
    ],
    [
      8,
      -910
    ],
    [
      93,
      -230
    ]
  ],
  [
    [
      56639,
      89578
    ],
    [
      -478,
      -167
    ],
    [
      -269,
      -413
    ],
    [
      43,
      -361
    ],
    [
      -441,
      -475
    ],
    [
      -537,
      -509
    ],
    [
      -202,
      -832
    ],
    [
      198,
      -416
    ],
    [
      265,
      -328
    ],
    [
      -255,
      -666
    ],
    [
      -289,
      -138
    ],
    [
      -106,
      -992
    ],
    [
      -157,
      -554
    ],
    [
      -337,
      57
    ],
    [
      -158,
      -468
    ],
    [
      -321,
      -27
    ],
    [
      -89,
      558
    ],
    [
      -232,
      671
    ],
    [
      -211,
      835
    ]
  ],
  [
    [
      58829,
      81362
    ],
    [
      -239,
      -35
    ],
    [
      -85,
      -129
    ],
    [
      -18,
      -298
    ],
    [
      -111,
      57
    ],
    [
      -250,
      -28
    ],
    [
      -73,
      138
    ],
    [
      -104,
      -103
    ],
    [
      -105,
      86
    ],
    [
      -218,
      12
    ],
    [
      -310,
      141
    ],
    [
      -281,
      47
    ],
    [
      -215,
      -14
    ],
    [
      -152,
      -160
    ],
    [
      -133,
      -23
    ]
  ],
  [
    [
      56535,
      81053
    ],
    [
      -6,
      263
    ],
    [
      -85,
      274
    ],
    [
      166,
      121
    ],
    [
      2,
      235
    ],
    [
      -77,
      225
    ],
    [
      -12,
      261
    ]
  ],
  [
    [
      56523,
      82432
    ],
    [
      268,
      -4
    ],
    [
      302,
      223
    ],
    [
      64,
      333
    ],
    [
      228,
      190
    ],
    [
      -26,
      264
    ]
  ],
  [
    [
      57359,
      83438
    ],
    [
      169,
      100
    ],
    [
      298,
      228
    ]
  ],
  [
    [
      60617,
      78409
    ],
    [
      -222,
      -48
    ],
    [
      -185,
      -191
    ],
    [
      -260,
      -31
    ],
    [
      -239,
      -220
    ],
    [
      14,
      -317
    ]
  ],
  [
    [
      59287,
      77741
    ],
    [
      -38,
      64
    ],
    [
      -432,
      149
    ],
    [
      -19,
      221
    ],
    [
      -257,
      -73
    ],
    [
      -103,
      -325
    ],
    [
      -215,
      -437
    ]
  ],
  [
    [
      58223,
      77340
    ],
    [
      -126,
      101
    ],
    [
      -131,
      -95
    ],
    [
      -124,
      109
    ]
  ],
  [
    [
      57842,
      77455
    ],
    [
      70,
      64
    ],
    [
      49,
      203
    ],
    [
      76,
      188
    ],
    [
      -20,
      106
    ],
    [
      58,
      47
    ],
    [
      27,
      -81
    ],
    [
      164,
      -18
    ],
    [
      74,
      44
    ],
    [
      -52,
      60
    ],
    [
      19,
      88
    ],
    [
      -97,
      150
    ],
    [
      -40,
      247
    ],
    [
      -101,
      97
    ],
    [
      20,
      200
    ],
    [
      -125,
      159
    ],
    [
      -115,
      22
    ],
    [
      -204,
      184
    ],
    [
      -185,
      -58
    ],
    [
      -66,
      -87
    ]
  ],
  [
    [
      57394,
      79070
    ],
    [
      -118,
      0
    ],
    [
      -69,
      -139
    ],
    [
      -205,
      -56
    ],
    [
      -95,
      -91
    ],
    [
      -129,
      144
    ],
    [
      -178,
      3
    ],
    [
      -172,
      65
    ],
    [
      -120,
      -127
    ]
  ],
  [
    [
      56308,
      78869
    ],
    [
      -19,
      159
    ],
    [
      -155,
      161
    ]
  ],
  [
    [
      56134,
      79189
    ],
    [
      55,
      238
    ],
    [
      77,
      154
    ]
  ],
  [
    [
      56266,
      79581
    ],
    [
      60,
      -35
    ],
    [
      -71,
      266
    ],
    [
      252,
      491
    ],
    [
      138,
      69
    ],
    [
      29,
      166
    ],
    [
      -139,
      515
    ]
  ],
  [
    [
      56266,
      79581
    ],
    [
      -264,
      227
    ],
    [
      -200,
      -84
    ],
    [
      -131,
      61
    ],
    [
      -165,
      -127
    ],
    [
      -140,
      210
    ],
    [
      -114,
      -81
    ],
    [
      -16,
      36
    ]
  ],
  [
    [
      55236,
      79823
    ],
    [
      -127,
      291
    ],
    [
      -207,
      36
    ],
    [
      -26,
      185
    ],
    [
      -191,
      66
    ],
    [
      -41,
      -153
    ],
    [
      -151,
      122
    ],
    [
      17,
      163
    ],
    [
      -207,
      51
    ],
    [
      -132,
      191
    ]
  ],
  [
    [
      54171,
      80775
    ],
    [
      -114,
      377
    ],
    [
      22,
      204
    ],
    [
      -69,
      316
    ],
    [
      -101,
      210
    ],
    [
      77,
      158
    ],
    [
      -64,
      300
    ]
  ],
  [
    [
      53922,
      82340
    ],
    [
      189,
      174
    ],
    [
      434,
      273
    ],
    [
      350,
      200
    ],
    [
      277,
      -100
    ],
    [
      21,
      -144
    ],
    [
      268,
      -7
    ]
  ],
  [
    [
      56314,
      82678
    ],
    [
      142,
      -64
    ],
    [
      67,
      -182
    ]
  ],
  [
    [
      54716,
      79012
    ],
    [
      -21,
      -241
    ],
    [
      -156,
      -2
    ],
    [
      53,
      -128
    ],
    [
      -92,
      -380
    ]
  ],
  [
    [
      54500,
      78261
    ],
    [
      -53,
      -100
    ],
    [
      -243,
      -14
    ],
    [
      -140,
      -134
    ],
    [
      -229,
      45
    ]
  ],
  [
    [
      53835,
      78058
    ],
    [
      -398,
      153
    ],
    [
      -62,
      205
    ],
    [
      -274,
      -102
    ],
    [
      -32,
      -113
    ],
    [
      -169,
      84
    ]
  ],
  [
    [
      52900,
      78285
    ],
    [
      -142,
      16
    ],
    [
      -125,
      108
    ],
    [
      42,
      145
    ],
    [
      -10,
      104
    ]
  ],
  [
    [
      52665,
      78658
    ],
    [
      83,
      33
    ],
    [
      141,
      -164
    ],
    [
      39,
      156
    ],
    [
      245,
      -25
    ],
    [
      199,
      106
    ],
    [
      133,
      -18
    ],
    [
      87,
      -121
    ],
    [
      26,
      100
    ],
    [
      -40,
      385
    ],
    [
      100,
      75
    ],
    [
      98,
      272
    ]
  ],
  [
    [
      53776,
      79457
    ],
    [
      206,
      -190
    ],
    [
      157,
      242
    ],
    [
      98,
      44
    ],
    [
      215,
      -180
    ],
    [
      131,
      30
    ],
    [
      128,
      -111
    ]
  ],
  [
    [
      54711,
      79292
    ],
    [
      -23,
      -75
    ],
    [
      28,
      -205
    ]
  ],
  [
    [
      56308,
      78869
    ],
    [
      -170,
      -123
    ],
    [
      -131,
      -401
    ],
    [
      -168,
      -401
    ],
    [
      -223,
      -111
    ]
  ],
  [
    [
      55616,
      77833
    ],
    [
      -173,
      26
    ],
    [
      -213,
      -155
    ]
  ],
  [
    [
      55230,
      77704
    ],
    [
      -104,
      -89
    ],
    [
      -229,
      114
    ],
    [
      -208,
      253
    ],
    [
      -88,
      73
    ]
  ],
  [
    [
      54601,
      78055
    ],
    [
      -54,
      200
    ],
    [
      -47,
      6
    ]
  ],
  [
    [
      54716,
      79012
    ],
    [
      141,
      -151
    ],
    [
      103,
      -65
    ],
    [
      233,
      73
    ],
    [
      22,
      118
    ],
    [
      111,
      18
    ],
    [
      135,
      92
    ],
    [
      30,
      -38
    ],
    [
      130,
      74
    ],
    [
      66,
      139
    ],
    [
      91,
      36
    ],
    [
      297,
      -180
    ],
    [
      59,
      61
    ]
  ],
  [
    [
      57842,
      77455
    ],
    [
      -50,
      270
    ],
    [
      30,
      252
    ],
    [
      -9,
      259
    ],
    [
      -160,
      352
    ],
    [
      -89,
      249
    ],
    [
      -86,
      175
    ],
    [
      -84,
      58
    ]
  ],
  [
    [
      58223,
      77340
    ],
    [
      6,
      -152
    ],
    [
      -135,
      -128
    ],
    [
      -84,
      56
    ],
    [
      -78,
      -713
    ]
  ],
  [
    [
      57932,
      76403
    ],
    [
      -163,
      62
    ],
    [
      -202,
      215
    ],
    [
      -327,
      -138
    ],
    [
      -138,
      -150
    ],
    [
      -408,
      31
    ],
    [
      -213,
      92
    ],
    [
      -108,
      -43
    ],
    [
      -80,
      243
    ]
  ],
  [
    [
      56293,
      76715
    ],
    [
      -51,
      103
    ],
    [
      65,
      99
    ],
    [
      -69,
      74
    ],
    [
      -87,
      -133
    ],
    [
      -162,
      172
    ],
    [
      -22,
      244
    ],
    [
      -169,
      139
    ],
    [
      -31,
      188
    ],
    [
      -151,
      232
    ]
  ],
  [
    [
      55907,
      83187
    ],
    [
      -59,
      497
    ]
  ],
  [
    [
      55848,
      83684
    ],
    [
      318,
      181
    ],
    [
      466,
      -38
    ],
    [
      273,
      59
    ],
    [
      39,
      -123
    ],
    [
      148,
      -38
    ],
    [
      267,
      -287
    ]
  ],
  [
    [
      55848,
      83684
    ],
    [
      10,
      445
    ],
    [
      136,
      371
    ],
    [
      262,
      202
    ],
    [
      221,
      -442
    ],
    [
      223,
      12
    ],
    [
      53,
      453
    ]
  ],
  [
    [
      56753,
      84725
    ],
    [
      237,
      105
    ],
    [
      121,
      -73
    ],
    [
      239,
      -219
    ],
    [
      229,
      -1
    ]
  ],
  [
    [
      56753,
      84725
    ],
    [
      32,
      349
    ],
    [
      -102,
      -75
    ],
    [
      -176,
      210
    ],
    [
      -24,
      340
    ],
    [
      351,
      164
    ],
    [
      350,
      86
    ],
    [
      301,
      -97
    ],
    [
      287,
      17
    ]
  ],
  [
    [
      54171,
      80775
    ],
    [
      -124,
      -62
    ],
    [
      -73,
      68
    ],
    [
      -70,
      -113
    ],
    [
      -200,
      -114
    ],
    [
      -103,
      -147
    ],
    [
      -202,
      -129
    ],
    [
      49,
      -176
    ],
    [
      30,
      -249
    ],
    [
      141,
      -142
    ],
    [
      157,
      -254
    ]
  ],
  [
    [
      52665,
      78658
    ],
    [
      -298,
      181
    ],
    [
      -57,
      -128
    ],
    [
      -236,
      4
    ]
  ],
  [
    [
      51718,
      79804
    ],
    [
      16,
      259
    ],
    [
      -56,
      133
    ]
  ],
  [
    [
      51678,
      80196
    ],
    [
      32,
      400
    ]
  ],
  [
    [
      51710,
      80596
    ],
    [
      -47,
      619
    ],
    [
      167,
      0
    ],
    [
      70,
      222
    ],
    [
      69,
      541
    ],
    [
      -51,
      200
    ]
  ],
  [
    [
      51918,
      82178
    ],
    [
      54,
      125
    ],
    [
      232,
      32
    ],
    [
      52,
      -130
    ],
    [
      188,
      291
    ],
    [
      -63,
      222
    ],
    [
      -13,
      335
    ]
  ],
  [
    [
      52368,
      83053
    ],
    [
      210,
      -78
    ],
    [
      178,
      90
    ]
  ],
  [
    [
      52756,
      83065
    ],
    [
      4,
      -228
    ],
    [
      281,
      -138
    ],
    [
      -3,
      -210
    ],
    [
      283,
      111
    ],
    [
      156,
      162
    ],
    [
      313,
      -233
    ],
    [
      132,
      -189
    ]
  ],
  [
    [
      57932,
      76403
    ],
    [
      -144,
      -245
    ],
    [
      -101,
      -422
    ],
    [
      89,
      -337
    ]
  ],
  [
    [
      57776,
      75399
    ],
    [
      -239,
      79
    ],
    [
      -283,
      -186
    ]
  ],
  [
    [
      57254,
      75292
    ],
    [
      -3,
      -294
    ],
    [
      -252,
      -56
    ],
    [
      -196,
      206
    ],
    [
      -222,
      -162
    ],
    [
      -206,
      17
    ]
  ],
  [
    [
      56375,
      75003
    ],
    [
      -20,
      391
    ],
    [
      -139,
      189
    ]
  ],
  [
    [
      56216,
      75583
    ],
    [
      46,
      84
    ],
    [
      -30,
      70
    ],
    [
      47,
      188
    ],
    [
      105,
      185
    ],
    [
      -135,
      255
    ],
    [
      -24,
      216
    ],
    [
      68,
      134
    ]
  ],
  [
    [
      57302,
      71436
    ],
    [
      -35,
      -175
    ],
    [
      -400,
      -50
    ],
    [
      3,
      98
    ],
    [
      -339,
      115
    ],
    [
      52,
      251
    ],
    [
      152,
      -199
    ],
    [
      216,
      34
    ],
    [
      207,
      -42
    ],
    [
      -7,
      -103
    ],
    [
      151,
      71
    ]
  ],
  [
    [
      57254,
      75292
    ],
    [
      135,
      -157
    ],
    [
      -86,
      -369
    ],
    [
      -66,
      -67
    ]
  ],
  [
    [
      57237,
      74699
    ],
    [
      -169,
      17
    ],
    [
      -145,
      56
    ],
    [
      -336,
      -154
    ],
    [
      192,
      -332
    ],
    [
      -141,
      -96
    ],
    [
      -154,
      -1
    ],
    [
      -147,
      305
    ],
    [
      -52,
      -130
    ],
    [
      62,
      -353
    ],
    [
      139,
      -277
    ],
    [
      -105,
      -129
    ],
    [
      155,
      -273
    ],
    [
      137,
      -171
    ],
    [
      4,
      -334
    ],
    [
      -257,
      157
    ],
    [
      82,
      -302
    ],
    [
      -176,
      -62
    ],
    [
      105,
      -521
    ],
    [
      -184,
      -8
    ],
    [
      -228,
      257
    ],
    [
      -104,
      473
    ],
    [
      -49,
      393
    ],
    [
      -108,
      272
    ],
    [
      -143,
      337
    ],
    [
      -18,
      168
    ]
  ],
  [
    [
      55597,
      73991
    ],
    [
      129,
      287
    ],
    [
      16,
      192
    ],
    [
      91,
      85
    ],
    [
      5,
      155
    ]
  ],
  [
    [
      55838,
      74710
    ],
    [
      182,
      53
    ],
    [
      106,
      129
    ],
    [
      150,
      -12
    ],
    [
      46,
      103
    ],
    [
      53,
      20
    ]
  ],
  [
    [
      60041,
      71744
    ],
    [
      -102,
      268
    ],
    [
      105,
      222
    ],
    [
      -169,
      -51
    ],
    [
      -233,
      136
    ],
    [
      -191,
      -340
    ],
    [
      -421,
      -66
    ],
    [
      -225,
      317
    ],
    [
      -300,
      20
    ],
    [
      -64,
      -245
    ],
    [
      -192,
      -70
    ],
    [
      -268,
      314
    ],
    [
      -303,
      -11
    ],
    [
      -165,
      588
    ],
    [
      -203,
      328
    ],
    [
      135,
      459
    ],
    [
      -176,
      283
    ],
    [
      308,
      565
    ],
    [
      428,
      23
    ],
    [
      117,
      449
    ],
    [
      529,
      -78
    ],
    [
      334,
      383
    ],
    [
      324,
      167
    ],
    [
      459,
      13
    ],
    [
      485,
      -417
    ],
    [
      399,
      -228
    ],
    [
      323,
      91
    ],
    [
      239,
      -53
    ],
    [
      328,
      309
    ]
  ],
  [
    [
      61542,
      75120
    ],
    [
      296,
      28
    ],
    [
      268,
      -290
    ]
  ],
  [
    [
      57776,
      75399
    ],
    [
      33,
      -228
    ],
    [
      243,
      -190
    ],
    [
      -51,
      -145
    ],
    [
      -330,
      -33
    ],
    [
      -118,
      -182
    ],
    [
      -232,
      -319
    ],
    [
      -87,
      276
    ],
    [
      3,
      121
    ]
  ],
  [
    [
      55597,
      73991
    ],
    [
      -48,
      41
    ],
    [
      -5,
      130
    ],
    [
      -154,
      199
    ],
    [
      -24,
      281
    ],
    [
      23,
      403
    ],
    [
      38,
      184
    ],
    [
      -47,
      93
    ]
  ],
  [
    [
      55380,
      75322
    ],
    [
      -18,
      188
    ],
    [
      120,
      291
    ],
    [
      18,
      -111
    ],
    [
      75,
      52
    ]
  ],
  [
    [
      55575,
      75742
    ],
    [
      59,
      -159
    ],
    [
      66,
      -60
    ],
    [
      19,
      -214
    ]
  ],
  [
    [
      55719,
      75309
    ],
    [
      -35,
      -201
    ],
    [
      39,
      -254
    ],
    [
      115,
      -144
    ]
  ],
  [
    [
      55230,
      77704
    ],
    [
      67,
      -229
    ],
    [
      89,
      -169
    ],
    [
      -107,
      -222
    ]
  ],
  [
    [
      55279,
      77084
    ],
    [
      -126,
      131
    ],
    [
      -192,
      -8
    ],
    [
      -239,
      98
    ],
    [
      -130,
      -13
    ],
    [
      -60,
      -123
    ],
    [
      -99,
      136
    ],
    [
      -59,
      -245
    ],
    [
      136,
      -277
    ],
    [
      61,
      -183
    ],
    [
      127,
      -221
    ],
    [
      106,
      -130
    ],
    [
      105,
      -247
    ],
    [
      246,
      -224
    ]
  ],
  [
    [
      55155,
      75778
    ],
    [
      -31,
      -100
    ]
  ],
  [
    [
      55124,
      75678
    ],
    [
      -261,
      218
    ],
    [
      -161,
      213
    ],
    [
      -254,
      176
    ],
    [
      -233,
      434
    ],
    [
      56,
      45
    ],
    [
      -127,
      248
    ],
    [
      -5,
      200
    ],
    [
      -179,
      93
    ],
    [
      -85,
      -255
    ],
    [
      -82,
      198
    ],
    [
      6,
      205
    ],
    [
      10,
      9
    ]
  ],
  [
    [
      53809,
      77462
    ],
    [
      194,
      -20
    ],
    [
      51,
      100
    ],
    [
      94,
      -97
    ],
    [
      109,
      -11
    ],
    [
      -1,
      165
    ],
    [
      97,
      60
    ],
    [
      27,
      239
    ],
    [
      221,
      157
    ]
  ],
  [
    [
      52900,
      78285
    ],
    [
      -22,
      -242
    ],
    [
      -122,
      -100
    ],
    [
      -206,
      75
    ],
    [
      -60,
      -239
    ],
    [
      -132,
      -19
    ],
    [
      -48,
      94
    ],
    [
      -156,
      -200
    ],
    [
      -134,
      -28
    ],
    [
      -120,
      126
    ]
  ],
  [
    [
      51576,
      79843
    ],
    [
      30,
      331
    ],
    [
      72,
      22
    ]
  ],
  [
    [
      50698,
      80799
    ],
    [
      222,
      117
    ]
  ],
  [
    [
      50920,
      80916
    ],
    [
      204,
      -47
    ],
    [
      257,
      123
    ],
    [
      176,
      -258
    ],
    [
      153,
      -138
    ]
  ],
  [
    [
      50920,
      80916
    ],
    [
      143,
      162
    ],
    [
      244,
      869
    ],
    [
      380,
      248
    ],
    [
      231,
      -17
    ]
  ],
  [
    [
      47490,
      75324
    ],
    [
      101,
      150
    ],
    [
      113,
      86
    ],
    [
      70,
      -289
    ],
    [
      164,
      0
    ],
    [
      47,
      75
    ],
    [
      162,
      -21
    ],
    [
      78,
      -296
    ],
    [
      -129,
      -160
    ],
    [
      -3,
      -461
    ],
    [
      -45,
      -86
    ],
    [
      -11,
      -280
    ],
    [
      -120,
      -48
    ],
    [
      111,
      -355
    ],
    [
      -77,
      -388
    ],
    [
      96,
      -175
    ],
    [
      -38,
      -161
    ],
    [
      -103,
      -222
    ],
    [
      23,
      -195
    ]
  ],
  [
    [
      47929,
      72498
    ],
    [
      -112,
      -153
    ],
    [
      -146,
      83
    ],
    [
      -143,
      -65
    ],
    [
      42,
      462
    ],
    [
      -26,
      363
    ],
    [
      -124,
      55
    ],
    [
      -67,
      224
    ],
    [
      22,
      386
    ],
    [
      111,
      215
    ],
    [
      20,
      239
    ],
    [
      58,
      355
    ],
    [
      -6,
      250
    ],
    [
      -56,
      212
    ],
    [
      -12,
      200
    ]
  ],
  [
    [
      47490,
      75324
    ],
    [
      14,
      420
    ],
    [
      -114,
      257
    ],
    [
      393,
      426
    ],
    [
      340,
      -106
    ],
    [
      373,
      3
    ],
    [
      296,
      -101
    ],
    [
      230,
      31
    ],
    [
      449,
      -19
    ]
  ],
  [
    [
      50829,
      75674
    ],
    [
      15,
      -344
    ],
    [
      -263,
      -393
    ],
    [
      -356,
      -125
    ],
    [
      -25,
      -199
    ],
    [
      -171,
      -327
    ],
    [
      -107,
      -481
    ],
    [
      108,
      -338
    ],
    [
      -160,
      -263
    ],
    [
      -60,
      -384
    ],
    [
      -210,
      -118
    ],
    [
      -197,
      -454
    ],
    [
      -352,
      -9
    ],
    [
      -265,
      11
    ],
    [
      -174,
      -209
    ],
    [
      -106,
      -223
    ],
    [
      -136,
      49
    ],
    [
      -103,
      199
    ],
    [
      -79,
      340
    ],
    [
      -259,
      92
    ]
  ],
  [
    [
      48278,
      82406
    ],
    [
      46,
      -422
    ],
    [
      -210,
      -528
    ],
    [
      -493,
      -349
    ],
    [
      -393,
      89
    ],
    [
      225,
      617
    ],
    [
      -145,
      601
    ],
    [
      378,
      463
    ],
    [
      210,
      276
    ]
  ],
  [
    [
      47896,
      83153
    ],
    [
      57,
      -317
    ],
    [
      -57,
      -317
    ],
    [
      172,
      9
    ],
    [
      210,
      -122
    ]
  ],
  [
    [
      96049,
      38125
    ],
    [
      228,
      -366
    ],
    [
      144,
      -272
    ],
    [
      -105,
      -142
    ],
    [
      -153,
      160
    ],
    [
      -199,
      266
    ],
    [
      -179,
      313
    ],
    [
      -184,
      416
    ],
    [
      -38,
      201
    ],
    [
      119,
      -9
    ],
    [
      156,
      -201
    ],
    [
      122,
      -200
    ],
    [
      89,
      -166
    ]
  ],
  [
    [
      95032,
      44386
    ],
    [
      78,
      -203
    ],
    [
      -194,
      4
    ],
    [
      -106,
      363
    ],
    [
      166,
      -142
    ],
    [
      56,
      -22
    ]
  ],
  [
    [
      94910,
      44908
    ],
    [
      -42,
      -109
    ],
    [
      -206,
      512
    ],
    [
      -57,
      353
    ],
    [
      94,
      0
    ],
    [
      100,
      -473
    ],
    [
      111,
      -283
    ]
  ],
  [
    [
      94680,
      44747
    ],
    [
      -108,
      -14
    ],
    [
      -170,
      60
    ],
    [
      -58,
      91
    ],
    [
      17,
      235
    ],
    [
      183,
      -93
    ],
    [
      91,
      -124
    ],
    [
      45,
      -155
    ]
  ],
  [
    [
      94344,
      45841
    ],
    [
      65,
      -187
    ],
    [
      12,
      -119
    ],
    [
      -218,
      251
    ],
    [
      -152,
      212
    ],
    [
      -104,
      197
    ],
    [
      41,
      60
    ],
    [
      128,
      -142
    ],
    [
      228,
      -272
    ]
  ],
  [
    [
      93649,
      46431
    ],
    [
      111,
      -193
    ],
    [
      -56,
      -33
    ],
    [
      -121,
      134
    ],
    [
      -114,
      243
    ],
    [
      14,
      99
    ],
    [
      166,
      -250
    ]
  ],
  [
    [
      99134,
      26908
    ],
    [
      -105,
      -319
    ],
    [
      -138,
      -404
    ],
    [
      -214,
      -236
    ],
    [
      -48,
      155
    ],
    [
      -116,
      85
    ],
    [
      160,
      486
    ],
    [
      -91,
      326
    ],
    [
      -299,
      236
    ],
    [
      8,
      214
    ],
    [
      201,
      206
    ],
    [
      47,
      455
    ],
    [
      -13,
      382
    ],
    [
      -113,
      396
    ],
    [
      8,
      104
    ],
    [
      -133,
      244
    ],
    [
      -218,
      523
    ],
    [
      -117,
      418
    ],
    [
      104,
      46
    ],
    [
      151,
      -328
    ],
    [
      216,
      -153
    ],
    [
      78,
      -526
    ],
    [
      202,
      -622
    ],
    [
      5,
      403
    ],
    [
      126,
      -161
    ],
    [
      41,
      -447
    ],
    [
      224,
      -192
    ],
    [
      188,
      -48
    ],
    [
      158,
      226
    ],
    [
      141,
      -69
    ],
    [
      -67,
      -524
    ],
    [
      -85,
      -345
    ],
    [
      -212,
      12
    ],
    [
      -74,
      -179
    ],
    [
      26,
      -254
    ],
    [
      -41,
      -110
    ]
  ],
  [
    [
      97129,
      24846
    ],
    [
      238,
      310
    ],
    [
      167,
      306
    ],
    [
      123,
      441
    ],
    [
      106,
      149
    ],
    [
      41,
      330
    ],
    [
      195,
      273
    ],
    [
      61,
      -251
    ],
    [
      63,
      -244
    ],
    [
      198,
      239
    ],
    [
      80,
      -249
    ],
    [
      0,
      -249
    ],
    [
      -103,
      -274
    ],
    [
      -182,
      -435
    ],
    [
      -142,
      -238
    ],
    [
      103,
      -284
    ],
    [
      -214,
      -7
    ],
    [
      -238,
      -223
    ],
    [
      -75,
      -387
    ],
    [
      -157,
      -597
    ],
    [
      -219,
      -264
    ],
    [
      -138,
      -169
    ],
    [
      -256,
      13
    ],
    [
      -180,
      194
    ],
    [
      -302,
      42
    ],
    [
      -46,
      217
    ],
    [
      149,
      438
    ],
    [
      349,
      583
    ],
    [
      179,
      111
    ],
    [
      200,
      225
    ]
  ],
  [
    [
      91024,
      26469
    ],
    [
      166,
      -39
    ],
    [
      20,
      -702
    ],
    [
      -95,
      -203
    ],
    [
      -29,
      -476
    ],
    [
      -97,
      162
    ],
    [
      -193,
      -412
    ],
    [
      -57,
      32
    ],
    [
      -171,
      19
    ],
    [
      -171,
      505
    ],
    [
      -38,
      390
    ],
    [
      -160,
      515
    ],
    [
      7,
      271
    ],
    [
      181,
      -52
    ],
    [
      269,
      -204
    ],
    [
      151,
      81
    ],
    [
      217,
      113
    ]
  ],
  [
    [
      85040,
      31546
    ],
    [
      -294,
      -303
    ],
    [
      -241,
      -137
    ],
    [
      -53,
      -309
    ],
    [
      -103,
      -240
    ],
    [
      -236,
      -15
    ],
    [
      -174,
      -52
    ],
    [
      -246,
      107
    ],
    [
      -199,
      -64
    ],
    [
      -191,
      -27
    ],
    [
      -165,
      -315
    ],
    [
      -81,
      26
    ],
    [
      -140,
      -167
    ],
    [
      -133,
      -187
    ],
    [
      -203,
      23
    ],
    [
      -186,
      0
    ],
    [
      -295,
      377
    ],
    [
      -149,
      113
    ],
    [
      6,
      338
    ],
    [
      138,
      81
    ],
    [
      47,
      134
    ],
    [
      -10,
      212
    ],
    [
      34,
      411
    ],
    [
      -31,
      350
    ],
    [
      -147,
      598
    ],
    [
      -45,
      337
    ],
    [
      12,
      336
    ],
    [
      -111,
      385
    ],
    [
      -7,
      174
    ],
    [
      -123,
      235
    ],
    [
      -35,
      463
    ],
    [
      -158,
      467
    ],
    [
      -39,
      252
    ],
    [
      122,
      -255
    ],
    [
      -93,
      548
    ],
    [
      137,
      -171
    ],
    [
      83,
      -229
    ],
    [
      -5,
      303
    ],
    [
      -138,
      465
    ],
    [
      -26,
      186
    ],
    [
      -65,
      177
    ],
    [
      31,
      341
    ],
    [
      56,
      146
    ],
    [
      38,
      295
    ],
    [
      -29,
      346
    ],
    [
      114,
      425
    ],
    [
      21,
      -450
    ],
    [
      118,
      406
    ],
    [
      225,
      198
    ],
    [
      136,
      252
    ],
    [
      212,
      217
    ],
    [
      126,
      46
    ],
    [
      77,
      -73
    ],
    [
      219,
      220
    ],
    [
      168,
      66
    ],
    [
      42,
      129
    ],
    [
      74,
      54
    ],
    [
      153,
      -14
    ],
    [
      292,
      173
    ],
    [
      151,
      262
    ],
    [
      71,
      316
    ],
    [
      163,
      300
    ],
    [
      13,
      236
    ],
    [
      7,
      321
    ],
    [
      194,
      502
    ],
    [
      117,
      -510
    ],
    [
      119,
      118
    ],
    [
      -99,
      279
    ],
    [
      87,
      287
    ],
    [
      122,
      -128
    ],
    [
      34,
      449
    ],
    [
      152,
      291
    ],
    [
      67,
      233
    ],
    [
      140,
      101
    ],
    [
      4,
      165
    ],
    [
      122,
      -69
    ],
    [
      5,
      148
    ],
    [
      122,
      85
    ],
    [
      134,
      80
    ],
    [
      205,
      -271
    ],
    [
      155,
      -350
    ],
    [
      173,
      -4
    ],
    [
      177,
      -56
    ],
    [
      -59,
      325
    ],
    [
      133,
      473
    ],
    [
      126,
      155
    ],
    [
      -44,
      147
    ],
    [
      121,
      338
    ],
    [
      168,
      208
    ],
    [
      142,
      -70
    ],
    [
      234,
      111
    ],
    [
      -5,
      302
    ],
    [
      -204,
      195
    ],
    [
      148,
      86
    ],
    [
      184,
      -147
    ],
    [
      148,
      -242
    ],
    [
      234,
      -151
    ],
    [
      79,
      60
    ],
    [
      172,
      -182
    ],
    [
      162,
      169
    ],
    [
      105,
      -51
    ],
    [
      65,
      113
    ],
    [
      127,
      -292
    ],
    [
      -74,
      -316
    ],
    [
      -105,
      -239
    ],
    [
      -96,
      -20
    ],
    [
      32,
      -236
    ],
    [
      -81,
      -295
    ],
    [
      -99,
      -291
    ],
    [
      20,
      -166
    ],
    [
      221,
      -327
    ],
    [
      214,
      -189
    ],
    [
      143,
      -204
    ],
    [
      201,
      -350
    ],
    [
      78,
      1
    ],
    [
      145,
      -151
    ],
    [
      43,
      -183
    ],
    [
      265,
      -200
    ],
    [
      183,
      202
    ],
    [
      55,
      317
    ],
    [
      56,
      262
    ],
    [
      34,
      324
    ],
    [
      85,
      470
    ],
    [
      -39,
      286
    ],
    [
      20,
      171
    ],
    [
      -32,
      339
    ],
    [
      37,
      445
    ],
    [
      53,
      120
    ],
    [
      -43,
      197
    ],
    [
      67,
      313
    ],
    [
      52,
      325
    ],
    [
      7,
      168
    ],
    [
      104,
      222
    ],
    [
      78,
      -289
    ],
    [
      19,
      -371
    ],
    [
      70,
      -71
    ],
    [
      11,
      -249
    ],
    [
      101,
      -300
    ],
    [
      21,
      -335
    ],
    [
      -10,
      -214
    ],
    [
      100,
      -464
    ],
    [
      179,
      223
    ],
    [
      92,
      -250
    ],
    [
      133,
      -231
    ],
    [
      -29,
      -262
    ],
    [
      60,
      -506
    ],
    [
      42,
      -295
    ],
    [
      70,
      -72
    ],
    [
      75,
      -505
    ],
    [
      -27,
      -307
    ],
    [
      90,
      -400
    ],
    [
      301,
      -309
    ],
    [
      197,
      -281
    ],
    [
      186,
      -257
    ],
    [
      -37,
      -143
    ],
    [
      159,
      -371
    ],
    [
      108,
      -639
    ],
    [
      111,
      130
    ],
    [
      113,
      -256
    ],
    [
      68,
      91
    ],
    [
      48,
      -626
    ],
    [
      197,
      -363
    ],
    [
      129,
      -226
    ],
    [
      217,
      -478
    ],
    [
      78,
      -475
    ],
    [
      7,
      -337
    ],
    [
      -19,
      -365
    ],
    [
      132,
      -502
    ],
    [
      -16,
      -523
    ],
    [
      -48,
      -274
    ],
    [
      -75,
      -527
    ],
    [
      6,
      -339
    ],
    [
      -55,
      -423
    ],
    [
      -123,
      -538
    ],
    [
      -205,
      -290
    ],
    [
      -102,
      -458
    ],
    [
      -93,
      -292
    ],
    [
      -82,
      -510
    ],
    [
      -107,
      -294
    ],
    [
      -70,
      -442
    ],
    [
      -36,
      -407
    ],
    [
      14,
      -187
    ],
    [
      -159,
      -205
    ],
    [
      -311,
      -22
    ],
    [
      -257,
      -242
    ],
    [
      -127,
      -229
    ],
    [
      -168,
      -254
    ],
    [
      -230,
      262
    ],
    [
      -170,
      104
    ],
    [
      43,
      308
    ],
    [
      -152,
      -112
    ],
    [
      -243,
      -428
    ],
    [
      -240,
      160
    ],
    [
      -158,
      94
    ],
    [
      -159,
      42
    ],
    [
      -269,
      171
    ],
    [
      -179,
      364
    ],
    [
      -52,
      449
    ],
    [
      -64,
      298
    ],
    [
      -137,
      240
    ],
    [
      -267,
      71
    ],
    [
      91,
      287
    ],
    [
      -67,
      438
    ],
    [
      -136,
      -408
    ],
    [
      -247,
      -109
    ],
    [
      146,
      327
    ],
    [
      42,
      341
    ],
    [
      107,
      289
    ],
    [
      -22,
      438
    ],
    [
      -226,
      -504
    ],
    [
      -174,
      -202
    ],
    [
      -106,
      -470
    ],
    [
      -217,
      243
    ],
    [
      9,
      313
    ],
    [
      -174,
      429
    ],
    [
      -147,
      221
    ],
    [
      52,
      137
    ],
    [
      -356,
      358
    ],
    [
      -195,
      17
    ],
    [
      -267,
      287
    ],
    [
      -498,
      -56
    ],
    [
      -359,
      -211
    ],
    [
      -317,
      -197
    ],
    [
      -265,
      39
    ]
  ],
  [
    [
      72718,
      55024
    ],
    [
      -42,
      -615
    ],
    [
      -116,
      -168
    ],
    [
      -242,
      -135
    ],
    [
      -132,
      470
    ],
    [
      -49,
      849
    ],
    [
      126,
      959
    ],
    [
      192,
      -328
    ],
    [
      129,
      -416
    ],
    [
      134,
      -616
    ]
  ],
  [
    [
      80409,
      61331
    ],
    [
      -228,
      183
    ],
    [
      -8,
      509
    ],
    [
      137,
      267
    ],
    [
      304,
      166
    ],
    [
      159,
      -14
    ],
    [
      62,
      -226
    ],
    [
      -122,
      -260
    ],
    [
      -64,
      -341
    ],
    [
      -240,
      -284
    ]
  ],
  [
    [
      84517,
      74170
    ],
    [
      -388,
      -171
    ],
    [
      -204,
      -277
    ],
    [
      -300,
      -161
    ],
    [
      148,
      274
    ],
    [
      -58,
      230
    ],
    [
      220,
      397
    ],
    [
      -147,
      310
    ],
    [
      -242,
      -209
    ],
    [
      -314,
      -411
    ],
    [
      -171,
      -381
    ],
    [
      -272,
      -29
    ],
    [
      -142,
      -275
    ],
    [
      147,
      -400
    ],
    [
      227,
      -97
    ],
    [
      9,
      -265
    ],
    [
      220,
      -173
    ],
    [
      311,
      422
    ],
    [
      247,
      -230
    ],
    [
      179,
      -15
    ],
    [
      45,
      -310
    ],
    [
      -393,
      -165
    ],
    [
      -130,
      -319
    ],
    [
      -270,
      -296
    ],
    [
      -142,
      -414
    ],
    [
      299,
      -325
    ],
    [
      109,
      -581
    ],
    [
      169,
      -541
    ],
    [
      189,
      -454
    ],
    [
      -5,
      -439
    ],
    [
      -174,
      -161
    ],
    [
      66,
      -315
    ],
    [
      164,
      -184
    ],
    [
      -43,
      -481
    ],
    [
      -71,
      -468
    ],
    [
      -155,
      -53
    ],
    [
      -203,
      -640
    ],
    [
      -225,
      -775
    ],
    [
      -258,
      -705
    ],
    [
      -382,
      -545
    ],
    [
      -386,
      -498
    ],
    [
      -313,
      -68
    ],
    [
      -170,
      -262
    ],
    [
      -96,
      192
    ],
    [
      -157,
      -294
    ],
    [
      -388,
      -296
    ],
    [
      -294,
      -90
    ],
    [
      -95,
      -624
    ],
    [
      -154,
      -35
    ],
    [
      -73,
      429
    ],
    [
      66,
      228
    ],
    [
      -373,
      189
    ],
    [
      -131,
      -96
    ]
  ],
  [
    [
      83826,
      64992
    ],
    [
      -167,
      -947
    ],
    [
      -119,
      -485
    ],
    [
      -146,
      499
    ],
    [
      -32,
      438
    ],
    [
      163,
      581
    ],
    [
      223,
      447
    ],
    [
      127,
      -176
    ],
    [
      -49,
      -357
    ]
  ],
  [
    [
      53835,
      78058
    ],
    [
      -31,
      -291
    ],
    [
      67,
      -251
    ]
  ],
  [
    [
      53871,
      77516
    ],
    [
      -221,
      86
    ],
    [
      -226,
      -210
    ],
    [
      15,
      -293
    ],
    [
      -34,
      -168
    ],
    [
      91,
      -301
    ],
    [
      261,
      -298
    ],
    [
      140,
      -488
    ],
    [
      309,
      -476
    ],
    [
      217,
      3
    ],
    [
      68,
      -130
    ],
    [
      -78,
      -118
    ],
    [
      249,
      -214
    ],
    [
      204,
      -178
    ],
    [
      238,
      -308
    ],
    [
      29,
      -111
    ],
    [
      -52,
      -211
    ],
    [
      -154,
      276
    ],
    [
      -242,
      97
    ],
    [
      -116,
      -382
    ],
    [
      200,
      -219
    ],
    [
      -33,
      -309
    ],
    [
      -116,
      -35
    ],
    [
      -148,
      -506
    ],
    [
      -116,
      -46
    ],
    [
      1,
      181
    ],
    [
      57,
      317
    ],
    [
      60,
      126
    ],
    [
      -108,
      342
    ],
    [
      -85,
      298
    ],
    [
      -115,
      74
    ],
    [
      -82,
      255
    ],
    [
      -179,
      107
    ],
    [
      -120,
      238
    ],
    [
      -206,
      38
    ],
    [
      -217,
      267
    ],
    [
      -254,
      384
    ],
    [
      -189,
      340
    ],
    [
      -86,
      585
    ],
    [
      -138,
      68
    ],
    [
      -226,
      195
    ],
    [
      -128,
      -80
    ],
    [
      -161,
      -274
    ],
    [
      -115,
      -43
    ]
  ],
  [
    [
      54100,
      73116
    ],
    [
      211,
      51
    ],
    [
      -100,
      -465
    ],
    [
      41,
      -183
    ],
    [
      -58,
      -303
    ],
    [
      -213,
      222
    ],
    [
      -141,
      64
    ],
    [
      -387,
      300
    ],
    [
      38,
      304
    ],
    [
      325,
      -54
    ],
    [
      284,
      64
    ]
  ],
  [
    [
      52419,
      74744
    ],
    [
      139,
      183
    ],
    [
      166,
      -419
    ],
    [
      -39,
      -782
    ],
    [
      -126,
      38
    ],
    [
      -113,
      -197
    ],
    [
      -105,
      156
    ],
    [
      -11,
      713
    ],
    [
      -64,
      338
    ],
    [
      153,
      -30
    ]
  ],
  [
    [
      52368,
      83053
    ],
    [
      -113,
      328
    ],
    [
      -8,
      604
    ],
    [
      46,
      159
    ],
    [
      80,
      177
    ],
    [
      244,
      37
    ],
    [
      98,
      163
    ],
    [
      223,
      167
    ],
    [
      -9,
      -304
    ],
    [
      -82,
      -192
    ],
    [
      33,
      -166
    ],
    [
      151,
      -89
    ],
    [
      -68,
      -223
    ],
    [
      -83,
      64
    ],
    [
      -200,
      -425
    ],
    [
      76,
      -288
    ]
  ],
  [
    [
      53436,
      83731
    ],
    [
      88,
      -296
    ],
    [
      -166,
      -478
    ],
    [
      -291,
      333
    ],
    [
      -39,
      246
    ],
    [
      408,
      195
    ]
  ],
  [
    [
      47896,
      83153
    ],
    [
      233,
      24
    ],
    [
      298,
      -365
    ],
    [
      -149,
      -406
    ]
  ],
  [
    [
      49140,
      82132
    ],
    [
      1,
      0
    ],
    [
      40,
      343
    ],
    [
      -186,
      364
    ],
    [
      -4,
      8
    ],
    [
      -337,
      104
    ],
    [
      -66,
      160
    ],
    [
      101,
      264
    ],
    [
      -92,
      163
    ],
    [
      -149,
      -279
    ],
    [
      -17,
      569
    ],
    [
      -140,
      301
    ],
    [
      101,
      611
    ],
    [
      216,
      480
    ],
    [
      222,
      -47
    ],
    [
      335,
      49
    ],
    [
      -297,
      -639
    ],
    [
      283,
      81
    ],
    [
      304,
      -3
    ],
    [
      -72,
      -481
    ],
    [
      -250,
      -530
    ],
    [
      287,
      -38
    ],
    [
      22,
      -62
    ],
    [
      248,
      -697
    ],
    [
      190,
      -95
    ],
    [
      171,
      -673
    ],
    [
      79,
      -233
    ],
    [
      337,
      -113
    ],
    [
      -34,
      -378
    ],
    [
      -142,
      -173
    ],
    [
      111,
      -305
    ],
    [
      -250,
      -310
    ],
    [
      -371,
      6
    ],
    [
      -473,
      -163
    ],
    [
      -130,
      116
    ],
    [
      -183,
      -276
    ],
    [
      -257,
      67
    ],
    [
      -195,
      -226
    ],
    [
      -148,
      118
    ],
    [
      407,
      621
    ],
    [
      249,
      127
    ],
    [
      -2,
      1
    ],
    [
      -434,
      98
    ],
    [
      -79,
      235
    ],
    [
      291,
      183
    ],
    [
      -152,
      319
    ],
    [
      52,
      387
    ],
    [
      413,
      -54
    ]
  ],
  [
    [
      45969,
      89843
    ],
    [
      -64,
      -382
    ],
    [
      314,
      -403
    ],
    [
      -361,
      -451
    ],
    [
      -801,
      -405
    ],
    [
      -240,
      -107
    ],
    [
      -365,
      87
    ],
    [
      -775,
      187
    ],
    [
      273,
      261
    ],
    [
      -605,
      289
    ],
    [
      492,
      114
    ],
    [
      -12,
      174
    ],
    [
      -583,
      137
    ],
    [
      188,
      385
    ],
    [
      421,
      87
    ],
    [
      433,
      -400
    ],
    [
      422,
      321
    ],
    [
      349,
      -167
    ],
    [
      453,
      315
    ],
    [
      461,
      -42
    ]
  ],
  [
    [
      63495,
      75281
    ],
    [
      146,
      -311
    ],
    [
      141,
      -419
    ],
    [
      130,
      -28
    ],
    [
      85,
      -159
    ],
    [
      -228,
      -47
    ],
    [
      -49,
      -459
    ],
    [
      -48,
      -207
    ],
    [
      -101,
      -138
    ],
    [
      7,
      -293
    ]
  ],
  [
    [
      62492,
      74950
    ],
    [
      68,
      96
    ],
    [
      207,
      -169
    ],
    [
      149,
      -36
    ],
    [
      38,
      70
    ],
    [
      -136,
      319
    ],
    [
      72,
      82
    ]
  ],
  [
    [
      61542,
      75120
    ],
    [
      42,
      252
    ],
    [
      -70,
      403
    ],
    [
      -160,
      218
    ],
    [
      -154,
      68
    ],
    [
      -102,
      181
    ]
  ],
  [
    [
      83564,
      58086
    ],
    [
      -142,
      450
    ],
    [
      238,
      -22
    ],
    [
      97,
      -213
    ],
    [
      -74,
      -510
    ],
    [
      -119,
      295
    ]
  ],
  [
    [
      84051,
      56477
    ],
    [
      70,
      165
    ],
    [
      30,
      367
    ],
    [
      153,
      35
    ],
    [
      -44,
      -398
    ],
    [
      205,
      570
    ],
    [
      -26,
      -563
    ],
    [
      -100,
      -195
    ],
    [
      -87,
      -373
    ],
    [
      -87,
      -175
    ],
    [
      -171,
      409
    ],
    [
      57,
      158
    ]
  ],
  [
    [
      85104,
      55551
    ],
    [
      28,
      -392
    ],
    [
      16,
      -332
    ],
    [
      -94,
      -540
    ],
    [
      -102,
      602
    ],
    [
      -130,
      -300
    ],
    [
      89,
      -435
    ],
    [
      -79,
      -277
    ],
    [
      -327,
      343
    ],
    [
      -78,
      428
    ],
    [
      84,
      280
    ],
    [
      -176,
      280
    ],
    [
      -87,
      -245
    ],
    [
      -131,
      23
    ],
    [
      -205,
      -330
    ],
    [
      -46,
      173
    ],
    [
      109,
      498
    ],
    [
      175,
      166
    ],
    [
      151,
      223
    ],
    [
      98,
      -268
    ],
    [
      212,
      162
    ],
    [
      45,
      264
    ],
    [
      196,
      15
    ],
    [
      -16,
      457
    ],
    [
      225,
      -280
    ],
    [
      23,
      -297
    ],
    [
      20,
      -218
    ]
  ],
  [
    [
      82917,
      56084
    ],
    [
      -369,
      -561
    ],
    [
      136,
      414
    ],
    [
      200,
      364
    ],
    [
      167,
      409
    ],
    [
      146,
      587
    ],
    [
      49,
      -482
    ],
    [
      -183,
      -325
    ],
    [
      -146,
      -406
    ]
  ],
  [
    [
      83982,
      61347
    ],
    [
      -46,
      -245
    ],
    [
      95,
      -423
    ],
    [
      -73,
      -491
    ],
    [
      -164,
      -196
    ],
    [
      -43,
      -476
    ],
    [
      62,
      -471
    ],
    [
      147,
      -65
    ],
    [
      123,
      70
    ],
    [
      347,
      -328
    ],
    [
      -27,
      -321
    ],
    [
      91,
      -142
    ],
    [
      -29,
      -272
    ],
    [
      -216,
      290
    ],
    [
      -103,
      310
    ],
    [
      -71,
      -217
    ],
    [
      -177,
      354
    ],
    [
      -253,
      -87
    ],
    [
      -138,
      130
    ],
    [
      14,
      244
    ],
    [
      87,
      151
    ],
    [
      -83,
      136
    ],
    [
      -36,
      -213
    ],
    [
      -137,
      340
    ],
    [
      -41,
      257
    ],
    [
      -11,
      566
    ],
    [
      112,
      -195
    ],
    [
      29,
      925
    ],
    [
      90,
      535
    ],
    [
      169,
      -1
    ],
    [
      171,
      -168
    ],
    [
      85,
      153
    ],
    [
      26,
      -150
    ]
  ],
  [
    [
      83899,
      57324
    ],
    [
      -43,
      282
    ],
    [
      166,
      -183
    ],
    [
      177,
      1
    ],
    [
      -5,
      -247
    ],
    [
      -129,
      -251
    ],
    [
      -176,
      -178
    ],
    [
      -10,
      275
    ],
    [
      20,
      301
    ]
  ],
  [
    [
      84861,
      57766
    ],
    [
      78,
      -660
    ],
    [
      -214,
      157
    ],
    [
      5,
      -199
    ],
    [
      68,
      -364
    ],
    [
      -132,
      -133
    ],
    [
      -11,
      416
    ],
    [
      -84,
      31
    ],
    [
      -43,
      357
    ],
    [
      163,
      -47
    ],
    [
      -4,
      224
    ],
    [
      -169,
      451
    ],
    [
      266,
      -13
    ],
    [
      77,
      -220
    ]
  ],
  [
    [
      78372,
      54256
    ],
    [
      64,
      -56
    ],
    [
      164,
      -356
    ],
    [
      116,
      -396
    ],
    [
      16,
      -398
    ],
    [
      -29,
      -269
    ],
    [
      27,
      -203
    ],
    [
      20,
      -349
    ],
    [
      98,
      -163
    ],
    [
      109,
      -523
    ],
    [
      -5,
      -199
    ],
    [
      -197,
      -40
    ],
    [
      -263,
      438
    ],
    [
      -329,
      469
    ],
    [
      -32,
      301
    ],
    [
      -161,
      395
    ],
    [
      -38,
      489
    ],
    [
      -100,
      322
    ],
    [
      30,
      431
    ],
    [
      -61,
      250
    ]
  ],
  [
    [
      80461,
      51765
    ],
    [
      204,
      -202
    ],
    [
      214,
      110
    ],
    [
      56,
      500
    ],
    [
      119,
      112
    ],
    [
      333,
      128
    ],
    [
      199,
      467
    ],
    [
      137,
      374
    ]
  ],
  [
    [
      81723,
      53254
    ],
    [
      126,
      -307
    ],
    [
      58,
      202
    ],
    [
      133,
      -19
    ],
    [
      16,
      377
    ],
    [
      13,
      291
    ]
  ],
  [
    [
      82069,
      53798
    ],
    [
      214,
      411
    ],
    [
      140,
      462
    ],
    [
      112,
      2
    ],
    [
      143,
      -299
    ],
    [
      13,
      -257
    ],
    [
      183,
      -165
    ],
    [
      231,
      -177
    ],
    [
      -20,
      -232
    ],
    [
      -186,
      -29
    ],
    [
      50,
      -289
    ],
    [
      -205,
      -201
    ]
  ],
  [
    [
      81723,
      53254
    ],
    [
      110,
      221
    ],
    [
      236,
      323
    ]
  ],
  [
    [
      53809,
      77462
    ],
    [
      62,
      54
    ]
  ],
  [
    [
      57797,
      86326
    ],
    [
      -504,
      -47
    ],
    [
      -489,
      -216
    ],
    [
      -452,
      -125
    ],
    [
      -161,
      323
    ],
    [
      -269,
      193
    ],
    [
      62,
      582
    ],
    [
      -135,
      533
    ],
    [
      133,
      345
    ],
    [
      252,
      371
    ],
    [
      635,
      640
    ],
    [
      185,
      124
    ],
    [
      -28,
      250
    ],
    [
      -387,
      279
    ]
  ],
  [
    [
      54711,
      79292
    ],
    [
      39,
      130
    ],
    [
      123,
      -10
    ],
    [
      95,
      61
    ],
    [
      7,
      55
    ],
    [
      54,
      28
    ],
    [
      18,
      134
    ],
    [
      64,
      26
    ],
    [
      43,
      106
    ],
    [
      82,
      1
    ]
  ],
  [
    [
      60669,
      61213
    ],
    [
      161,
      -684
    ],
    [
      77,
      -542
    ],
    [
      152,
      -288
    ],
    [
      379,
      -558
    ],
    [
      154,
      -336
    ],
    [
      151,
      -341
    ],
    [
      87,
      -203
    ],
    [
      136,
      -178
    ]
  ],
  [
    [
      61966,
      58083
    ],
    [
      -83,
      -144
    ],
    [
      -119,
      51
    ]
  ],
  [
    [
      61764,
      57990
    ],
    [
      -95,
      191
    ],
    [
      -114,
      346
    ],
    [
      -124,
      190
    ],
    [
      -71,
      204
    ],
    [
      -242,
      237
    ],
    [
      -191,
      7
    ],
    [
      -67,
      124
    ],
    [
      -163,
      -139
    ],
    [
      -168,
      268
    ],
    [
      -87,
      -441
    ],
    [
      -323,
      124
    ]
  ],
  [
    [
      89411,
      73729
    ],
    [
      -256,
      -595
    ],
    [
      4,
      -610
    ],
    [
      -104,
      -472
    ],
    [
      48,
      -296
    ],
    [
      -145,
      -416
    ],
    [
      -355,
      -278
    ],
    [
      -488,
      -36
    ],
    [
      -396,
      -675
    ],
    [
      -186,
      227
    ],
    [
      -12,
      442
    ],
    [
      -483,
      -130
    ],
    [
      -329,
      -279
    ],
    [
      -325,
      -11
    ],
    [
      282,
      -435
    ],
    [
      -186,
      -1004
    ],
    [
      -179,
      -248
    ],
    [
      -135,
      229
    ],
    [
      69,
      533
    ],
    [
      -176,
      172
    ],
    [
      -113,
      405
    ],
    [
      263,
      182
    ],
    [
      145,
      371
    ],
    [
      280,
      306
    ],
    [
      203,
      403
    ],
    [
      553,
      177
    ],
    [
      297,
      -121
    ],
    [
      291,
      1050
    ],
    [
      185,
      -282
    ],
    [
      408,
      591
    ],
    [
      158,
      229
    ],
    [
      174,
      723
    ],
    [
      -47,
      664
    ],
    [
      117,
      374
    ],
    [
      295,
      108
    ],
    [
      152,
      -819
    ],
    [
      -9,
      -479
    ]
  ],
  [
    [
      90169,
      76553
    ],
    [
      197,
      250
    ],
    [
      62,
      -663
    ],
    [
      -412,
      -162
    ],
    [
      -244,
      -587
    ],
    [
      -436,
      404
    ],
    [
      -152,
      -646
    ],
    [
      -308,
      -9
    ],
    [
      -39,
      587
    ],
    [
      138,
      455
    ],
    [
      296,
      33
    ],
    [
      81,
      817
    ],
    [
      83,
      460
    ],
    [
      326,
      -615
    ],
    [
      213,
      -198
    ],
    [
      195,
      -126
    ]
  ],
  [
    [
      86769,
      70351
    ],
    [
      154,
      352
    ],
    [
      158,
      -68
    ],
    [
      114,
      248
    ],
    [
      204,
      -127
    ],
    [
      35,
      -203
    ],
    [
      -156,
      -357
    ],
    [
      -114,
      189
    ],
    [
      -143,
      -137
    ],
    [
      -73,
      -346
    ],
    [
      -181,
      168
    ],
    [
      2,
      281
    ]
  ],
  [
    [
      64752,
      60417
    ],
    [
      -201,
      -158
    ],
    [
      -54,
      -263
    ],
    [
      -6,
      -201
    ],
    [
      -277,
      -249
    ],
    [
      -444,
      -276
    ],
    [
      -249,
      -417
    ],
    [
      -122,
      -33
    ],
    [
      -83,
      35
    ],
    [
      -163,
      -245
    ],
    [
      -177,
      -114
    ],
    [
      -233,
      -30
    ],
    [
      -70,
      -34
    ],
    [
      -61,
      -156
    ],
    [
      -73,
      -43
    ],
    [
      -43,
      -150
    ],
    [
      -137,
      13
    ],
    [
      -89,
      -80
    ],
    [
      -192,
      30
    ],
    [
      -72,
      345
    ],
    [
      8,
      323
    ],
    [
      -46,
      174
    ],
    [
      -54,
      437
    ],
    [
      -80,
      243
    ],
    [
      56,
      29
    ],
    [
      -29,
      270
    ],
    [
      34,
      114
    ],
    [
      -12,
      257
    ]
  ],
  [
    [
      61883,
      60238
    ],
    [
      121,
      189
    ],
    [
      -28,
      249
    ],
    [
      74,
      290
    ],
    [
      114,
      -153
    ],
    [
      75,
      53
    ],
    [
      321,
      14
    ],
    [
      50,
      -59
    ],
    [
      269,
      -60
    ],
    [
      106,
      30
    ],
    [
      70,
      -197
    ],
    [
      130,
      99
    ],
    [
      199,
      620
    ],
    [
      259,
      266
    ],
    [
      801,
      226
    ]
  ],
  [
    [
      63448,
      67449
    ],
    [
      109,
      -510
    ],
    [
      137,
      -135
    ],
    [
      47,
      -207
    ],
    [
      190,
      -249
    ],
    [
      16,
      -243
    ],
    [
      -27,
      -197
    ],
    [
      35,
      -199
    ],
    [
      80,
      -165
    ],
    [
      37,
      -194
    ],
    [
      41,
      -145
    ]
  ],
  [
    [
      64274,
      65130
    ],
    [
      53,
      -226
    ]
  ],
  [
    [
      61883,
      60238
    ],
    [
      -37,
      252
    ],
    [
      -83,
      178
    ],
    [
      -22,
      236
    ],
    [
      -143,
      212
    ],
    [
      -148,
      495
    ],
    [
      -79,
      482
    ],
    [
      -192,
      406
    ],
    [
      -124,
      97
    ],
    [
      -184,
      563
    ],
    [
      -32,
      411
    ],
    [
      12,
      350
    ],
    [
      -159,
      655
    ],
    [
      -130,
      231
    ],
    [
      -150,
      122
    ],
    [
      -92,
      339
    ],
    [
      15,
      133
    ],
    [
      -77,
      306
    ],
    [
      -81,
      132
    ],
    [
      -108,
      440
    ],
    [
      -170,
      476
    ],
    [
      -141,
      406
    ],
    [
      -139,
      -3
    ],
    [
      44,
      325
    ],
    [
      12,
      206
    ],
    [
      34,
      236
    ]
  ],
  [
    [
      36483,
      4468
    ],
    [
      141,
      0
    ],
    [
      414,
      127
    ],
    [
      419,
      -127
    ],
    [
      342,
      -255
    ],
    [
      120,
      -359
    ],
    [
      33,
      -254
    ],
    [
      11,
      -301
    ],
    [
      -430,
      -186
    ],
    [
      -452,
      -150
    ],
    [
      -522,
      -139
    ],
    [
      -582,
      -116
    ],
    [
      -658,
      35
    ],
    [
      -365,
      197
    ],
    [
      49,
      243
    ],
    [
      593,
      162
    ],
    [
      239,
      197
    ],
    [
      174,
      254
    ],
    [
      126,
      220
    ],
    [
      168,
      209
    ],
    [
      180,
      243
    ]
  ],
  [
    [
      31586,
      3163
    ],
    [
      625,
      -23
    ],
    [
      599,
      -58
    ],
    [
      207,
      243
    ],
    [
      147,
      208
    ],
    [
      288,
      -243
    ],
    [
      -82,
      -301
    ],
    [
      -81,
      -266
    ],
    [
      -582,
      81
    ],
    [
      -621,
      -35
    ],
    [
      -348,
      197
    ],
    [
      0,
      23
    ],
    [
      -152,
      174
    ]
  ],
  [
    [
      29468,
      8472
    ],
    [
      190,
      70
    ],
    [
      321,
      -23
    ],
    [
      82,
      301
    ],
    [
      16,
      219
    ],
    [
      -6,
      475
    ],
    [
      158,
      278
    ],
    [
      256,
      93
    ],
    [
      147,
      -220
    ],
    [
      65,
      -220
    ],
    [
      120,
      -267
    ],
    [
      92,
      -254
    ],
    [
      76,
      -267
    ],
    [
      33,
      -266
    ],
    [
      -49,
      -231
    ],
    [
      -76,
      -220
    ],
    [
      -326,
      -81
    ],
    [
      -311,
      -116
    ],
    [
      -364,
      11
    ],
    [
      136,
      232
    ],
    [
      -327,
      -81
    ],
    [
      -310,
      -81
    ],
    [
      -212,
      174
    ],
    [
      -16,
      243
    ],
    [
      305,
      231
    ]
  ],
  [
    [
      21575,
      8103
    ],
    [
      174,
      104
    ],
    [
      353,
      -81
    ],
    [
      403,
      -46
    ],
    [
      305,
      -81
    ],
    [
      304,
      69
    ],
    [
      163,
      -335
    ],
    [
      -217,
      46
    ],
    [
      -337,
      -23
    ],
    [
      -343,
      23
    ],
    [
      -376,
      -35
    ],
    [
      -283,
      116
    ],
    [
      -146,
      243
    ]
  ],
  [
    [
      15938,
      7061
    ],
    [
      60,
      197
    ],
    [
      332,
      -104
    ],
    [
      359,
      -93
    ],
    [
      332,
      104
    ],
    [
      -158,
      -208
    ],
    [
      -261,
      -151
    ],
    [
      -386,
      47
    ],
    [
      -278,
      208
    ]
  ],
  [
    [
      14643,
      7177
    ],
    [
      202,
      127
    ],
    [
      277,
      -139
    ],
    [
      425,
      -231
    ],
    [
      -164,
      23
    ],
    [
      -359,
      58
    ],
    [
      -381,
      162
    ]
  ],
  [
    [
      4524,
      4144
    ],
    [
      169,
      220
    ],
    [
      517,
      -93
    ],
    [
      277,
      -185
    ],
    [
      212,
      -209
    ],
    [
      76,
      -266
    ],
    [
      -533,
      -81
    ],
    [
      -364,
      208
    ],
    [
      -163,
      209
    ],
    [
      -11,
      35
    ],
    [
      -180,
      162
    ]
  ],
  [
    [
      0,
      529
    ],
    [
      16,
      -5
    ],
    [
      245,
      344
    ],
    [
      501,
      -185
    ],
    [
      32,
      21
    ],
    [
      294,
      188
    ],
    [
      38,
      -7
    ],
    [
      32,
      -4
    ],
    [
      402,
      -246
    ],
    [
      352,
      246
    ],
    [
      63,
      34
    ],
    [
      816,
      104
    ],
    [
      265,
      -138
    ],
    [
      130,
      -71
    ],
    [
      419,
      -196
    ],
    [
      789,
      -151
    ],
    [
      625,
      -185
    ],
    [
      1072,
      -139
    ],
    [
      800,
      162
    ],
    [
      1181,
      -116
    ],
    [
      669,
      -185
    ],
    [
      734,
      174
    ],
    [
      773,
      162
    ],
    [
      60,
      278
    ],
    [
      -1094,
      23
    ],
    [
      -898,
      139
    ],
    [
      -234,
      231
    ],
    [
      -745,
      128
    ],
    [
      49,
      266
    ],
    [
      103,
      243
    ],
    [
      104,
      220
    ],
    [
      -55,
      243
    ],
    [
      -462,
      162
    ],
    [
      -212,
      209
    ],
    [
      -430,
      185
    ],
    [
      675,
      -35
    ],
    [
      642,
      93
    ],
    [
      402,
      -197
    ],
    [
      495,
      173
    ],
    [
      457,
      220
    ],
    [
      223,
      197
    ],
    [
      -98,
      243
    ],
    [
      -359,
      162
    ],
    [
      -408,
      174
    ],
    [
      -571,
      35
    ],
    [
      -500,
      81
    ],
    [
      -539,
      58
    ],
    [
      -180,
      220
    ],
    [
      -359,
      185
    ],
    [
      -217,
      208
    ],
    [
      -87,
      672
    ],
    [
      136,
      -58
    ],
    [
      250,
      -185
    ],
    [
      457,
      58
    ],
    [
      441,
      81
    ],
    [
      228,
      -255
    ],
    [
      441,
      58
    ],
    [
      370,
      127
    ],
    [
      348,
      162
    ],
    [
      315,
      197
    ],
    [
      419,
      58
    ],
    [
      -11,
      220
    ],
    [
      -97,
      220
    ],
    [
      81,
      208
    ],
    [
      359,
      104
    ],
    [
      163,
      -196
    ],
    [
      425,
      115
    ],
    [
      321,
      151
    ],
    [
      397,
      12
    ],
    [
      375,
      57
    ],
    [
      376,
      139
    ],
    [
      299,
      128
    ],
    [
      337,
      127
    ],
    [
      218,
      -35
    ],
    [
      190,
      -46
    ],
    [
      414,
      81
    ],
    [
      370,
      -104
    ],
    [
      381,
      11
    ],
    [
      364,
      81
    ],
    [
      375,
      -57
    ],
    [
      414,
      -58
    ],
    [
      386,
      23
    ],
    [
      403,
      -12
    ],
    [
      413,
      -11
    ],
    [
      381,
      23
    ],
    [
      283,
      174
    ],
    [
      337,
      92
    ],
    [
      349,
      -127
    ],
    [
      331,
      104
    ],
    [
      300,
      208
    ],
    [
      179,
      -185
    ],
    [
      98,
      -208
    ],
    [
      180,
      -197
    ],
    [
      288,
      174
    ],
    [
      332,
      -220
    ],
    [
      375,
      -70
    ],
    [
      321,
      -162
    ],
    [
      392,
      35
    ],
    [
      354,
      104
    ],
    [
      418,
      -23
    ],
    [
      376,
      -81
    ],
    [
      381,
      -104
    ],
    [
      147,
      254
    ],
    [
      -180,
      197
    ],
    [
      -136,
      209
    ],
    [
      -359,
      46
    ],
    [
      -158,
      220
    ],
    [
      -60,
      220
    ],
    [
      -98,
      440
    ],
    [
      213,
      -81
    ],
    [
      364,
      -35
    ],
    [
      359,
      35
    ],
    [
      327,
      -93
    ],
    [
      283,
      -174
    ],
    [
      119,
      -208
    ],
    [
      376,
      -35
    ],
    [
      359,
      81
    ],
    [
      381,
      116
    ],
    [
      342,
      70
    ],
    [
      283,
      -139
    ],
    [
      370,
      46
    ],
    [
      239,
      451
    ],
    [
      224,
      -266
    ],
    [
      321,
      -104
    ],
    [
      348,
      58
    ],
    [
      228,
      -232
    ],
    [
      365,
      -23
    ],
    [
      337,
      -69
    ],
    [
      332,
      -128
    ],
    [
      218,
      220
    ],
    [
      108,
      209
    ],
    [
      278,
      -232
    ],
    [
      381,
      58
    ],
    [
      283,
      -127
    ],
    [
      190,
      -197
    ],
    [
      370,
      58
    ],
    [
      288,
      127
    ],
    [
      283,
      151
    ],
    [
      337,
      81
    ],
    [
      392,
      69
    ],
    [
      354,
      81
    ],
    [
      272,
      127
    ],
    [
      163,
      186
    ],
    [
      65,
      254
    ],
    [
      -32,
      244
    ],
    [
      -87,
      231
    ],
    [
      -98,
      232
    ],
    [
      -87,
      231
    ],
    [
      -71,
      209
    ],
    [
      -16,
      231
    ],
    [
      27,
      232
    ],
    [
      130,
      220
    ],
    [
      109,
      243
    ],
    [
      44,
      231
    ],
    [
      -55,
      255
    ],
    [
      -32,
      232
    ],
    [
      136,
      266
    ],
    [
      152,
      173
    ],
    [
      180,
      220
    ],
    [
      190,
      186
    ],
    [
      223,
      173
    ],
    [
      109,
      255
    ],
    [
      152,
      162
    ],
    [
      174,
      151
    ],
    [
      267,
      34
    ],
    [
      174,
      186
    ],
    [
      196,
      115
    ],
    [
      228,
      70
    ],
    [
      202,
      150
    ],
    [
      157,
      186
    ],
    [
      218,
      69
    ],
    [
      163,
      -151
    ],
    [
      -103,
      -196
    ],
    [
      -283,
      -174
    ],
    [
      -120,
      -127
    ],
    [
      -206,
      92
    ],
    [
      -229,
      -58
    ],
    [
      -190,
      -139
    ],
    [
      -202,
      -150
    ],
    [
      -136,
      -174
    ],
    [
      -38,
      -231
    ],
    [
      17,
      -220
    ],
    [
      130,
      -197
    ],
    [
      -190,
      -139
    ],
    [
      -261,
      -46
    ],
    [
      -153,
      -197
    ],
    [
      -163,
      -185
    ],
    [
      -174,
      -255
    ],
    [
      -44,
      -220
    ],
    [
      98,
      -243
    ],
    [
      147,
      -185
    ],
    [
      229,
      -139
    ],
    [
      212,
      -185
    ],
    [
      114,
      -232
    ],
    [
      60,
      -220
    ],
    [
      82,
      -232
    ],
    [
      130,
      -196
    ],
    [
      82,
      -220
    ],
    [
      38,
      -544
    ],
    [
      81,
      -220
    ],
    [
      22,
      -232
    ],
    [
      87,
      -231
    ],
    [
      -38,
      -313
    ],
    [
      -152,
      -243
    ],
    [
      -163,
      -197
    ],
    [
      -370,
      -81
    ],
    [
      -125,
      -208
    ],
    [
      -169,
      -197
    ],
    [
      -419,
      -220
    ],
    [
      -370,
      -93
    ],
    [
      -348,
      -127
    ],
    [
      -376,
      -128
    ],
    [
      -223,
      -243
    ],
    [
      -446,
      -23
    ],
    [
      -489,
      23
    ],
    [
      -441,
      -46
    ],
    [
      -468,
      0
    ],
    [
      87,
      -232
    ],
    [
      424,
      -104
    ],
    [
      311,
      -162
    ],
    [
      174,
      -208
    ],
    [
      -310,
      -185
    ],
    [
      -479,
      58
    ],
    [
      -397,
      -151
    ],
    [
      -17,
      -243
    ],
    [
      -11,
      -232
    ],
    [
      327,
      -196
    ],
    [
      60,
      -220
    ],
    [
      353,
      -220
    ],
    [
      588,
      -93
    ],
    [
      500,
      -162
    ],
    [
      398,
      -185
    ],
    [
      506,
      -186
    ],
    [
      690,
      -92
    ],
    [
      681,
      -162
    ],
    [
      473,
      -174
    ],
    [
      517,
      -197
    ],
    [
      272,
      -278
    ],
    [
      136,
      -220
    ],
    [
      337,
      209
    ],
    [
      457,
      173
    ],
    [
      484,
      186
    ],
    [
      577,
      150
    ],
    [
      495,
      162
    ],
    [
      691,
      12
    ],
    [
      680,
      -81
    ],
    [
      560,
      -139
    ],
    [
      180,
      255
    ],
    [
      386,
      173
    ],
    [
      702,
      12
    ],
    [
      550,
      127
    ],
    [
      522,
      128
    ],
    [
      577,
      81
    ],
    [
      614,
      104
    ],
    [
      430,
      150
    ],
    [
      -196,
      209
    ],
    [
      -119,
      208
    ],
    [
      0,
      220
    ],
    [
      -539,
      -23
    ],
    [
      -571,
      -93
    ],
    [
      -544,
      0
    ],
    [
      -77,
      220
    ],
    [
      39,
      440
    ],
    [
      125,
      128
    ],
    [
      397,
      138
    ],
    [
      468,
      139
    ],
    [
      337,
      174
    ],
    [
      337,
      174
    ],
    [
      251,
      231
    ],
    [
      380,
      104
    ],
    [
      376,
      81
    ],
    [
      190,
      47
    ],
    [
      430,
      23
    ],
    [
      408,
      81
    ],
    [
      343,
      116
    ],
    [
      337,
      139
    ],
    [
      305,
      139
    ],
    [
      386,
      185
    ],
    [
      245,
      197
    ],
    [
      261,
      173
    ],
    [
      82,
      232
    ],
    [
      -294,
      139
    ],
    [
      98,
      243
    ],
    [
      185,
      185
    ],
    [
      288,
      116
    ],
    [
      305,
      139
    ],
    [
      283,
      185
    ],
    [
      217,
      232
    ],
    [
      136,
      277
    ],
    [
      202,
      163
    ],
    [
      331,
      -35
    ],
    [
      136,
      -197
    ],
    [
      332,
      -23
    ],
    [
      11,
      220
    ],
    [
      142,
      231
    ],
    [
      299,
      -58
    ],
    [
      71,
      -220
    ],
    [
      331,
      -34
    ],
    [
      360,
      104
    ],
    [
      348,
      69
    ],
    [
      315,
      -34
    ],
    [
      120,
      -243
    ],
    [
      305,
      196
    ],
    [
      283,
      105
    ],
    [
      315,
      81
    ],
    [
      310,
      81
    ],
    [
      283,
      139
    ],
    [
      310,
      92
    ],
    [
      240,
      128
    ],
    [
      168,
      208
    ],
    [
      207,
      -151
    ],
    [
      288,
      81
    ],
    [
      202,
      -277
    ],
    [
      157,
      -209
    ],
    [
      316,
      116
    ],
    [
      125,
      232
    ],
    [
      283,
      162
    ],
    [
      365,
      -35
    ],
    [
      108,
      -220
    ],
    [
      229,
      220
    ],
    [
      299,
      69
    ],
    [
      326,
      23
    ],
    [
      294,
      -11
    ],
    [
      310,
      -70
    ],
    [
      300,
      -34
    ],
    [
      130,
      -197
    ],
    [
      180,
      -174
    ],
    [
      304,
      104
    ],
    [
      327,
      24
    ],
    [
      315,
      0
    ],
    [
      310,
      11
    ],
    [
      278,
      81
    ],
    [
      294,
      70
    ],
    [
      245,
      162
    ],
    [
      261,
      104
    ],
    [
      283,
      58
    ],
    [
      212,
      162
    ],
    [
      152,
      324
    ],
    [
      158,
      197
    ],
    [
      288,
      -93
    ],
    [
      109,
      -208
    ],
    [
      239,
      -139
    ],
    [
      289,
      46
    ],
    [
      196,
      -208
    ],
    [
      206,
      -151
    ],
    [
      283,
      139
    ],
    [
      98,
      255
    ],
    [
      250,
      104
    ],
    [
      289,
      197
    ],
    [
      272,
      81
    ],
    [
      326,
      116
    ],
    [
      218,
      127
    ],
    [
      228,
      139
    ],
    [
      218,
      127
    ],
    [
      261,
      -69
    ],
    [
      250,
      208
    ],
    [
      180,
      162
    ],
    [
      261,
      -11
    ],
    [
      229,
      139
    ],
    [
      54,
      208
    ],
    [
      234,
      162
    ],
    [
      228,
      116
    ],
    [
      278,
      93
    ],
    [
      256,
      46
    ],
    [
      244,
      -35
    ],
    [
      262,
      -58
    ],
    [
      223,
      -162
    ],
    [
      27,
      -254
    ],
    [
      245,
      -197
    ],
    [
      168,
      -162
    ],
    [
      332,
      -70
    ],
    [
      185,
      -162
    ],
    [
      229,
      -162
    ],
    [
      266,
      -35
    ],
    [
      223,
      116
    ],
    [
      240,
      243
    ],
    [
      261,
      -127
    ],
    [
      272,
      -70
    ],
    [
      261,
      -69
    ],
    [
      272,
      -46
    ],
    [
      277,
      0
    ],
    [
      229,
      -614
    ],
    [
      -11,
      -150
    ],
    [
      -33,
      -267
    ],
    [
      -266,
      -150
    ],
    [
      -218,
      -220
    ],
    [
      38,
      -232
    ],
    [
      310,
      12
    ],
    [
      -38,
      -232
    ],
    [
      -141,
      -220
    ],
    [
      -131,
      -243
    ],
    [
      212,
      -185
    ],
    [
      321,
      -58
    ],
    [
      321,
      104
    ],
    [
      153,
      232
    ],
    [
      92,
      220
    ],
    [
      153,
      185
    ],
    [
      174,
      174
    ],
    [
      70,
      208
    ],
    [
      147,
      289
    ],
    [
      174,
      58
    ],
    [
      316,
      24
    ],
    [
      277,
      69
    ],
    [
      283,
      93
    ],
    [
      136,
      231
    ],
    [
      82,
      220
    ],
    [
      190,
      220
    ],
    [
      272,
      151
    ],
    [
      234,
      115
    ],
    [
      153,
      197
    ],
    [
      157,
      104
    ],
    [
      202,
      93
    ],
    [
      277,
      -58
    ],
    [
      250,
      58
    ],
    [
      272,
      69
    ],
    [
      305,
      -34
    ],
    [
      201,
      162
    ],
    [
      142,
      393
    ],
    [
      103,
      -162
    ],
    [
      131,
      -278
    ],
    [
      234,
      -115
    ],
    [
      266,
      -47
    ],
    [
      267,
      70
    ],
    [
      283,
      -46
    ],
    [
      261,
      -12
    ],
    [
      174,
      58
    ],
    [
      234,
      -35
    ],
    [
      212,
      -127
    ],
    [
      250,
      81
    ],
    [
      300,
      0
    ],
    [
      255,
      81
    ],
    [
      289,
      -81
    ],
    [
      185,
      197
    ],
    [
      141,
      196
    ],
    [
      191,
      163
    ],
    [
      348,
      439
    ],
    [
      179,
      -81
    ],
    [
      212,
      -162
    ],
    [
      185,
      -208
    ],
    [
      354,
      -359
    ],
    [
      272,
      -12
    ],
    [
      256,
      0
    ],
    [
      299,
      70
    ],
    [
      299,
      81
    ],
    [
      229,
      162
    ],
    [
      190,
      174
    ],
    [
      310,
      23
    ],
    [
      207,
      127
    ],
    [
      218,
      -116
    ],
    [
      141,
      -185
    ],
    [
      196,
      -185
    ],
    [
      305,
      23
    ],
    [
      190,
      -150
    ],
    [
      332,
      -151
    ],
    [
      348,
      -58
    ],
    [
      288,
      47
    ],
    [
      218,
      185
    ],
    [
      185,
      185
    ],
    [
      250,
      46
    ],
    [
      251,
      -81
    ],
    [
      288,
      -58
    ],
    [
      261,
      93
    ],
    [
      250,
      0
    ],
    [
      245,
      -58
    ],
    [
      256,
      -58
    ],
    [
      250,
      104
    ],
    [
      299,
      93
    ],
    [
      283,
      23
    ],
    [
      316,
      0
    ],
    [
      255,
      58
    ],
    [
      251,
      46
    ],
    [
      76,
      290
    ],
    [
      11,
      243
    ],
    [
      174,
      -162
    ],
    [
      49,
      -266
    ],
    [
      92,
      -244
    ],
    [
      115,
      -196
    ],
    [
      234,
      -105
    ],
    [
      315,
      35
    ],
    [
      365,
      12
    ],
    [
      250,
      35
    ],
    [
      364,
      0
    ],
    [
      262,
      11
    ],
    [
      364,
      -23
    ],
    [
      310,
      -46
    ],
    [
      196,
      -186
    ],
    [
      -54,
      -220
    ],
    [
      179,
      -173
    ],
    [
      299,
      -139
    ],
    [
      310,
      -151
    ],
    [
      360,
      -104
    ],
    [
      375,
      -92
    ],
    [
      283,
      -93
    ],
    [
      315,
      -12
    ],
    [
      180,
      197
    ],
    [
      245,
      -162
    ],
    [
      212,
      -185
    ],
    [
      245,
      -139
    ],
    [
      337,
      -58
    ],
    [
      321,
      -69
    ],
    [
      136,
      -232
    ],
    [
      316,
      -139
    ],
    [
      212,
      -208
    ],
    [
      310,
      -93
    ],
    [
      321,
      12
    ],
    [
      299,
      -35
    ],
    [
      332,
      12
    ],
    [
      332,
      -47
    ],
    [
      310,
      -81
    ],
    [
      288,
      -139
    ],
    [
      289,
      -116
    ],
    [
      195,
      -173
    ],
    [
      -32,
      -232
    ],
    [
      -147,
      -208
    ],
    [
      -125,
      -266
    ],
    [
      -98,
      -209
    ],
    [
      -131,
      -243
    ],
    [
      -364,
      -93
    ],
    [
      -163,
      -208
    ],
    [
      -360,
      -127
    ],
    [
      -125,
      -232
    ],
    [
      -190,
      -220
    ],
    [
      -201,
      -185
    ],
    [
      -115,
      -243
    ],
    [
      -70,
      -220
    ],
    [
      -28,
      -266
    ],
    [
      6,
      -220
    ],
    [
      158,
      -232
    ],
    [
      60,
      -220
    ],
    [
      130,
      -208
    ],
    [
      517,
      -81
    ],
    [
      109,
      -255
    ],
    [
      -501,
      -93
    ],
    [
      -424,
      -127
    ],
    [
      -528,
      -23
    ],
    [
      -234,
      -336
    ],
    [
      -49,
      -278
    ],
    [
      -119,
      -220
    ],
    [
      -147,
      -220
    ],
    [
      370,
      -196
    ],
    [
      141,
      -244
    ],
    [
      239,
      -219
    ],
    [
      338,
      -197
    ],
    [
      386,
      -186
    ],
    [
      419,
      -185
    ],
    [
      636,
      -185
    ],
    [
      142,
      -289
    ],
    [
      800,
      -128
    ],
    [
      53,
      -45
    ],
    [
      208,
      -175
    ],
    [
      767,
      151
    ],
    [
      636,
      -186
    ],
    [
      479,
      -142
    ],
    [
      -99999,
      0
    ]
  ],
  [
    [
      59092,
      71341
    ],
    [
      19,
      3
    ],
    [
      40,
      143
    ],
    [
      200,
      -8
    ],
    [
      253,
      176
    ],
    [
      -188,
      -251
    ],
    [
      21,
      -111
    ]
  ],
  [
    [
      59437,
      71293
    ],
    [
      -30,
      21
    ],
    [
      -53,
      -45
    ],
    [
      -42,
      12
    ],
    [
      -14,
      -22
    ],
    [
      -5,
      59
    ],
    [
      -20,
      37
    ],
    [
      -54,
      6
    ],
    [
      -75,
      -51
    ],
    [
      -52,
      31
    ]
  ],
  [
    [
      59437,
      71293
    ],
    [
      8,
      -48
    ],
    [
      -285,
      -240
    ],
    [
      -136,
      77
    ],
    [
      -64,
      237
    ],
    [
      132,
      22
    ]
  ],
  [
    [
      45272,
      63236
    ],
    [
      13,
      274
    ],
    [
      106,
      161
    ],
    [
      91,
      308
    ],
    [
      -18,
      200
    ],
    [
      96,
      417
    ],
    [
      155,
      376
    ],
    [
      93,
      95
    ],
    [
      74,
      344
    ],
    [
      6,
      315
    ],
    [
      100,
      365
    ],
    [
      185,
      216
    ],
    [
      177,
      603
    ],
    [
      5,
      8
    ],
    [
      139,
      227
    ],
    [
      259,
      65
    ],
    [
      218,
      404
    ],
    [
      140,
      158
    ],
    [
      232,
      493
    ],
    [
      -70,
      735
    ],
    [
      106,
      508
    ],
    [
      37,
      312
    ],
    [
      179,
      399
    ],
    [
      278,
      270
    ],
    [
      206,
      244
    ],
    [
      186,
      612
    ],
    [
      87,
      362
    ],
    [
      205,
      -2
    ],
    [
      167,
      -251
    ],
    [
      264,
      41
    ],
    [
      288,
      -131
    ],
    [
      121,
      -6
    ]
  ],
  [
    [
      56944,
      63578
    ],
    [
      0,
      2175
    ],
    [
      0,
      2101
    ],
    [
      -83,
      476
    ],
    [
      71,
      365
    ],
    [
      -43,
      253
    ],
    [
      101,
      283
    ]
  ],
  [
    [
      56990,
      69231
    ],
    [
      369,
      10
    ],
    [
      268,
      -156
    ],
    [
      275,
      -175
    ],
    [
      129,
      -92
    ],
    [
      214,
      188
    ],
    [
      114,
      169
    ],
    [
      245,
      49
    ],
    [
      198,
      -75
    ],
    [
      75,
      -293
    ],
    [
      65,
      193
    ],
    [
      222,
      -140
    ],
    [
      217,
      -33
    ],
    [
      137,
      149
    ]
  ],
  [
    [
      59700,
      68010
    ],
    [
      -78,
      -238
    ],
    [
      -60,
      -446
    ],
    [
      -75,
      -308
    ],
    [
      -65,
      -103
    ],
    [
      -93,
      191
    ],
    [
      -125,
      263
    ],
    [
      -198,
      847
    ],
    [
      -29,
      -53
    ],
    [
      115,
      -624
    ],
    [
      171,
      -594
    ],
    [
      210,
      -920
    ],
    [
      102,
      -321
    ],
    [
      90,
      -334
    ],
    [
      249,
      -654
    ],
    [
      -55,
      -103
    ],
    [
      9,
      -384
    ],
    [
      323,
      -530
    ],
    [
      49,
      -121
    ]
  ],
  [
    [
      53191,
      70158
    ],
    [
      326,
      -204
    ],
    [
      117,
      51
    ],
    [
      232,
      -98
    ],
    [
      368,
      -264
    ],
    [
      130,
      -526
    ],
    [
      250,
      -114
    ],
    [
      391,
      -248
    ],
    [
      296,
      -293
    ],
    [
      136,
      153
    ],
    [
      133,
      272
    ],
    [
      -65,
      452
    ],
    [
      87,
      288
    ],
    [
      200,
      277
    ],
    [
      192,
      80
    ],
    [
      375,
      -121
    ],
    [
      95,
      -264
    ],
    [
      104,
      -2
    ],
    [
      88,
      -101
    ],
    [
      276,
      -70
    ],
    [
      68,
      -195
    ]
  ],
  [
    [
      59804,
      53833
    ],
    [
      -164,
      643
    ],
    [
      -127,
      137
    ],
    [
      -48,
      236
    ],
    [
      -141,
      288
    ],
    [
      -171,
      42
    ],
    [
      95,
      337
    ],
    [
      147,
      14
    ],
    [
      42,
      181
    ]
  ],
  [
    [
      61764,
      57990
    ],
    [
      -98,
      -261
    ],
    [
      -94,
      -277
    ],
    [
      22,
      -163
    ],
    [
      4,
      -180
    ],
    [
      155,
      -10
    ],
    [
      67,
      42
    ],
    [
      62,
      -106
    ]
  ],
  [
    [
      61882,
      57035
    ],
    [
      -61,
      -209
    ],
    [
      103,
      -325
    ],
    [
      102,
      -285
    ],
    [
      106,
      -210
    ],
    [
      909,
      -702
    ],
    [
      233,
      4
    ]
  ],
  [
    [
      61966,
      58083
    ],
    [
      66,
      -183
    ],
    [
      -9,
      -245
    ],
    [
      -158,
      -142
    ],
    [
      119,
      -161
    ]
  ],
  [
    [
      61984,
      57352
    ],
    [
      -102,
      -317
    ]
  ],
  [
    [
      61984,
      57352
    ],
    [
      91,
      -109
    ],
    [
      54,
      -245
    ],
    [
      125,
      -247
    ],
    [
      138,
      -2
    ],
    [
      262,
      151
    ],
    [
      302,
      70
    ],
    [
      245,
      184
    ],
    [
      138,
      39
    ],
    [
      99,
      108
    ],
    [
      158,
      20
    ]
  ],
  [
    [
      58449,
      49909
    ],
    [
      -166,
      -182
    ],
    [
      -67,
      60
    ]
  ],
  [
    [
      58564,
      52653
    ],
    [
      115,
      161
    ],
    [
      176,
      -132
    ],
    [
      224,
      138
    ],
    [
      195,
      -1
    ],
    [
      171,
      272
    ]
  ],
  [
    [
      55279,
      77084
    ],
    [
      100,
      2
    ],
    [
      -69,
      -260
    ],
    [
      134,
      -227
    ],
    [
      -41,
      -278
    ],
    [
      -65,
      -27
    ]
  ],
  [
    [
      55338,
      76294
    ],
    [
      -52,
      -53
    ],
    [
      -90,
      -138
    ],
    [
      -41,
      -325
    ]
  ],
  [
    [
      55719,
      75309
    ],
    [
      35,
      -5
    ],
    [
      13,
      121
    ],
    [
      164,
      91
    ],
    [
      62,
      23
    ]
  ],
  [
    [
      55993,
      75539
    ],
    [
      95,
      35
    ],
    [
      128,
      9
    ]
  ],
  [
    [
      55993,
      75539
    ],
    [
      -9,
      44
    ],
    [
      33,
      71
    ],
    [
      31,
      144
    ],
    [
      -39,
      -4
    ],
    [
      -54,
      110
    ],
    [
      -46,
      28
    ],
    [
      -36,
      94
    ],
    [
      -52,
      36
    ],
    [
      -40,
      84
    ],
    [
      -50,
      -33
    ],
    [
      -38,
      -196
    ],
    [
      -66,
      -43
    ]
  ],
  [
    [
      55627,
      75874
    ],
    [
      22,
      51
    ],
    [
      -106,
      123
    ],
    [
      -91,
      63
    ],
    [
      -40,
      82
    ],
    [
      -74,
      101
    ]
  ],
  [
    [
      55380,
      75322
    ],
    [
      -58,
      46
    ],
    [
      -78,
      192
    ],
    [
      -120,
      118
    ]
  ],
  [
    [
      55627,
      75874
    ],
    [
      -52,
      -132
    ]
  ],
  [
    [
      32866,
      56937
    ],
    [
      160,
      77
    ],
    [
      58,
      -21
    ],
    [
      -11,
      -440
    ],
    [
      -232,
      -65
    ],
    [
      -50,
      53
    ],
    [
      81,
      163
    ],
    [
      -6,
      233
    ]
  ]
];
const bbox = [
  -180,
  -85.60903777459771,
  180,
  83.64513000000001
];
const transform = {
  scale: [
    0.0036000360003600037,
    0.0016925586033320105
  ],
  translate: [
    -180,
    -85.60903777459771
  ]
};
var world = {
  type,
  objects,
  arcs,
  bbox,
  transform
};
var Feature_svelte_svelte_type_style_lang = ".provinceShape.svelte-1ggaaak{stroke:#9ca3af;fill:#f3f4f6;stroke-width:.5}.highlight.svelte-1ggaaak{stroke:#f59e0b;fill:#fcd34d}";
const css$1 = {
  code: ".provinceShape.svelte-1ggaaak{stroke:#9ca3af;fill:#f3f4f6;stroke-width:.5}.highlight.svelte-1ggaaak{stroke:#f59e0b;fill:#fcd34d}",
  map: '{"version":3,"file":"Feature.svelte","sources":["Feature.svelte"],"sourcesContent":["<script>\\n\\texport let featurePath, properties;\\n\\texport let highlight = false;\\n</script>\\n\\n<path d={featurePath} class:highlight=\\"{highlight}\\" class=\\"{`provinceShape ${properties.name}`}\\" />\\n\\n<style>.provinceShape{stroke:#9ca3af;fill:#f3f4f6;stroke-width:.5}.highlight{stroke:#f59e0b;fill:#fcd34d}</style>\\n"],"names":[],"mappings":"AAOO,6BAAc,CAAC,OAAO,OAAO,CAAC,KAAK,OAAO,CAAC,aAAa,EAAE,CAAC,yBAAU,CAAC,OAAO,OAAO,CAAC,KAAK,OAAO,CAAC"}'
};
const Feature = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {featurePath} = $$props, {properties} = $$props;
  let {highlight = false} = $$props;
  if ($$props.featurePath === void 0 && $$bindings.featurePath && featurePath !== void 0)
    $$bindings.featurePath(featurePath);
  if ($$props.properties === void 0 && $$bindings.properties && properties !== void 0)
    $$bindings.properties(properties);
  if ($$props.highlight === void 0 && $$bindings.highlight && highlight !== void 0)
    $$bindings.highlight(highlight);
  $$result.css.add(css$1);
  return `<path${add_attribute("d", featurePath, 0)} class="${[
    escape(null_to_empty(`provinceShape ${properties.name}`)) + " svelte-1ggaaak",
    highlight ? "highlight" : ""
  ].join(" ").trim()}"></path>`;
});
var Marker_svelte_svelte_type_style_lang = ".leftPosition.svelte-128r2vk{direction:rtl}";
const css = {
  code: ".leftPosition.svelte-128r2vk{direction:rtl}",
  map: `{"version":3,"file":"Marker.svelte","sources":["Marker.svelte"],"sourcesContent":["<script>\\n\\texport let coords;\\n\\texport let text;\\n\\texport let textPosition = 'right';\\n</script>\\n\\n<circle class=\\"text-gray-600 fill-current dark:text-gray-400\\" cx={coords[0]} cy={coords[1]} r=\\"4\\" />\\n<text\\n\\tclass:leftPosition={textPosition == 'left'}\\n\\tclass=\\"text-xs text-gray-500 fill-current dark:text-gray-500\\"\\n\\tx={textPosition == 'right' ? coords[0] + 10 : coords[0] - 10}\\n\\ty={textPosition == 'right' ? coords[1] + 4 : coords[1] + 2}\\n>{text}</text>\\n\\n<style>.leftPosition{direction:rtl}</style>\\n"],"names":[],"mappings":"AAcO,4BAAa,CAAC,UAAU,GAAG,CAAC"}`
};
const Marker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {coords} = $$props;
  let {text} = $$props;
  let {textPosition = "right"} = $$props;
  if ($$props.coords === void 0 && $$bindings.coords && coords !== void 0)
    $$bindings.coords(coords);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.textPosition === void 0 && $$bindings.textPosition && textPosition !== void 0)
    $$bindings.textPosition(textPosition);
  $$result.css.add(css);
  return `<circle class="${"text-gray-600 fill-current dark:text-gray-400"}"${add_attribute("cx", coords[0], 0)}${add_attribute("cy", coords[1], 0)} r="${"4"}"></circle>
<text class="${[
    "text-xs text-gray-500 fill-current dark:text-gray-500 svelte-128r2vk",
    textPosition == "left" ? "leftPosition" : ""
  ].join(" ").trim()}"${add_attribute("x", textPosition == "right" ? coords[0] + 10 : coords[0] - 10, 0)}${add_attribute("y", textPosition == "right" ? coords[1] + 4 : coords[1] + 2, 0)}>${escape(text)}</text>`;
});
const Map = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let projection;
  let path;
  let $tweenedZoom, $$unsubscribe_tweenedZoom;
  let {zoom = 100} = $$props;
  let {center = []} = $$props;
  let {markers = []} = $$props;
  let {highlight = []} = $$props;
  let {focus = false} = $$props;
  let {height = 400} = $$props;
  let width = 400;
  let data = [];
  const tweenedZoom = tweened(focus ? 100 : zoom, {duration: 2e3, easing: cubicOut});
  $$unsubscribe_tweenedZoom = subscribe(tweenedZoom, (value) => $tweenedZoom = value);
  let keys = Object.keys(world.objects);
  let countries = {...world.objects[keys[0]]};
  data = topojson.feature(world, countries).features;
  if ($$props.zoom === void 0 && $$bindings.zoom && zoom !== void 0)
    $$bindings.zoom(zoom);
  if ($$props.center === void 0 && $$bindings.center && center !== void 0)
    $$bindings.center(center);
  if ($$props.markers === void 0 && $$bindings.markers && markers !== void 0)
    $$bindings.markers(markers);
  if ($$props.highlight === void 0 && $$bindings.highlight && highlight !== void 0)
    $$bindings.highlight(highlight);
  if ($$props.focus === void 0 && $$bindings.focus && focus !== void 0)
    $$bindings.focus(focus);
  if ($$props.height === void 0 && $$bindings.height && height !== void 0)
    $$bindings.height(height);
  projection = geoNaturalEarth1().center(center).scale($tweenedZoom).translate([width / 2, height / 2]);
  path = geoPath().projection(projection);
  $$unsubscribe_tweenedZoom();
  return `<div class="${"block"}"><svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)} class="${"bg-transparent rounded"}">${each(data, (feature) => `${validate_component(Feature, "Feature").$$render($$result, {
    featurePath: path(feature),
    properties: feature.properties,
    highlight: highlight.includes(feature.properties.name)
  }, {}, {})}`)}${each(markers, (marker) => `${validate_component(Marker, "Marker").$$render($$result, {
    coords: projection([marker.long, marker.lat]),
    text: marker.name,
    textPosition: marker.textPosition
  }, {}, {})}`)}</svg></div>`;
});
const Explanation = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {href = null} = $$props;
  let {name = null} = $$props;
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  return `<div class="${"max-w-xl my-40 mx-auto"}"><div class="${"mx-4 px-8 py-8 bg-white dark:bg-black shadow-lg rounded-lg border dark:border-gray-900"}"><div class="${"flex justify-end -mt-16"}"><svg aria-hidden="${"true"}" focusable="${"false"}" data-prefix="${"fas"}" data-icon="${"info-circle"}" class="${"border w-16 h-16 p-3 rounded-full dark:bg-black bg-white border text-gray-400 dark:text-gray-600 dark:border-gray-900"}" role="${"img"}" xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 192 512"}"><path fill="${"currentColor"}" d="${"M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"}"></path></svg></div>
		<div class="${"prose prose-lg dark:prose-dark"}">${slots.default ? slots.default({}) : ``}</div>
		${href && name ? `<div class="${"flex justify-end mt-4"}"><a${add_attribute("href", href, 0)} class="${"text-xl font-medium text-blue-500 hover:text-blue-700"}">${escape(name)}</a></div>` : ``}</div></div>`;
});
const Location = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {name} = $$props;
  let {zoom = 100} = $$props;
  let {center = []} = $$props;
  let {markers = []} = $$props;
  let {highlight = []} = $$props;
  let {focus = false} = $$props;
  let {height = 400} = $$props;
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.zoom === void 0 && $$bindings.zoom && zoom !== void 0)
    $$bindings.zoom(zoom);
  if ($$props.center === void 0 && $$bindings.center && center !== void 0)
    $$bindings.center(center);
  if ($$props.markers === void 0 && $$bindings.markers && markers !== void 0)
    $$bindings.markers(markers);
  if ($$props.highlight === void 0 && $$bindings.highlight && highlight !== void 0)
    $$bindings.highlight(highlight);
  if ($$props.focus === void 0 && $$bindings.focus && focus !== void 0)
    $$bindings.focus(focus);
  if ($$props.height === void 0 && $$bindings.height && height !== void 0)
    $$bindings.height(height);
  return `<div class="${"mx-auto max-w-screen-lg my-24 px-4"}"><h2 class="${"flex items-center font-extrabold tracking-snug leading-8 text-4xl font-bold text-gray-800 dark:text-gray-200 mb-4"}"><svg aria-hidden="${"true"}" focusable="${"false"}" data-prefix="${"fas"}" data-icon="${"map-marker-alt"}" class="${"h-8 w-8 mr-2 text-gray-600 dark:text-gray-400"}" role="${"img"}" xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 384 512"}"><path fill="${"currentColor"}" d="${"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"}"></path></svg>
		<span>${escape(name)}</span>
		<hr class="${"flex-1 ml-8 border-b border-t border-gray-200 mt-1 rounded"}"></h2>
	<div class="${"flex flex-col md:flex-row mt-12"}"><div class="${"flex-1 flex-shrink mr-4 prose prose-lg dark:prose-dark"}">${slots.default ? slots.default({}) : ``}</div>
		<div class="${"flex-1 flex-shrink mt-8 md:ml-4 md:mt-0"}">${validate_component(Map, "Map").$$render($$result, Object.assign({
    zoom,
    center,
    markers,
    highlight,
    focus,
    height
  }), {}, {})}</div></div></div>`;
});
const TripHeader = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  let {title} = $$props, {subtitle} = $$props, {startDate} = $$props, {image} = $$props;
  let {endDate = null} = $$props;
  const headerImage = image.src.replace(".jpg", "-720.jpg");
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.subtitle === void 0 && $$bindings.subtitle && subtitle !== void 0)
    $$bindings.subtitle(subtitle);
  if ($$props.startDate === void 0 && $$bindings.startDate && startDate !== void 0)
    $$bindings.startDate(startDate);
  if ($$props.image === void 0 && $$bindings.image && image !== void 0)
    $$bindings.image(image);
  if ($$props.endDate === void 0 && $$bindings.endDate && endDate !== void 0)
    $$bindings.endDate(endDate);
  $$unsubscribe_page();
  return `${$$result.head += `<meta name="${"description"}"${add_attribute("content", subtitle, 0)} data-svelte="svelte-1yniqax"><meta property="${"og:title"}" content="${escape(title) + " - Matsimitsu.com"}" data-svelte="svelte-1yniqax"><meta property="${"og:description"}"${add_attribute("content", subtitle, 0)} data-svelte="svelte-1yniqax"><meta property="${"og:image"}"${add_attribute("content", headerImage, 0)} data-svelte="svelte-1yniqax"><meta property="${"og:image:alt"}"${add_attribute("content", image.alt, 0)} data-svelte="svelte-1yniqax"><meta property="${"og:locale"}" content="${"en_US"}" data-svelte="svelte-1yniqax"><meta property="${"og:type"}" content="${"website"}" data-svelte="svelte-1yniqax"><meta name="${"twitter:card"}" content="${"summary_large_image"}" data-svelte="svelte-1yniqax"><meta name="${"twitter:creator"}" content="${"@matsimitsu"}" data-svelte="svelte-1yniqax"><meta property="${"og:url"}" content="${"https://matsimitsu.com" + escape($page.path)}" data-svelte="svelte-1yniqax"><link rel="${"canonical"}" href="${"https://matsimitsu.com" + escape($page.path)}" data-svelte="svelte-1yniqax">`, ""}

<div class="${"mx-auto container my-24 text-center"}"><p class="${"mx-auto text-sm text-gray-400 mb-4"}">${validate_component(FormattedDate, "FormattedDate").$$render($$result, {date: startDate}, {}, {})}
		${endDate ? `<span>-</span>
			${validate_component(FormattedDate, "FormattedDate").$$render($$result, {date: endDate}, {}, {})}` : ``}</p>
	<h1 class="${"font-extrabold tracking-snug leading-8 text-6xl font-bold text-gray-800 dark:text-gray-200 mb-8"}">${escape(title)}</h1>
	<p class="${"text-lg text-gray-600 dark:text-gray-400"}">${escape(subtitle)}</p>
	<hr class="${"mx-auto w-64 mt-4 dark:border-gray-600"}"></div>`;
});
const postData$a = {
  title: "Egypt 2009",
  subtitle: "Land of Pharaohs and Sphinxes. My first trip outside of continental Europe.",
  trip: "egypt-2009",
  startDate: new Date("2009-08-22"),
  endDate: new Date("2009-08-29"),
  image: {
    src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0021.jpg",
    width: 2200,
    height: 1461,
    alt: "Photo of Egyptian ruins with hieroglyphs in Luxor"
  }
};
const tripData$2 = {
  title: "Egypt 2009",
  subtitle: "Land of Pharaohs and Sphinxes. My first trip outside of continental Europe.",
  trip: "egypt-2009",
  startDate: new Date("2009-08-22"),
  endDate: new Date("2009-08-29"),
  image: {
    src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0021.jpg",
    width: 2200,
    height: 1461,
    alt: "Photo of Egyptian ruins with hieroglyphs in Luxor"
  },
  countries: ["Egypt"]
};
const Egypt_2009 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$a), {}, {})}

<div class="${"max-w-screen-xl mx-auto"}">${validate_component(Map, "Map").$$render($$result, {
    highlight: tripData$2.countries,
    height: 800,
    zoom: 250,
    center: [0, 10]
  }, {}, {})}</div>

${validate_component(Location, "Location").$$render($$result, {
    name: "Egypt",
    height: 340,
    zoom: 550,
    focus: true,
    center: [31.0206, 25.8025],
    markers: [
      {
        lat: 27.25738,
        long: 33.81291,
        name: "Hurghada",
        textPosition: "left"
      },
      {
        lat: 25.6872,
        long: 32.6396,
        name: "Luxor"
      }
    ]
  }, {}, {
    default: () => `<p>This was my first trip outside of the European continent, it also was my second (and last)
		&quot;package holiday&quot;.
	</p>
	<p>While this was an easy experience since everyting is arranged for you, we quickly became aware
		that this wasn&#39;t how we wanted to travel, it felt quite limited and the all-you-can-eat-restort
		life just wasn&#39;t for us.
	</p>
	<p>After arriving in Hurghada we sat down with the travel operator and picked the excursions we&#39;d
		like to do during our week long stay in Egypt. We picked a day-trip to <strong>Luxor</strong>, a
		day of diving along the <strong>Hurghada</strong> coast and a quad ride in the dunes nearby.
	</p>`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0003.jpg",
    width: "2200",
    height: "1853"
  }, {}, {})}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>The Karnak temple</h2>
	<p>The first excursion was a day trip to Luxor. We woke up early and took a van for the
		multiple-hour long trip to Luxor. There were tons of (military) checkpoints along the way.
	</p>
	<p>Luxor is a city in the south of Egypt and was once the capital of the Pharaohs in the 16th-11th
		centuries B.C.
	</p>
	<p>Our trip started at the <strong>Karnak</strong> temple, a huge temple site with preserved ancient
		ruins &amp; over 200 structures. Where we were free to roam the complex.
	</p>`
  })}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0013.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0015.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0021.jpg",
    width: "2200",
    height: "1461"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0016.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0018.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>It&#39;s amazing to see the Egyptian hieroglyphs in real-life along the walls of the temple complex.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0019.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0025.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0022.jpg",
    width: "2200",
    height: "1461"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0043.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0049.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>There were quite a number of people visiting the complex, but most people were busy trying to
		stay in the shade as the 30+ degrees sun tried its best to burn through the sunscreen.
	</p>`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0037.jpg",
    width: "2200",
    height: "1461"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0031.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0046.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0063.jpg",
    width: "2200",
    height: "1461"
  }, {}, {})}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>The Nile river</h2>
	<p>After wandering around for a few hours through the complex, we were brought to the river banks
		where we boarded a boat to get across. On the other side lunch was served.
	</p>`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0065.jpg",
    width: "2200",
    height: "1461"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0079.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0083.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}`
  })}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Valley of the kings</h2>
	<p>Near Luxor lies a valley called Valley of the Kings. This is the place where a lot of pharaohs
		and powerful nobles were buried in rock-cut tombs.
	</p>
	<p>It&#39;s also one of the hottest places on earth and it was a nice 45 degrees celcius when we
		arrived.
	</p>`
  })}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0093.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0112.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}`
  })}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>For some inexplicable reason I don&#39;t seem to have taken any photo&#39;s from inside the tombs and I
		can&#39;t remember of that was because it wasn&#39;t allowed or I just forgot...
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/egypt-2009/20090823-_DSC0101.jpg",
    width: "2200",
    height: "1461"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Quad ride near Hurghada</h2>
	<p>Near Luxor lies a valley called Valley of the Kings. This is the place where a lot of pharaohs
		and powerful nobles were buried in rock-cut tombs.
	</p>
	<p>It&#39;s also one of the hottest places on earth and it was a nice 45 degrees celcius when we
		arrived.
	</p>`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0190.jpg",
    width: "2200",
    height: "1461"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0289.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0290.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0189.jpg",
    width: "2200",
    height: "1461"
  }, {}, {})}

${validate_component(Explanation, "Explanation").$$render($$result, {}, {}, {
    default: () => `<h2 class="${"text-left"}">The downside of tourism</h2>
	<p>The quad tour stopped at multiple stops along the way, a couple of those stops were questionable
		at best.
	</p>
	<p>One was a camel ride where you could hop on a camel and be walked around a hill for a few
		minutes, wich wasn&#39;t that bad in the grand scheme of things.
	</p>
	<p>The other was a &quot;zoo&quot; where you could see the native wild-life. Wich consisted of a dark, hot
		and dirty tent which housed several extremely small and dirty shallow pools that contained
		turtles, snakes and other animals. One of the attractions was to &quot;ride&quot; a turtle or poke a snake
		etc.
	</p>
	<p>We were quite shocked by the treatment of these animals and from then on we tried our best to
		never visit an attraction that adds to the misery of animals, such as these &quot;road side zoos&quot; or
		riding elephants in Thailand, for example.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0297.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0311.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}`
  })}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0188.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0323.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}`
  })}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0301.jpg",
      width: "2200",
      height: "1461"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0307.jpg",
      width: "1461",
      height: "2200"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/egypt-2009/20090824-_DSC0325.jpg",
    width: "2200",
    height: "1461"
  }, {}, {})}`;
});
var index$a = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Egypt_2009,
  postData: postData$a,
  tripData: tripData$2
});
const tripData$1 = {
  title: "USA 2011",
  subtitle: "Land of the free.",
  trip: "usa-2011",
  startDate: new Date("2011-07-04"),
  endDate: new Date("2011-08-02"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110718-_DSC0835-Pano.jpg",
    width: 2200,
    height: 1424,
    alt: "View of Yosemite National Park"
  },
  countries: ["United States of America"]
};
const Usa_2011 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(tripData$1), {}, {})}

<div class="${"max-w-screen-xl mx-auto"}">${validate_component(Map, "Map").$$render($$result, {
    highlight: tripData$1.countries,
    height: 800,
    zoom: 250,
    center: [0, 10]
  }, {}, {})}</div>`;
});
var index$9 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Usa_2011,
  tripData: tripData$1
});
const PhonePic = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let inTextContent = getContext("inTextContent") || false;
  return `<div class="${[
    "max-w-xl mx-auto",
    (!inTextContent ? "my-40" : "") + " " + (inTextContent ? "mt-16" : "") + " " + (inTextContent ? "mb-16" : "")
  ].join(" ").trim()}"><div class="${"mx-4 px-8 pt-8 pb-4 bg-white dark:bg-gray-900 shadow-lg rounded-lg border dark:border-gray-700"}"><div class="${"flex justify-end -mt-16"}"><svg aria-hidden="${"true"}" focusable="${"false"}" data-prefix="${"fas"}" data-icon="${"mobile-alt"}" class="${"border w-16 h-16 p-3 rounded-full dark:bg-gray-900 bg-white border text-gray-400 dark:text-gray-600 dark:border-gray-700"}" role="${"img"}" xmlns="${"http://www.w3.org/2000/svg"}" viewBox="${"0 0 320 512"}"><path fill="${"currentColor"}" d="${"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm112-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v312z"}"></path></svg></div>
		<div class="${"rounded overflow-hidden"}">${slots.default ? slots.default({}) : ``}</div>
		<div class="${"flex justify-end mt-4 prose prose-lg dark:prose-dark"}"><small>Shot on an old phone, hence the lack of quality.</small></div></div></div>`;
});
const postData$9 = {
  title: "Day twenty - twenty-eight",
  subtitle: "Road to San Francisco",
  trip: "usa-2011",
  startDate: new Date("2011-07-22"),
  endDate: new Date("2011-08-01"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110725-_DSC1032.jpg",
    width: 2200,
    height: 1461,
    alt: "San Francisco "
  }
};
const Day_twenty_twenty_eight = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$9), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>The road down to San Francisco was mostly spent doing things instead of watching scenic views,
		so the amount of photo&#39;s taken dropped to near-zero. Below is the rest of the trip condensed into one
		post.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110723-_DSC1008-Pano.jpg",
    width: "2200",
    height: "609",
    alt: "Pacific coast beach"
  }, {}, {})}

${validate_component(Location, "Location").$$render($$result, {
    name: "Road to San Francisco",
    height: 240,
    zoom: 800,
    focus: true,
    center: [-110.613953, 39.477791],
    markers: [
      {
        lat: 45.5051,
        long: -122.675,
        name: "Portland"
      },
      {
        lat: 37.7749,
        long: -122.4194,
        name: "San Francisco"
      },
      {
        lat: 34.0522,
        long: -118.2437,
        name: "Los Angeles"
      },
      {
        lat: 40.7627,
        long: -124.2216,
        name: "Samoa Dunes"
      },
      {
        lat: 38.9582,
        long: -122.6264,
        name: "Clear lake"
      }
    ]
  }, {}, {
    default: () => `<p>We started in <strong>Portland</strong> and drove to the coast to drive down local roads instead
		of taking the highway.
	</p>
	<p>We also visited a wildlife park where you could pet a tiger, it also had Capybara&#39;s which are
		amzing animals. It wasn&#39;t like Tiger king, but it wasn&#39;t a zoo either.
	</p>
	<p>Other activities included ATV driving and water scooter ...sailing?</p>`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Samoa Dunes</h2>
	<p>We rented a couple of ATV&#39;s to drive in the dunes. One of the few places where this is allowed.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110722-IMG_01221.jpg",
        width: "2200",
        height: "1650",
        alt: "Samoa Dunes"
      }, {}, {})}`
    })}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Shady business</h2>
	<p>On the way to San Francisco we stopped to sleep at a Comfort Inn that was just way too shady and
		not at all Comfort-Inn like. The only place to eat nearby was a run-down Denny&#39;s and there were
		a bunch of women in the lobby that did not dress for a Fancy party ;).
	</p>
	<p>The only reason we booked the hotel was that it was the least worst in the area and had a
		pool...
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110724-IMG_01432.jpg",
        width: "1650",
        height: "2200",
        alt: "sign on door that says this pool is closed"
      }, {}, {})}`
    })}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Clear lake</h2>
	<p>We had great fun on the ATV&#39;s so we tried the water variant, water scooters. Which went well..
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110725-_DSC1024.jpg",
      width: "2200",
      height: "1461",
      alt: "Water scooter"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110725-_DSC1019.jpg",
      width: "2200",
      height: "1461",
      alt: "Water scooter damage"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>America&#39;s Healthiest</h2>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110725-IMG_01441.jpg",
        width: "1650",
        height: "2200",
        alt: "Americas Healthiest grocery"
      }, {}, {})}`
    })}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>San Francisco</h2>
	<p>After a couple of days and a lot of money lighter we reached San Francisco!</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110725-IMG_01461.jpg",
        width: "1650",
        height: "2200",
        alt: "Golden Gate Bridge"
      }, {}, {})}`
    })}`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110725-_DSC1032.jpg",
      width: "2200",
      height: "1461",
      alt: "San Francisco "
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110725-_DSC1034.jpg",
      width: "2200",
      height: "1461",
      alt: "San Francisco "
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Alcatraz</h2>
	<p>We managed to get one of the last tickets to Alcatraz, we did had to book it including a
		hop-on-hop-off bus tour, which was actually quite nice!
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110727-IMG_01541.jpg",
        width: "1650",
        height: "2200",
        alt: "Boat to Alcatraz"
      }, {}, {})}`
    })}
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110727-IMG_01561.jpg",
        width: "2200",
        height: "1650",
        alt: "Showers at Alcatraz"
      }, {}, {})}`
    })}`
  })}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>To Boston</h2>
	<p>After all these days it was time to head home. Our Comfort Inn was near the San Francisco
		airport (SFO), so we dropped off our rental car (no damage!) and headed for our plane.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110729-IMG_01831.jpg",
        width: "1650",
        height: "2200",
        alt: "United flight from SFO to BOS"
      }, {}, {})}`
    })}`
  })}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>New York</h2>
	<p>I&#39;m not quite sure how we got from Boston to New York, I assume by plane. The last few days were
		spent at my buddy&#39;s Uncle in Allentown again, where we stocked up on Apple TV&#39;s to bring back.
		And after a few days of relaxing we took our flight home to Amsterdam.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-twenty-twenty-six/20110731-IMG_02031.jpg",
        width: "2200",
        height: "1650",
        alt: "Statue of Liberty in the distance"
      }, {}, {})}`
    })}`
  })}`;
});
var index$8 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_twenty_twenty_eight,
  postData: postData$9
});
const postData$8 = {
  title: "Day eigteen - nineteen",
  subtitle: "Crater Lake",
  trip: "usa-2011",
  startDate: new Date("2011-07-20"),
  endDate: new Date("2011-07-21"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0924.jpg",
    width: 2200,
    height: 1461,
    alt: "Crater lake"
  }
};
const Day_eighteen_nineteen = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$8), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>After going to a car museum in Reno (I don&#39;t have any photo&#39;s from there. I can&#39;t remember if it
		wasn&#39;t allowed or I just didn&#39;t take any), we headed north towards the northern city of <strong>Portland</strong>.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0906.jpg",
    width: "2200",
    height: "1461",
    alt: "View of rural Oregon countryside"
  }, {}, {})}

${validate_component(Location, "Location").$$render($$result, {
    name: "Crater lake",
    height: 300,
    zoom: 800,
    focus: true,
    center: [-110.613953, 37.477791],
    markers: [
      {
        lat: 42.9446,
        long: -122.109,
        name: "Crater lake"
      },
      {
        lat: 45.5051,
        long: -122.675,
        name: "Portland"
      },
      {
        lat: 37.7749,
        long: -122.4194,
        name: "San Fransisco"
      },
      {
        lat: 34.0522,
        long: -118.2437,
        name: "Los Angeles"
      },
      {
        lat: 39.5296,
        long: -119.8138,
        name: "Reno"
      }
    ]
  }, {}, {
    default: () => `<p>About half-way between Reno and Portland lies a beautiful lake called <strong>Crater lake</strong>. And you guessed it, it&#39;s a lake formed from a crater.
	</p>
	<p>From the desert heat in Las Vegas and Death Valley, we went through the beautiful green
		mountains of Yosemite National Park, only to end up in the snow once again around the lake.
	</p>
	<p>Around the lake are a couple of viewpoints from where you can admire the lake.</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0919-Pano.jpg",
    width: "2200",
    height: "1016",
    alt: "Crater lake"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0927.jpg",
      width: "2200",
      height: "1461",
      alt: "Crater lake"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0929-Pano.jpg",
      width: "2200",
      height: "1073",
      alt: "Crater lake"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0943-Pano.jpg",
    width: "2200",
    height: "1060",
    alt: "Crater lake"
  }, {}, {})}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>There are a ton of squirrels around the viewpoints hunting for that delicious human food.</p>`
  })}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0931.jpg",
      width: "2200",
      height: "1461",
      alt: "Squirrel at Crater Lake"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0932.jpg",
      width: "2200",
      height: "1461",
      alt: "Squirrel at Crater Lake"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0948.jpg",
      width: "1461",
      height: "2200",
      alt: "Squirrel at Crater Lake"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0951.jpg",
    width: "2200",
    height: "1461",
    alt: "Crater lake"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Oregon mountains</h2>
	<p>From the lake we made our way up to Portland, where we spend the night.</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0959-Pano.jpg",
    width: "2200",
    height: "726",
    alt: "Mt. Hood"
  }, {}, {})}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0969.jpg",
    width: "2200",
    height: "1547",
    alt: "Oldtimer"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0970.jpg",
      width: "2200",
      height: "1461",
      alt: "Oregon mountains"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110720-_DSC0973.jpg",
      width: "1461",
      height: "2200",
      alt: "River or stream in Oregon"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Portland</h2>
	<p>The next day we took a Jetboat from <strong>Portland</strong> to
		<strong>Willamette Falls</strong> that you can recognise from several movies and tv shows. They told
		us you might get wet and that was no exaggeration, we were soaked after just a few hundred meters.
		I don&#39;t think I brougth a camera that day, so no photos.
	</p>
	<p>The next day we headed to the coast, to find the famous Highway One.</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-eighteen-nineteen/20110721-IMG_01181.jpg",
        width: "2200",
        height: "1650",
        alt: "Beach at Oregon"
      }, {}, {})}`
    })}`
  })}`;
});
var index$7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_eighteen_nineteen,
  postData: postData$8
});
const postData$7 = {
  title: "Day sixteen - seventeen",
  subtitle: "Yosemete National Park",
  trip: "usa-2011",
  startDate: new Date("2011-07-18"),
  endDate: new Date("2011-07-19"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110718-_DSC0835-Pano.jpg",
    width: 2200,
    height: 1424,
    alt: "View of Yosemite National Park"
  }
};
const Day_sixteen_seventeen = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$7), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>We had a long driving day ahead, we were all the way down in San Diego and we needed to go to
		Yosemite National Park. We stopped mid-way around Fresno, California where we visited a gun
		range to do some shootin&#39;.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110718-IMG_01011.jpg",
        width: "1650",
        height: "2200",
        alt: "Bullseye"
      }, {}, {})}`
    })}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110718-_DSC0825.jpg",
    width: "2200",
    height: "1461",
    alt: "Road leading up to Yosemite National Park"
  }, {}, {})}

${validate_component(Location, "Location").$$render($$result, {
    name: "Yosemete National Park",
    height: 300,
    zoom: 800,
    focus: true,
    center: [-110.613953, 37.477791],
    markers: [
      {
        lat: 32.7157,
        long: -117.1611,
        name: "San Diego",
        textPosition: "left"
      },
      {
        lat: 37.8651,
        long: -119.5383,
        name: "Yosemete Nat. Park"
      },
      {
        lat: 36.7378,
        long: -119.7871,
        name: "Fresno"
      },
      {
        lat: 37.7749,
        long: -122.4194,
        name: "San Fransisco",
        textPosition: "left"
      },
      {
        lat: 34.0522,
        long: -118.2437,
        name: "Los Angeles"
      },
      {
        lat: 39.5296,
        long: -119.8138,
        name: "Reno"
      }
    ]
  }, {}, {
    default: () => `<p>After Fresno we headed towards Yosemete National Park. It was quite busy at the park but the
		views were amazing.
	</p>
	<p>Due to the distance we had to cover that day we couldn&#39;t spend a whole lot of time at the park.
		We needed a place to sleep at the east side of the park, where there aren&#39;t a lot of
		hotels/towns, especially if you don&#39;t pre-book like we did.
	</p>
	<p>It was in the afternoon when we got there and it got dark quickly. Eventually we had to make our
		way all the way to Reno for an hotel with rooms.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110718-_DSC0835-Pano.jpg",
    width: "2200",
    height: "1424",
    alt: "View of Yosemite National Park"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110719-_DSC0889.jpg",
      width: "2200",
      height: "1461",
      alt: "Stream in Yosemite National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110719-_DSC0883.jpg",
      width: "1461",
      height: "2200",
      alt: "Stream in Yosemite National Park"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110719-_DSC0865.jpg",
    width: "2200",
    height: "1461",
    alt: "Stream in Yosemite National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>The park was a lot less busy when we had to make our way to the hotel, because we were exiting
		on the East side, where not a lot of towns are and most people had already left to make it to
		their hotels for dinner time. Which meant we could enjoy the views almost alone.
	</p>`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110719-_DSC0890.jpg",
    width: "2200",
    height: "1461",
    alt: "View of Yosemite National Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110719-_DSC0891.jpg",
    width: "2200",
    height: "1461",
    alt: "View of Yosemite National Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110719-_DSC0897-Pano.jpg",
    width: "2200",
    height: "994",
    alt: "Lake at Yosemite National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>After driving through the evening we stopped at <strong>Reno</strong>, the biggest little city
		in the world.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110719-IMG_01031.jpg",
        width: "2200",
        height: "1650",
        alt: "Reno sign"
      }, {}, {})}`
    })}`
  })}`;
});
var index$6 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_sixteen_seventeen,
  postData: postData$7
});
const postData$6 = {
  title: "Day twelve - fifteen",
  subtitle: "Mexican Border and San Diego",
  trip: "usa-2011",
  startDate: new Date("2011-07-15"),
  endDate: new Date("2011-07-17"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0682.jpg",
    width: 2200,
    height: 1461,
    alt: "The Mexican border"
  }
};
const Day_twelve_fifteen = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$6), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>Instead of heading up to Yosemete National Park from Death valley, we made a little detour, the
		opposite way, towards the Mexican border.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0682.jpg",
      width: "2200",
      height: "1461",
      alt: "The Mexican border"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0685.jpg",
      width: "2200",
      height: "1461",
      alt: "Farm in southern California"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Junkyard / Old car museum</h2>
	<p>While driving along the border we noticed what looked like Junkyard, but it had a welcome sign
		so we obliged.
	</p>
	<p>Turns out it was a car museum of sorts where they restored old cards from the 20&#39;s-70&#39;s, they
		had some really cool vehicles there. With not much else planned for the day we wandered around
		there for an hour or so.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0687.jpg",
    width: "2200",
    height: "1461",
    alt: "Hood ornament"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0695.jpg",
      width: "1461",
      height: "2200",
      alt: "Junkyard"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0723.jpg",
      width: "2200",
      height: "1461",
      alt: "Stop Vacuum"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0708.jpg",
    width: "2200",
    height: "1461",
    alt: "Richfield tanker"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0709.jpg",
      width: "2200",
      height: "1461",
      alt: "Old truck"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0725.jpg",
      width: "2200",
      height: "1461",
      alt: "Windshield with bullet holes"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-_DSC0749.jpg",
    width: "2200",
    height: "1461",
    alt: "Old army jeep"
  }, {}, {})}

${validate_component(Location, "Location").$$render($$result, {
    name: "San Diego",
    height: 320,
    zoom: 800,
    focus: true,
    center: [-108.613953, 37.477791],
    markers: [
      {
        lat: 32.7157,
        long: -117.1611,
        name: "San Diego",
        textPosition: "left"
      },
      {
        lat: 36.1699,
        long: -115.1398,
        name: "Las Vegas"
      },
      {
        lat: 37.7749,
        long: -122.4194,
        name: "San Fransisco"
      },
      {
        lat: 34.0522,
        long: -118.2437,
        name: "Los Angeles"
      }
    ]
  }, {}, {
    default: () => `<p>After the Junkyard we made our way to <strong>San Diego</strong>, where the Pacific Ocean and
		the Mexican border meet.
	</p>
	<p>We had a hotel downtown with a view of the aircraft carrier USS Midway. We booked the hotel on
		Priceline and it was waaay to fancy for two slipper and shorts wearing people.
	</p>
	<p>We explored down-town San Diego, especially the bars..</p>
	<p>It was the first (and last!) hangover I&#39;ve ever had on a trip. That day we went to SeaWorld wich
		was super busy, not great with a ringing headache.
	</p>`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110715-IMG_00811.jpg",
        width: "2200",
        height: "1650",
        alt: "View of the USS Midway in San Diego"
      }, {}, {})}`
    })}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>SeaWorld</h2>
	<p>SeaWorld was pretty nice, we got a tip from an employee about which order to watch the various
		shows through the day, as they all reference eachother with jokes that only make sense in that
		order.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110716-IMG_00871.jpg",
      width: "2200",
      height: "1650",
      alt: "Seaworld San Diego show"
    }, {}, {})}

	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110717-IMG_00921.jpg",
      width: "1650",
      height: "2200",
      alt: "Sharps Secure Needle holder"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>That evening we did not explore the bars of San Diego, but did some nessecary laundry, which
		made for nice room decorations. Oh the glamour of road-tripping.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-fourteen-seventeen/20110717-IMG_00931.jpg",
        width: "1650",
        height: "2200",
        alt: "Socks"
      }, {}, {})}`
    })}`
  })}`;
});
var index$5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_twelve_fifteen,
  postData: postData$6
});
const postData$5 = {
  title: "Day nine - eleven",
  subtitle: "Death Valley",
  trip: "usa-2011",
  startDate: new Date("2011-07-12"),
  endDate: new Date("2011-07-14"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0645.jpg",
    width: 2200,
    height: 1461,
    alt: "View of sand dunes at Death Valley National Park"
  }
};
const Day_nine_eleven = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$5), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>After the obligatory stop at Las Vegas, where we explored the strip and the casino&#39;s (without a
		Camera) we were ready to get to the next destination: <strong>Death Valley National Park</strong>. But not before having an excellent BLT sandwich at Mel&#39;s Diner.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-IMG_00751.jpg",
        width: "2200",
        height: "1650",
        alt: "Mels Diner in Death Valley National Park"
      }, {}, {})}`
    })}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0620.jpg",
    width: "2200",
    height: "1461",
    alt: "Road leading up to Death Valley National Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0622.jpg",
    width: "2200",
    height: "1461",
    alt: "Entrance sign of Death Valley National Park"
  }, {}, {})}

${validate_component(Location, "Location").$$render($$result, {
    name: "Death Valley National Park",
    height: 350,
    zoom: 800,
    focus: true,
    center: [-118.613953, 37.477791],
    markers: [
      {
        lat: 39.7392,
        long: -104.9903,
        name: "Denver"
      },
      {
        lat: 36.5054,
        long: -117.0794,
        name: "Death Valley Nat. Park",
        textPosition: "left"
      },
      {
        lat: 36.1699,
        long: -115.1398,
        name: "Las Vegas"
      },
      {
        lat: 37.7749,
        long: -122.4194,
        name: "San Fransisco"
      },
      {
        lat: 34.0522,
        long: -118.2437,
        name: "Los Angeles"
      }
    ]
  }, {}, {
    default: () => `<p>This national park is relatively close to Las Vegas and a popular day-trip destination. The
		closer you get to the park, the higher the temperature gets. 40-50 degrees Celcius are no
		exceptions, make sure you have plenty of water and a car with good air conditioning!
	</p>
	<p>It&#39;s not really a park where you get out and explore on foot, due to the heat, but it&#39;s amazing
		to drive around in nonetheless.
	</p>
	<p>If you watch carefully you might see cars wrapped in black and white triangles, which are new
		models of cars that are tested in the valley for their heat endurance.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0623.jpg",
    width: "2200",
    height: "1461",
    alt: "View of Death Valley National Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0624.jpg",
    width: "2200",
    height: "1461",
    alt: "View of Death Valley National Park showing signs pointing to 190 East and West"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Twenty Mule teams</h2>
	<p>One of the attractions at the park is a remnant of a 20 Mule Team convoy. These were used to
		transport Borax through the desert, not a pleasant job in this heat!
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0633.jpg",
    width: "2200",
    height: "1461",
    alt: "Twenty Mule Teams at Death Valley National Park"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0635.jpg",
      width: "2200",
      height: "1461",
      alt: "Twenty Mule Teams at Death Valley National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0636.jpg",
      width: "2200",
      height: "1461",
      alt: "Sign describing Twenty Mule Teams at Death Valley National Park"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Sand dunes</h2>
	<p>From the Twenty Mule Teams we made our way deeper into the valley, just before you drop down to
		the valley floor you come across amazing Sand Dunes, which would not look out of place in a Star
		Wars movie.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0643.jpg",
    width: "2200",
    height: "1461",
    alt: "View of sand dunes at Death Valley National Park"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0646.jpg",
      width: "2200",
      height: "1461",
      alt: "View of sand dunes at Death Valley National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0647.jpg",
      width: "2200",
      height: "1461",
      alt: "View of sand dunes at Death Valley National Park"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110713-_DSC0645.jpg",
    width: "2200",
    height: "1461",
    alt: "View of sand dunes at Death Valley National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>At some point in the valley you&#39;ll be completely cut-off from civilisation. The only thing still
		working is a crappy AM radio station broacasting Christian music.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110714-_DSC0648.jpg",
      width: "2200",
      height: "1461",
      alt: "Road in Death Valley National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110714-_DSC0650.jpg",
      width: "2200",
      height: "1461",
      alt: "Road in Death Valley National Park"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110714-_DSC0651.jpg",
    width: "2200",
    height: "1461",
    alt: "Road in Death Valley National Park"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110714-_DSC0656.jpg",
      width: "2200",
      height: "1461",
      alt: "Boulders at Death Valley National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110714-_DSC0652.jpg",
      width: "2200",
      height: "1461",
      alt: "Bush in Death Valley National Park"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110714-_DSC0660.jpg",
    width: "2200",
    height: "1461",
    alt: "Boulders at Death Valley National Park"
  }, {}, {})}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110714-_DSC0664.jpg",
    width: "2200",
    height: "1461",
    alt: "Boulders at Death Valley National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>After all the driving today we rewarded ourselves with some delicious food.</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-ten-thirteen/20110714-IMG_00801.jpg",
        width: "2200",
        height: "1650",
        alt: "In-N-Out mmmm"
      }, {}, {})}`
    })}`
  })}`;
});
var index$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_nine_eleven,
  postData: postData$5
});
const postData$4 = {
  title: "Day one-six",
  subtitle: "From New-York/Allentown to The Rocky Mountains.",
  trip: "usa-2011",
  startDate: new Date("2011-07-04"),
  endDate: new Date("2011-07-09"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0155.jpg",
    width: 2200,
    height: 1461,
    alt: "View of valley in Rocky Mountains Nat. Park."
  }
};
const Day_one_six = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$4), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>The trip started with a delay of one day, this because my travel buddy had an Uncle who was a
		pilot at Continental Airlines and we could fly very cheaply, but only on stand-by seats. Our
		first attempt ended in a drive back home from Schiphol Airport, as there were no stand-by seats
		that day.
	</p>
	<p>The second day we had more luck and we made our way to New York City via Newark Liberty
		International Airport.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110704-IMG_0016-1.jpg",
        width: "2200",
        height: "1650",
        alt: "Photo of In flight entertainment system"
      }, {}, {})}`
    })}
	<p>From New York we had to take a bus to Allentown, Pennsylvania where the Pilot Uncle lived with
		his wife. They offered to let us stay for a few days for the 4th of July celebration, very cool!
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110705-_DSC0002.jpg",
    width: "2200",
    height: "1461",
    alt: "Burger beeing grilled"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>Most days were spent exploring the area, helping out with various chores around the house and
		grilling some meat on the BBQ.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110705-_DSC0006.jpg",
    width: "2200",
    height: "1461",
    alt: "View of road in Allentown"
  }, {}, {})}

${validate_component(Location, "Location").$$render($$result, {
    name: "New York & Allentown to Denver, Colorado",
    height: 320,
    zoom: 600,
    focus: true,
    center: [-90.613953, 38.477791],
    markers: [
      {
        lat: 40.613953,
        long: -75.477791,
        name: "Allentown",
        textPosition: "left"
      },
      {
        lat: 40.7128,
        long: -74.006,
        name: "New York"
      },
      {
        lat: 41.8781,
        long: -87.6298,
        name: "Chicago"
      },
      {
        lat: 41.2565,
        long: -95.9345,
        name: "Omaha"
      },
      {
        lat: 39.7392,
        long: -104.9903,
        name: "Denver"
      }
    ]
  }, {}, {
    default: () => `<p>While I had been to the USA a couple of times before with work for conferences, this was the
		first time on a month-long road trip from the east coast to the west coast.
	</p>
	<p>We started in Allentown on the 5th, after a great 4th of July celebration with more (and bigger,
		louder) fireworks than I&#39;ve ever seen in my Life.
	</p>
	<p>We got our Rental Car (a Jeep Grand Cherokee) and from Allentown we made our way to Denver,
		Colorado via cities such as Pittsburgh, <strong>Chicago</strong>, Des Moines,
		<strong>Omaha</strong>
		and finally ending up at <strong>Denver</strong></p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110708-_DSC0012.jpg",
    width: "2200",
    height: "1461",
    alt: "Person driving a JEEP"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>Most days were spent entirely on the road, just driving to the neverending rolling hills with
		farmland. Around Omaha the scenery started to change and slowly the land became more barren and
		you&#39;d see road signs telling you the next place to get Gas is hundreds of miles away. And to not
		pick up hitchhikers, only to notice a Prison in the far distance.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110708-_DSC0018.jpg",
    width: "2200",
    height: "1461",
    alt: "Nebraska scenery"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Rocky Mountain National Park.</h2>
	<p>After a few days we arrived in Denver, with the Rocky Mountains looming in the background, a
		great sight! After a night in a local motel we crossed into the Rocky Mountains.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0036.jpg",
      width: "1461",
      height: "2200",
      alt: "View of the Rocky Mountains"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0023.jpg",
      width: "2200",
      height: "1461",
      alt: "View of a pass in Colorado"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0028.jpg",
    width: "2200",
    height: "1461",
    alt: "View of the Rocky Mountains"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>The great thing about road-trips is that you can stop anywhere to rest or eat. Our car was
		packed with the biggest cooler that would fit, filled with ice, drinks and condiments. The most
		dificult part was to find bread that&#39;s edible and not white and 90% sugar. I like my bread
		brown/whole-wheat thank you!
	</p>
	<p>Aaaaanyway, we stopped over near a stream and made our way upstream to a waterfall where we had
		a very nice lunch, surrounded by nature.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0032.jpg",
    width: "2200",
    height: "1461",
    alt: "View of the Rocky Mountains"
  }, {}, {})}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0045.jpg",
    width: "2200",
    height: "1461",
    alt: "View of the Rocky Mountains"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>After a while we made it to the National Park proper. On this first trip we did most things the
		&quot;American way&quot;, which means pull over at the viewpoint, walk 10m and take some photos and on to
		the next viewpoint.
	</p>
	<p>On later trips, I made a point of always exploring the area further, even going on hour-long
		hikes just to get a better sense of the area. It&#39;s something I wished I did on this trip as
		well.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0051.jpg",
      width: "2200",
      height: "1461",
      alt: "View in Rocky Mountains Nat. Park."
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0054.jpg",
      width: "2200",
      height: "1461",
      alt: "Sign that says: Your entrance fee makes this project possible"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0076-Edit.jpg",
    width: "2200",
    height: "810",
    alt: "View of valley in Rocky Mountains Nat. Park."
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0071.jpg",
      width: "1461",
      height: "2200",
      alt: "View of stream in Rocky Mountains Nat. Park."
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0149.jpg",
      width: "1461",
      height: "2200",
      alt: "View of valley in Rocky Mountains Nat. Park."
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0155.jpg",
    width: "2200",
    height: "1461",
    alt: "View of valley in Rocky Mountains Nat. Park."
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>What I love about America is that there is a huge diversity of climates and temperatures. One
		minute you&#39;re driving through beatiful, lush valleys and the next you&#39;re right in the snow.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0161.jpg",
    width: "2200",
    height: "1461",
    alt: "Snow in Rocky Mountains Nat. Park."
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0196.jpg",
      width: "2200",
      height: "1461",
      alt: "View of snowy mountains in Rocky Mountains Nat. Park."
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0197.jpg",
      width: "2200",
      height: "1461",
      alt: "View in Rocky Mountains Nat. Park."
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0204.jpg",
    width: "2200",
    height: "1461",
    alt: "Snow in Rocky Mountains Nat. Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>We stopped for a break at one of the many Picknick area&#39;s and then made our way out of the park,
		down the <strong>Colorado River</strong> to <strong>Utah</strong>, state of many beautiful
		National Parks.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0209.jpg",
      width: "2200",
      height: "1461",
      alt: "Road closed sign in Rocky Mountains Nat. Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-one-six/20110709-_DSC0219.jpg",
      width: "2200",
      height: "1461",
      alt: ""
    }, {}, {})}`
  })}`;
});
var index$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_one_six,
  postData: postData$4
});
const postData$3 = {
  title: "Day eight",
  subtitle: "Bryce Canyon and Zion National Park",
  trip: "usa-2011",
  startDate: new Date("2011-07-11"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0527.jpg",
    width: 2200,
    height: 1461,
    alt: "Far view of Bryce Canyon National Park"
  }
};
const Day_eight$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$3), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>I&#39;ll be honest, the details are a bit hazy after all these years. I didn&#39;t to a great job of
		journaling this trip when I made it and due to camera time settings and timezones it&#39;s tricky to
		determine what was visited on which day.
	</p>
	<p>I <i>think</i> it was day eight when we visited Bryce Canyon, but it could also have been the second
		park on the seventh day \xAF\\_(\u30C4)_/\xAF.
	</p>
	<p>The weather wasn&#39;t super great, with lots of cloud and rain every now and then. Luckily we stuck
		to our ways and never wandered far from the viewpoints.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0457.jpg",
    width: "2200",
    height: "1461",
    alt: "Road leading up to Bryce Canyon, stuck behind a CruiseAmerica camper"
  }, {}, {})}

${validate_component(Location, "Location").$$render($$result, {
    name: "Bryce Canyon National Park",
    height: 300,
    zoom: 800,
    focus: true,
    center: [-110.613953, 37.477791],
    markers: [
      {
        lat: 39.7392,
        long: -104.9903,
        name: "Denver"
      },
      {
        lat: 38.7331,
        long: -109.5925,
        name: "Arches Nat. Park",
        textPosition: "left"
      },
      {
        lat: 37.593,
        long: -112.1871,
        name: "Bryce Canyon Nat. Park"
      },
      {
        lat: 37.2982,
        long: -113.0263,
        name: "Zion Nat. Park",
        textPosition: "left"
      },
      {
        lat: 36.1699,
        long: -115.1398,
        name: "Las Vegas"
      }
    ]
  }, {}, {
    default: () => `<p>As before, the main parks almost everyone on a east-west roadtrip visits are <strong>Arches National Park</strong>, <strong>Bryce Canyon National Park</strong>, <strong>Zion National Park</strong> and
		<strong>Canyonlands National Park</strong>.
	</p>
	<p>Today was the day of Bryce Canyon National Park. It&#39;s is such a weird place. You drive through a
		flat valley for what seems ages and there&#39;s just no way that this valley can hide what
		eventually are the views of the canyon.
	</p>
	<p>But it does, and when you finally get there, the views are amazing!</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-panorama4.jpg",
    width: "2200",
    height: "614",
    alt: "Panorama of Bryce Canyon"
  }, {}, {})}

${validate_component(Explanation, "Explanation").$$render($$result, {}, {}, {
    default: () => `<p>Just a heads up, I just discovered you could take Panorama photos by just bursting a ton of
		photos and let Photoshop figure it out.
	</p>
	<p>I wish I hadn&#39;t learned that, because most photos at the viewpoint now consist of tons of
		vertical photo bursts with no straight horizon whatsoever. So enjoy the letterbox Panorama
		photos :P.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-panorama5.jpg",
    width: "2200",
    height: "968",
    alt: "Panorama of Bryce Canyon National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>Well I did <i>try</i> to frame the photo&#39;s ;)
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0492.jpg",
    width: "2200",
    height: "1461",
    alt: "Framing a view of Bryce Canyon National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>The main route through the park takes you along the rim and every couple of hundred meters
		there&#39;s a new viewpoint with a completely different view of the valley.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0498-Pano.jpg",
    width: "2200",
    height: "1209",
    alt: "scenic view of Bryce Canyon National Park"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0508.jpg",
      width: "1461",
      height: "2200",
      alt: "Dead tree in Bryce Canyon National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0509.jpg",
      width: "1461",
      height: "2200",
      alt: "Valley view in Bryce Canyon National Park"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0505.jpg",
    width: "2200",
    height: "1461",
    alt: "scenic view of Bryce Canyon National Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0530-Pano.jpg",
    width: "2200",
    height: "1028",
    alt: "Bryce Canyon National Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0527.jpg",
    width: "2200",
    height: "1461",
    alt: "Far view of Bryce Canyon National Park"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0523.jpg",
      width: "1461",
      height: "2200",
      alt: "View of rock arch in Bryce Canyon National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0537.jpg",
      width: "1461",
      height: "2200",
      alt: "Bryce Canyon National Park"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0539.jpg",
    width: "2200",
    height: "1461",
    alt: "Bryce Canyon National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>Ah, right we also saw some deer near the road on our way back!</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0546.jpg",
    width: "2200",
    height: "1461",
    alt: "Bryce Canyon National Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0549-Pano.jpg",
    width: "2200",
    height: "1205",
    alt: "Bryce Canyon?"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Zion National Park</h2>
	<p>After Bryce Canyon we still had some daylight to spare so we headed to Zion National Park.</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0558.jpg",
    width: "2200",
    height: "1461",
    alt: "Road to Zion National Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0563-Pano.jpg",
    width: "2200",
    height: "1339",
    alt: "View around Zion National Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-_DSC0564.jpg",
    width: "2200",
    height: "1461",
    alt: "Rocks at Zion National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>With time limited we managed to make our way to the bottom of the canyon and walk around on the
		canyon floor, before taking the bus back to the park entrance.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110712-_DSC0570.jpg",
    width: "2200",
    height: "1461",
    alt: "Valley bottom at Zion National Park"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110712-_DSC0577.jpg",
      width: "1461",
      height: "2200",
      alt: "Valley at Zion National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110712-_DSC0589.jpg",
      width: "2200",
      height: "1461",
      alt: "Bus at Zion National Park"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>In our hotel/inn that evening we were watching TV and suddenly there was this horrendous noise,
		wich turned out to be the Emergency Alert sytem notifying us of flood warnings. Pretty neat to
		have experienced that without some bigger disaster.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2011/day-eight/20110711-IMG_0067.jpg",
        width: "2200",
        height: "1650",
        alt: "Emergency Alert System flood warning"
      }, {}, {})}`
    })}`
  })}`;
});
var index$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_eight$1,
  postData: postData$3
});
const postData$2 = {
  title: "Day seven",
  subtitle: "Arches and dead horses",
  trip: "usa-2011",
  startDate: new Date("2011-07-10"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0345.jpg",
    width: 2200,
    height: 1461,
    alt: "View of arches in Arches Nat. Park"
  }
};
const Day_seven = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$2), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>After a good night&#39;s sleep we were on our way to our second National park, named Arches National
		Park, but not before corssing into UTAH with it&#39;s beautiful desert-like scenery.
	</p>`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0231.jpg",
    width: "2200",
    height: "1461",
    alt: "US Highway with truck passing, in Utah"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0224.jpg",
      width: "2200",
      height: "1461",
      alt: "Utah scenery on the way to Moab"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0226.jpg",
      width: "2200",
      height: "1461",
      alt: "Utah scenery on the way to Moab"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0233.jpg",
    width: "2200",
    height: "1461",
    alt: "View in rear-view mirror, showing Utah Highway"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>After a couple of hours the landscape began to change from flat-ish desert to more Rock-like
		formations, a sign we were getting closer to the park.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0242.jpg",
    width: "2200",
    height: "1461",
    alt: "View of the road leading up to Arches Nat. Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0243.jpg",
    width: "2200",
    height: "1461",
    alt: "View of rock near Arches Nat. Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>A couple of kilometers before the park there&#39;s a little pull-out with a small church, and more
		amazing views, which we decided to explore.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0252.jpg",
    width: "2200",
    height: "1461",
    alt: "Small church near Arches Nat. park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0249.jpg",
    width: "2200",
    height: "1461",
    alt: "View of rock near Arches Nat. Park"
  }, {}, {})}

${validate_component(Location, "Location").$$render($$result, {
    name: "Arches National Park",
    height: 320,
    zoom: 600,
    focus: true,
    center: [-100.613953, 38.477791],
    markers: [
      {
        lat: 40.7128,
        long: -74.006,
        name: "New York",
        textPosition: "left"
      },
      {
        lat: 39.7392,
        long: -104.9903,
        name: "Denver"
      },
      {
        lat: 38.7331,
        long: -109.5925,
        name: "Arches Nat. Park",
        textPosition: "left"
      },
      {
        lat: 36.1699,
        long: -115.1398,
        name: "Las Vegas"
      }
    ]
  }, {}, {
    default: () => `<p>The United States have many great national parks and the state of Utah happens to have a coulpe
		of the highlight parks.
	</p>
	<p>The main parks almost everyone on a east-west roadtrip visits are <strong>Arches National Park</strong>, <strong>Bryce Canyon National Park</strong>, <strong>Zion National Park</strong> and
		<strong>Canyonlands National Park</strong>.
	</p>
	<p>The park tour starts with a bang, beautiful views of spectacular rock formations just around the
		first bend after climbing a big hill.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0310.jpg",
    width: "2200",
    height: "1461",
    alt: "View of stones in Arches Nat. Park"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0311.jpg",
      width: "1461",
      height: "2200",
      alt: "View in Arches Nat. Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0312.jpg",
      width: "1461",
      height: "2200",
      alt: "Rock in Arches Nat. Park"
    }, {}, {})}`
  })}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>Making our way down into the flats, there were lots of pull-outs from the main route with great
		views.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0320.jpg",
    width: "2200",
    height: "1461",
    alt: "Scenery in Arches Nat. Park"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0321.jpg",
      width: "2200",
      height: "1461",
      alt: "Landscape scenery in Arches Nat. Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0322.jpg",
      width: "2200",
      height: "1461",
      alt: "Landscape scenery with a large rock in Arches Nat. Park"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-panorama2.jpg",
    width: "2200",
    height: "686",
    alt: "Panorama of scenery in Arches Nat. Park"
  }, {}, {})}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Ancient Sand Dunes</h2>
	<p>Names of things in the park are generally pretty grand, such as this view of the Ancient Sand
		Dunes
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0337.jpg",
    width: "2200",
    height: "1461",
    alt: "Scenery showing little vegetation in Arches Nat. Park"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0339.jpg",
      width: "2200",
      height: "1461",
      alt: "Information sign of Ancient Sand Dunes in Arches Nat. Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0342.jpg",
      width: "1461",
      height: "2200",
      alt: "Vertical boulders in Arches Nat. Park"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>In the distance we could finally see our first Arches.</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0345.jpg",
    width: "2200",
    height: "1461",
    alt: "View of arches in Arches Nat. Park"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0347.jpg",
      width: "2200",
      height: "1461",
      alt: "View of balancing boulder in Arches Nat. Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0359.jpg",
      width: "2200",
      height: "1461",
      alt: "Vertical rock in Arches Nat. Park"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>True to our American way of visiting parks on this trip we didn&#39;t venture far from our car,
		missing out on some truely spectacular views. Luckly I was able to make it up on future trips.
		Always explore the area around the viewpoints, folks!
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0364.jpg",
    width: "2200",
    height: "1461",
    alt: "Arch in Arches Nat. Park"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0366.jpg",
    width: "2200",
    height: "1461",
    alt: "Arch in Arches Nat. Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>We took a side-road down to the valley floor where we spotted some local critters.</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0392.jpg",
    width: "2200",
    height: "1318",
    alt: "Lizzard/Gekko in Arches Nat. Park"
  }, {}, {})}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0395.jpg",
    width: "2200",
    height: "1461",
    alt: "Desert view in Arches Nat. Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>Dead Horse Point State Park</h2>
	<p>Across from Arches is a lesser known park, called Dead Horse Point State Park. It&#39;s still quite
		a trip from the road leading up to Arches climbing pretty steeply all the way. At the end is a
		parking spot and a restaurant almost hanging over the cliff where we got some coffee to
		energize.
	</p>
	<p>It is worth the trouble, though as once you&#39;re up there, the views are <strong>amazing</strong>.
		I highly recommend the detour!
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0423-Edit.jpg",
    width: "2200",
    height: "715",
    alt: "View of the Colorado river in Dead Horse Point State Park"
  }, {}, {})}
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0437.jpg",
      width: "1461",
      height: "2200",
      alt: "View of the Colorado river in Dead Horse Point State Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0453.jpg",
      width: "2200",
      height: "1461",
      alt: "View of the Colorado river in Dead Horse Point State Park"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2011/day-seven/20110710-_DSC0428-Edit.jpg",
    width: "2200",
    height: "856",
    alt: "Panoramic view of the Colorado river in Dead Horse Point State Park"
  }, {}, {})}`;
});
var index$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_seven,
  postData: postData$2
});
const tripData = {
  title: "USA 2012",
  subtitle: "Same trip, different people.",
  trip: "usa-2012",
  startDate: new Date("2012-06-04"),
  endDate: new Date("2012-06-25"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2011/day-sixteen-seventeen/20110718-_DSC0835-Pano.jpg",
    width: 2200,
    height: 1424,
    alt: "View of Yosemite National Park"
  },
  countries: ["United States of America"]
};
const Usa_2012 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(tripData), {}, {})}

<div class="${"max-w-screen-xl mx-auto"}">${validate_component(Map, "Map").$$render($$result, {
    highlight: tripData.countries,
    height: 800,
    zoom: 250,
    center: [0, 10]
  }, {}, {})}</div>`;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Usa_2012,
  tripData
});
const postData$1 = {
  title: "Day one - seven",
  subtitle: "From New-York to Denver.",
  trip: "usa-2012",
  startDate: new Date("2012-06-04"),
  endDate: new Date("2012-06-10"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120605-IMG_0807.jpg",
    width: 2200,
    height: 1650,
    alt: "View of central park from Top of the Rock"
  }
};
const Day_one_seven = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData$1), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>We flew from Schiphol Airport (AMS) to Newark Liberty International Airport (EWR) in New Jersey.
		We had an airbnb on the Jersey side of the Hudson river, and we hopped the hudson every day with
		the PATH subway.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120604-IMG_07822.jpg",
        width: "2200",
        height: "1650",
        alt: "View of airbridge at Schiphol airport"
      }, {}, {})}`
    })}
	<p>No friends with uncles that could get us cheap flights this time. It was a trip on a KLM
		airplane, back in a time where In Flight Entertainment wasn&#39;t a given yet. Unfortutely the
		screen at the bulkhead didn&#39;t do us much good either.
	</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120604-IMG_07862.jpg",
        width: "1650",
        height: "2200",
        alt: "Blocking the view"
      }, {}, {})}`
    })}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h2>New York City</h2>
	<p>The first few days were spend wandering around New York City, with no clear plan. Just getting
		good food and enjoying the views.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120605-IMG_0801.jpg",
      width: "2200",
      height: "1650",
      alt: "View down a New York Avenue"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120605-IMG_0797.jpg",
      width: "1650",
      height: "2200",
      alt: "Freedom tower under construction"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h3>Top of the Rock</h3>
	<p>A must-do in New York is Top of the Rock. I think it gives a better view of New York than the
		Chrystler building and the NBC store at the bottom is nice to get some Community swag.
	</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120128-new_york_panorama.jpg",
    width: "2200",
    height: "875",
    alt: "New York panorama from Top of the Rock"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h3>Times Square</h3>
	<p>Hated by locals, loved by tourists. Still it&#39;s fun to visit Times Square every once in a while.
		Even if it&#39;s just to check if the people in Elmo costumes are still there.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120606-IMG_0834.jpg",
      width: "2200",
      height: "1650",
      alt: "View of Times Square"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120606-IMG_0837.jpg",
      width: "2200",
      height: "1650",
      alt: "View of Times Square"
    }, {}, {})}`
  })}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<h3>Yankee Stadium</h3>
	<p>At the end of the day we took a subway to Harlem, towards Yankee Stadium. We had no issues
		figuring out what train to take as the ones heading to the stadium were packed with Yankee fans
		in full kit.
	</p>
	<p>We enjoyed a nice baseball game with all the traditions such as the Anthem and the games in
		between rounds, very fun!
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120606-IMG_0840.jpg",
      width: "2200",
      height: "1650",
      alt: "Inside Yankee stadium"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120606-IMG_0842.jpg",
      width: "2200",
      height: "1650",
      alt: "Yankee stadium baseball match"
    }, {}, {})}`
  })}

${validate_component(Location, "Location").$$render($$result, {
    name: "New York to Denver",
    height: 380,
    zoom: 600,
    focus: true,
    center: [-90.613953, 38.477791],
    markers: [
      {
        lat: 40.7128,
        long: -74.006,
        name: "New York"
      },
      {
        lat: 41.8781,
        long: -87.6298,
        name: "Chicago"
      },
      {
        lat: 41.2565,
        long: -95.9345,
        name: "Omaha"
      },
      {
        lat: 39.7392,
        long: -104.9903,
        name: "Denver"
      }
    ]
  }, {}, {
    default: () => `<p>After the first few days in New York it was time to get the rental car, I believe we picked it
		up from the Airport, but I can&#39;t remember. Anyway it&#39;s a nice Nissan SUV with loads of space
		that would soon be taken up by a giant cooler for drinks, lunch and snacks.
	</p>
	<p>We&#39;re not quite sure why but birds seemed to love the front-bumper of this car, shame we were
		doing 50+ miles an hour when it happened (multiple times!).
	</p>
	<p>It may not be the most interesting part of the country, view wise, but it&#39;s nice to do the trip
		to Denver regardless. Just to get used to the Hotel/Motel/Inn life on the road without the
		stress of having to be at places on time.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120607-_DSC0038.jpg",
      width: "2200",
      height: "1461",
      alt: "View of highway with truck"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120608-IMG_08662.jpg",
      width: "2200",
      height: "1156",
      alt: "Sign that says Toledo and Detroit"
    }, {}, {})}`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120610-_DSC0152.jpg",
    width: "2200",
    height: "1461",
    alt: "Windmill"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120609-IMG_08792.jpg",
      width: "2200",
      height: "1650",
      alt: "Farmland"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120609-_DSC0120.jpg",
      width: "2200",
      height: "1461",
      alt: "Boo Cruiser Haunted Hollow"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120610-_DSC0142.jpg",
    width: "2200",
    height: "1461",
    alt: "Union Pacific train"
  }, {}, {})}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120610-_DSC0169.jpg",
    width: "2200",
    height: "1461",
    alt: "Farmland"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-one-seven/20120610-_DSC0171.jpg",
    width: "2200",
    height: "1461",
    alt: "Denver without traffic"
  }, {}, {})}`;
});
var dayOneSeven = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_one_seven,
  postData: postData$1
});
const postData = {
  title: "Day eight",
  subtitle: "Rocky Mountains National Park",
  trip: "usa-2012",
  startDate: new Date("2012-06-11"),
  image: {
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0335.jpg",
    width: 2200,
    height: 1461,
    alt: "Yosemite National Park"
  }
};
const Day_eight = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TripHeader, "TripHeader").$$render($$result, Object.assign(postData), {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>The day stared with a nice bruch near a lake, we had lunch from our cooler (sandwiches) and a
		great view to boot!
	</p>`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-IMG_08892.jpg",
    width: "2200",
    height: "1650",
    alt: "View of a lake"
  }, {}, {})}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0178.jpg",
    width: "2200",
    height: "1461",
    alt: "View of farmland"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>The road leading into the Rocky Mountains had a waterfall where we stopped for some photos.</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0197.jpg",
      width: "1461",
      height: "2200",
      alt: "Waterfall near Yosemite National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0206.jpg",
      width: "1461",
      height: "2200",
      alt: "Rocks near Yosemite National Park"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0219.jpg",
    width: "2200",
    height: "1461",
    alt: "Waterfall near Yosemite National Park"
  }, {}, {})}

${validate_component(Location, "Location").$$render($$result, {
    name: "Rocky Mountains National Park",
    height: 300,
    zoom: 800,
    focus: true,
    center: [-110.613953, 38.477791],
    markers: [
      {
        lat: 39.7392,
        long: -104.9903,
        name: "Denver"
      },
      {
        lat: 40.3428,
        long: -105.6836,
        name: "Rocky Mountains Nat. Park",
        textPosition: "left"
      },
      {
        lat: 36.1699,
        long: -115.1398,
        name: "Las Vegas"
      }
    ]
  }, {}, {
    default: () => `<p>This part of the route is the same as last year. My travel buddy this time hadn&#39;t seen any of
		the parks yet (well he hadn&#39;t been to the USA yet, so he hadn&#39;t seen anything).
	</p>
	<p>While the must-do parks were mostly the same, this trip did &quot;split off&quot; from the beaten path and
		we did some other things as well.
	</p>
	<p>I didn&#39;t really mind visiting the parks again and since I was the &quot;tour leader&quot; it&#39;s nice to
		have a few spots where you already know how to get there and how long things take.
	</p>`
  })}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0252.jpg",
      width: "2200",
      height: "1461",
      alt: "Yosemite National Park"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0285.jpg",
      width: "2200",
      height: "1461",
      alt: "Yosemite National Park"
    }, {}, {})}`
  })}
${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>Time for some lunch at a bar/diner. A BLT with french fries.</p>
	${validate_component(PhonePic, "PhonePic").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-IMG_08922.jpg",
        width: "2200",
        height: "1650",
        alt: "Inside of a bar"
      }, {}, {})}`
    })}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0335.jpg",
    width: "2200",
    height: "1461",
    alt: "Yosemite National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>The views were just as amazing as last year.</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    full: true,
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-panorama5.jpg",
    width: "2200",
    height: "719",
    alt: "Yosemite National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>This was also the last day we did not venture from the viewpoints.</p>`
  })}
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-panorama6.jpg",
    width: "2200",
    height: "933",
    alt: "Yosemite National Park"
  }, {}, {})}

${validate_component(TextContent, "TextContent").$$render($$result, {}, {}, {
    default: () => `<p>On the other side of the mountains we followed this stream to our next destination</p>`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0387.jpg",
    width: "2200",
    height: "1461",
    alt: "Railroad tracks near a river"
  }, {}, {})}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0390.jpg",
    width: "2200",
    height: "1461",
    alt: "Rocky mountains"
  }, {}, {})}

${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
    default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0392.jpg",
      width: "1461",
      height: "2200",
      alt: "Hilly road"
    }, {}, {})}
	${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120612-_DSC0395.jpg",
      width: "2200",
      height: "1461",
      alt: "Stream going through the countryside"
    }, {}, {})}`
  })}

${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
    src: "https://cdn.matsimitsu.com/usa-2012/day-eight/20120611-_DSC0393.jpg",
    width: "2200",
    height: "1461",
    alt: "Desert view"
  }, {}, {})}`;
});
var dayEight = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Day_eight,
  postData
});
async function load$2({_page, fetch}) {
  const req = await fetch(`/trips.json`);
  return {props: {trips: await req.json()}};
}
const Trips = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {trips: trips2 = []} = $$props;
  let countries = trips2.map((t) => t.countries || []).flat();
  if ($$props.trips === void 0 && $$bindings.trips && trips2 !== void 0)
    $$bindings.trips(trips2);
  return `<div class="${"mx-auto container my-24 text-center"}"><h1 class="${"font-extrabold tracking-snug leading-8 text-6xl font-bold text-gray-800 dark:text-gray-200 mb-8"}">Trips I made
	</h1>
	<p class="${"text-lg text-gray-600 dark:text-gray-400"}">Over the years I&#39;ve visited quite a few countries on many trips, below I&#39;ll share these with
		you.
	</p>
	<hr class="${"mx-auto w-64 mt-4 dark:border-gray-600"}"></div>

${each(trips2, (trip) => `<a sveltekit:prefetch${add_attribute("href", trip.url, 0)} class="${"block max-w-screen-lg mx-auto relative overflow-hidden transform hover:scale-105 duration-300 transition transition-transform my-24 rounded-md overflow-hidden"}"><div class="${"absolute inset-x-0 bottom-0 h-64 text-center bg-gradient-to-t from-black to-transparent opacity-80"}"></div>
		<div class="${"absolute inset-x-0 bottom-0 h-40 text-center"}"><h2 class="${"text-white text-6xl font-bold mb-4"}">${escape(trip.title)}</h2>
			<p class="${"text-gray-300 text-lg"}">${escape(trip.subtitle)}</p></div>
		${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, Object.assign({noPadding: true}, {rounded: true}, trip.image), {}, {})}
	</a>`)}

<div class="${"max-w-screen-xl mx-auto border-t"}">${validate_component(Map, "Map").$$render($$result, {
    highlight: countries,
    height: 800,
    zoom: 250,
    center: [0, 10]
  }, {}, {})}</div>`;
});
var trips = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Trips,
  load: load$2
});
const Post = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {post} = $$props;
  if ($$props.post === void 0 && $$bindings.post && post !== void 0)
    $$bindings.post(post);
  return `<a sveltekit:prefetch${add_attribute("href", post.url, 0)} class="${"max-w-xl mx-auto block mb-12 transform hover:scale-105 duration-200 transition transition-transform"}"><p class="${"mx-auto text-sm text-gray-400 dark:text-gray-600"}">${validate_component(FormattedDate, "FormattedDate").$$render($$result, {date: post.date}, {}, {})}
    ${post.appsignal ? `<span class="${"inline-block text-xs rounded py-1 px-2 bg-green-500 text-white dark:bg-green-800"}">AppSignal</span>` : ``}</p>
  <h2 class="${"text-2xl font-bold text-gray-700 dark:text-gray-200"}">${escape(post.title)}</h2>
  <p class="${"text-md text-gray-500 mt-1"}">${escape(post.summary)}</p></a>`;
});
async function load$1({fetch}) {
  const req = await fetch(`/blog.json`);
  return {props: {posts: await req.json()}};
}
const _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {posts = []} = $$props;
  if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
    $$bindings.posts(posts);
  return `${slots.default ? slots.default({}) : ``}

<div class="${"mt-24 mb-24 border-t dark:border-gray-600 border-gray-200 pt-24 px-4"}">${each(posts.slice(0, 5), (post) => `${validate_component(Post, "Post").$$render($$result, {post}, {}, {})}`)}</div>
${validate_component(ReturnToCategory, "ReturnToCategory").$$render($$result, {path: "/notes", text: "Return to notes"}, {}, {})}`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout,
  load: load$1
});
const metadata$r = {
  "title": "Remote uploads with pre-signed URLs on Scaleway's object storage.",
  "date": "2021-04-20T00:00:00.000Z",
  "summary": "Or, make sure your headers match, otherwise you'll get a lot of strange errors.",
  "layout": "note"
};
const _2021_04_20_remote_uploads_with_pre_signed_urls_on_scaleway_object_storage = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$1, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$r), {}, {
    default: () => `<p>A while ago Scaleway <a href="${"https://blog.scaleway.com/object-storage-general-availability/"}" rel="${"nofollow"}">announced their S3-compatible Object Storage</a>. It implements most, but not all of the S3 API.</p>
<p>In an attempt to de-Amazon my personal stack I tried to migrate my S3 storage to Object Storage, including a little app that lets me upload photos and videos for my blog, which then get resized and transcoded in the required formats.</p>
<p>This endeavour took me a while, because I kept getting Signature errors or other vague responses from the Scaleway endpoints. The tl;dr at the bottom shows the \u201Ccorrect\u201D way to implement this pre-signed URL upload in both the back-end and the front-end.</p>
<h2 id="${"pre-sign-urls"}"><a href="${"#pre-sign-urls"}">Pre-sign urls</a></h2>
<p>In order to have direct uploads, where the file gets uploaded directly to Scaleway, instead of to my server which then has to upload it, we need a pre-signed url that my front-end can upload the file to.</p>
<p>I use <a href="${"http://kit.svelte.dev"}" rel="${"nofollow"}">SvelteKit</a> for my backend, but it should work with any framework.</p>
<p>The nice thing about being S3 compatible is that we can use the official <a href="${"https://aws.amazon.com/sdk-for-javascript/"}" rel="${"nofollow"}">aws-sdk</a>.</p>
<p>The setup looks like this:</p>
<pre class="${"language-node"}">${`<code class="language-node">import AWS from &#39;aws-sdk&#39;

const scw = new AWS.S3(&#123;
  endpoint: &quot;s3.nl-ams.scw.cloud&quot;,
  region: &quot;nl-ams&quot;,
  accessKeyId: ({}).VITE_SCALEWAY_ACCESS_KEY,
  secretAccessKey: ({}).VITE_SCALEWAY_ACCESS_SECRET,
  signatureVersion: &quot;v4&quot;,
  params: &#123; Bucket: ({}).VITE_SCALEWAY_BUCKET &#125;,
&#125;)
</code>`}</pre>
<p>Make sure to set the <code>endpoint</code>, <code>region</code> and <code>signatureVersion</code> to the correct values. In my case the bucket is hosted in Amsterdam.</p>
<p>The <code>({}).VITE_&lt;value&gt;</code> statements are specific to SvelteKit, replace it with whatever your framework\u2019s way of accessing ENV vars is.</p>
<p>We can then expose a function that generates the pre-signed upload url.</p>
<pre class="${"language-node"}">${`<code class="language-node">export async function uploadUrl(key, contentType) &#123;
  return scw.getSignedUrl(
    &#39;putObject&#39;,
    &#123;
      Key: key,
      ACL: &quot;public-read&quot;,
      ContentType: contentType
    &#125;
  )
&#125;</code>`}</pre>
<p>This function requires two parameters, the Key (or path) where the file will be stored and the ContentType. This so Scaleway can serve the content with the correct format. (e.g. <code>image/jpg</code>).</p>
<h2 id="${"cors"}"><a href="${"#cors"}">CORS</a></h2>
<p>Since we\u2019ll be posting directly to the upload url from our own web-app, we need to setup the correct CORS headers. Otherwise your browser will reject any POST requests to the pre-signed url.</p>
<p>My Scaleway lib exposes a <code>cors()</code> function that calls the Scaleway API and sets the correct headers. You only have to call this function once.</p>
<pre class="${"language-node"}">${`<code class="language-node">export async function cors() &#123;
  return await scw.putBucketCors(&#123;CORSConfiguration: &#123;
    &quot;CORSRules&quot;: [
      &#123;
        &quot;AllowedOrigins&quot;: [&quot;*&quot;],
        &quot;AllowedHeaders&quot;: [&quot;*&quot;],
        &quot;AllowedMethods&quot;: [&quot;GET&quot;, &quot;HEAD&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;],
      &#125;
    ]
  &#125;&#125;).promise()
&#125;</code>`}</pre>
<p>Note that these are not the most specific CORS headers, it\u2019s best to limit the allowed origins to the domain where your web-app is served.</p>
<h2 id="${"api"}"><a href="${"#api"}">API</a></h2>
<p>Now that the back-end code is mostly done we have to expose the library to our front-end through an endpoint.</p>
<p>With SvelteKit, it looks like below, but this code should be adapted to whatever your framework requires.</p>
<pre class="${"language-node"}">${`<code class="language-node">import &#123;
  isAuthenticated,
  INVALID_AUTH_RESPONSE,
  invalidRequest
&#125; from &#39;$lib/api/auth&#39;
import &#123; uploadUrl &#125; from &#39;$lib/api/scw&#39;

export async function post(request) &#123;
  if (!isAuthenticated(request)) &#123;
    return INVALID_AUTH_RESPONSE
  &#125;
  if (!request.body.path) &#123;
    return invalidRequest(&#123; path: &quot;Path field is requried&quot; &#125;)
  &#125;
  const url = await uploadUrl(
    request.body.path,
    request.body.contentType
  )

  return &#123;
    status: 200,
    body: &#123; url: url &#125;
  &#125;
&#125;</code>`}</pre>
<p>It could use a bit more error handling, but works for now :)</p>
<h2 id="${"the-front-end"}"><a href="${"#the-front-end"}">The front-end</a></h2>
<p>In our front-end we need to create a number of requests for each file we\u2019d like to upload, we need to:</p>
<ul><li>Get a Pre-signed URL from the backend</li>
<li>Upload the file to this URL</li></ul>
<p>I put this code in a library to not pollute my other front-end code</p>
<pre class="${"language-node"}">${`<code class="language-node">export async function remoteUpload(key, file) &#123;
	const url = await getPresignedUrl(key, file)
	return await remoteUploadFile(url, file)
&#125;

// Get pre-signed upload url from backend
async function getPresignedUrl(key, file) &#123;
	const response = await fetch(&#39;/api/uploads/presign-url&#39;, &#123;
		method: &#39;POST&#39;,
		body: JSON.stringify(&#123;
			path: key,
			contentType: file.type
		&#125;),
		headers: &#123;
			&#39;Content-Type&#39;: &#39;application/json&#39;
		&#125;
	&#125;)
	const presignData = await response.json()
	return presignData.url
&#125;

// Upload file to external S3-compatible endpoint
async function remoteUploadFile(url, file) &#123;
	const response = await fetch(decodeURI(url), &#123;
		method: &#39;PUT&#39;,
		body: file,
		headers: &#123;
		  &#39;x-amz-acl&#39;: &#39;public-read&#39;,
		  &#39;Content-Type&#39;: file.type
	  &#125;
	&#125;)

	return await response.text()
&#125;</code>`}</pre>
<p>The key thing to mention here is to match the headers for the POST to Scaleway\u2019s Pre-Signed url. If you want to make it publicly available the <code>x-amz-acl</code> header needs to be included here, otherwise you\u2019ll either get Signature mismatch errors or other vague errors.</p>
<p>The final piece is to hook up the upload code to a form, in Svelte it looks something like this:</p>
<pre class="${"language-svelte"}">${`<code class="language-svelte">&lt;script&gt;
	import remoteUpload from &#39;$lib/helpers/remoteUpload&#39;
	import Button from &#39;$lib/components/Button.svelte&#39;

	let fileinput
	const onFileSelected = async (e) =&gt; &#123;
		for (const file of e.target.files) &#123;
			await remoteUpload(&#96;files/$&#123;file.name&#125;&#96;, file)
		&#125;
	&#125;
&lt;/script&gt;
&lt;div id=&quot;uploadForm&quot;&gt;
	&lt;div id=&quot;form&quot;&gt;
		&lt;Button
			value=&quot;Choose file(s)&quot;
			on:click=&#123;() =&gt; fileinput.click()&#125;
		/&gt;
		&lt;input
			style=&quot;display:none&quot;
			type=&quot;file&quot;
			accept=&quot;.jpg, .jpeg, .png, .mp4&quot;
			multiple
			on:change=&#123;(e) =&gt; onFileSelected(e)&#125;
			bind:this=&#123;fileinput&#125;
		/&gt;
	&lt;/div&gt;
&lt;/div&gt;</code>`}</pre>
<h2 id="${"tldr"}"><a href="${"#tldr"}">TL;DR</a></h2>
<p>In order to upload a publicly readable file to a pre-signed URL with Scaleway you need to make sure the <strong>given headers for the pre-signed URL and your <code>fetch</code> request in the browser match.</strong></p>
<p>The backend call should look like:</p>
<pre class="${"language-nodejs"}">${`<code class="language-nodejs">import AWS from &#39;aws-sdk&#39;

const scw = new AWS.S3(&#123;
  endpoint: &quot;s3.nl-ams.scw.cloud&quot;,
  region: &quot;nl-ams&quot;,
  accessKeyId: ({}).VITE_SCALEWAY_ACCESS_KEY,
  secretAccessKey: ({}).VITE_SCALEWAY_ACCESS_SECRET,
  signatureVersion: &quot;v4&quot;,
  params: &#123; Bucket: ({}).VITE_SCALEWAY_BUCKET &#125;,
&#125;)

export async function uploadUrl(key, contentType) &#123;
  return scw.getSignedUrl(
    &#39;putObject&#39;,
    &#123;
      Key: key,
      ACL: &quot;public-read&quot;,
      ContentType: contentType
    &#125;
  )
&#125;</code>`}</pre>
<p>and the <code>fetch</code> request in the front-end like:</p>
<pre class="${"language-nodejs"}">${`<code class="language-nodejs">// Upload file to external S3-compatible endpoint
async function remoteUploadFile(url, file) &#123;
	const response = await fetch(decodeURI(url), &#123;
		method: &#39;PUT&#39;,
		body: file,
		headers: &#123;
		  &#39;x-amz-acl&#39;: &#39;public-read&#39;,
		  &#39;Content-Type&#39;: file.type
	  &#125;
	&#125;)

	return await response.text()
&#125;</code>`}</pre>`
  })}`;
});
var _20210420RemoteUploadsWithPreSignedUrlsOnScalewayObjectStorage = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2021_04_20_remote_uploads_with_pre_signed_urls_on_scaleway_object_storage,
  metadata: metadata$r
});
const Mdsvex = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  let {title} = $$props;
  let {summary} = $$props;
  let {date} = $$props;
  let {image = null} = $$props;
  const headerImage = image ? image.src.replace(".jpg", "-720.jpg") : null;
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.summary === void 0 && $$bindings.summary && summary !== void 0)
    $$bindings.summary(summary);
  if ($$props.date === void 0 && $$bindings.date && date !== void 0)
    $$bindings.date(date);
  if ($$props.image === void 0 && $$bindings.image && image !== void 0)
    $$bindings.image(image);
  $$unsubscribe_page();
  return `${$$result.head += `<meta name="${"description"}"${add_attribute("content", summary, 0)} data-svelte="svelte-1gpsmws"><meta property="${"og:title"}" content="${escape(title) + " - Matsimitsu.com"}" data-svelte="svelte-1gpsmws"><meta property="${"og:description"}"${add_attribute("content", summary, 0)} data-svelte="svelte-1gpsmws"><meta property="${"og:locale"}" content="${"en_US"}" data-svelte="svelte-1gpsmws"><meta property="${"og:type"}" content="${"website"}" data-svelte="svelte-1gpsmws"><meta name="${"twitter:card"}" content="${"summary"}" data-svelte="svelte-1gpsmws"><meta name="${"twitter:creator"}" content="${"@matsimitsu"}" data-svelte="svelte-1gpsmws"><meta property="${"og:url"}" content="${"https://matsimitsu.com" + escape($page.path)}" data-svelte="svelte-1gpsmws"><link rel="${"canonical"}" href="${"https://matsimitsu.com" + escape($page.path)}" data-svelte="svelte-1gpsmws">${image ? `<meta property="${"og:image"}"${add_attribute("content", headerImage, 0)} data-svelte="svelte-1gpsmws">
		<meta property="${"og:image:alt"}"${add_attribute("content", image.alt, 0)} data-svelte="svelte-1gpsmws">
		<meta name="${"twitter:card"}" content="${"summary_large_image"}" data-svelte="svelte-1gpsmws">` : `<meta name="${"twitter:card"}" content="${"summary"}" data-svelte="svelte-1gpsmws">`}<link rel="${"alternate"}" type="${"application/rss+xml"}" title="${"Matsimitsu.com - Robert Beekman - Blog RSS Feed"}" href="${"/feeds/blog.xml"}" data-svelte="svelte-1gpsmws">`, ""}

<div class="${"mx-auto container my-24 text-center max-w-4xl"}"><p class="${"mx-auto text-sm text-gray-400 mb-4"}">${validate_component(FormattedDate, "FormattedDate").$$render($$result, {date}, {}, {})}</p>
	<h1 class="${"font-extrabold tracking-snug text-6xl font-bold text-gray-800 dark:text-gray-200 mb-8"}">${escape(title)}</h1>
	<hr class="${"mx-auto w-64 mt-4 dark:border-gray-600"}"></div>
<div class="${"mx-auto prose prose-lg px-4 dark:prose-dark my-24"}">${slots.default ? slots.default({}) : ``}</div>`;
});
const metadata$q = {
  "title": "Extending Protobuf with Traits in Rust",
  "date": "2019-04-18T00:00:00.000Z",
  "summary": "Extend default behavior of code with Traits and default implementations. In this case we add new functionality to generated Protobuf code."
};
const _2019_04_23_extending_existing_functionality_in_rust_with_traits_in_rust = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$q), {}, {
    default: () => `<p>At AppSignal we use Protobuf to pass messages through Kafka. We picked this because we were already using Protobuf in our Agent and it works great for our use-case.</p>
<p>One of the benefits of Protobuf is that it generates Rust code based on the protocol definition, which we can extend through traits to add additional features.</p>
<p>A common thing we have to do in our processing pipeline is to merge two messages into one, e.g. merge two (count) metrics.</p>
<p>In this case we want to merge two <code>Counter</code> messages that look like this:</p>
<pre class="${"language-protobuf"}">${`<code class="language-protobuf"><span class="token keyword">message</span> <span class="token class-name">Counter</span> <span class="token punctuation">&#123;</span>
  <span class="token builtin">int64</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>We can generate a Rust implementation of this protocol with <code>protoc</code> and extend this protocol using a trait.</p>
<blockquote><p>A <strong>trait</strong> can be used to define functionality a type must provide. You can also implement default methods for a trait that can be overridden.</p></blockquote>
<p>In this case we implement a default function for our <code>CounterExt</code> trait.</p>
<pre class="${"language-rust"}">${`<code class="language-rust"><span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">protobuf</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">protocol</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">protocol<span class="token punctuation">::</span></span><span class="token class-name">Counter</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">trait</span> <span class="token class-name">CounterExt</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">merge</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> to_merge<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Counter</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>In the code above we use the <code>protobuf</code> crate and define the generated Rust code with <code>protoc</code> as a public module. We also use the <code>Counter</code> message we defined in the protocol. Then we define a new trait for the counter, called CounterExt.</p>
<p>This code defines a new function for CounterExt, called <code>merge</code> that accepts another counter to merge.</p>
<p>Next up we need to create a default implementation for this function.</p>
<pre class="${"language-rust"}">${`<code class="language-rust">
<span class="token keyword">impl</span> <span class="token class-name">CounterExt</span> <span class="token keyword">for</span> <span class="token class-name">Counter</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">merge</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> to_merge<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Counter</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">let</span> our_count <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">get_count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">set_count</span><span class="token punctuation">(</span>our_count <span class="token operator">+</span> to_merge<span class="token punctuation">.</span><span class="token function">get_count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
</code>`}</pre>
<p>In this method we take the given counter and add it\u2019s value to <code>self</code>.</p>
<p>Now that we have created this trait with a default implementation we can use it to merge two counters directly on the Protobuf generated code.</p>
<p>This means we can operate directly on deserialised Protobuf messages without having to convert them to structs or create a new message to contain the computed value.</p>
<pre class="${"language-rust"}">${`<code class="language-rust"><span class="token keyword">use</span> <span class="token namespace">rdkafka<span class="token punctuation">::</span>message<span class="token punctuation">::</span></span><span class="token class-name">ProtobufMessage</span><span class="token punctuation">;</span>

<span class="token comment">// Use the protocol Counter and the trait.</span>
<span class="token keyword">use</span> <span class="token namespace">protocol<span class="token punctuation">::</span>protocol<span class="token punctuation">::</span></span><span class="token class-name">Counter</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">protocol<span class="token punctuation">::</span></span><span class="token class-name">CounterExt</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">process_message</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token class-name">ProtobufMessage</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">match</span> cache<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entry</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// We have an entry, merge the counter</span>
        <span class="token class-name">Entry</span><span class="token punctuation">::</span><span class="token class-name">Occupied</span><span class="token punctuation">(</span><span class="token keyword">mut</span> cache_entry<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
            cache_entry<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token comment">// No entry, insert it</span>
        <span class="token class-name">Entry</span><span class="token punctuation">::</span><span class="token class-name">Vacant</span><span class="token punctuation">(</span>cache_entry<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
            cache_entry<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>The code above gets called for each Kafka message and updates a local cache with the merged value of the received message if it exists.</p>
<p>And it inserts the message into the cache if it doesn\u2019t already exist.</p>
<p>By extending our Protobuf messages with default traits we save ourselvs a lot of hassle in the message processing function.</p>
<p>Besides merging we implement a few other methods on our Protobuf messages that handle merging and computation of quantiles/percentiles/mean values.</p>
<p>Like this article or have any comments? Contact me on <a href="${"https://twitter.com/matsimitsu"}" rel="${"nofollow"}">twitter</a> or by <a href="${"mailto:hello@matsimitsu.com"}">hello@matsimitsu.com</a></p>`
  })}`;
});
var _20190423ExtendingExistingFunctionalityInRustWithTraitsInRust = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2019_04_23_extending_existing_functionality_in_rust_with_traits_in_rust,
  metadata: metadata$q
});
const metadata$p = {
  "title": "Kafka and Ruby, a Sidekiq lovestory",
  "date": "2020-08-17T00:00:00.000Z",
  "summary": "In today's article, we\u2019ll cover performance from a different angle: The choices we made in our stack for AppSignal.",
  "appsignal": "https://blog.appsignal.com/2019/04/23/kafka-sidekiq-ruby.html"
};
const _2020_08_17_identifying_and_resolving_a_kafka_issue_with_appsignal = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$p), {}, {})}`;
});
var _20200817IdentifyingAndResolvingAKafkaIssueWithAppsignal = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_17_identifying_and_resolving_a_kafka_issue_with_appsignal,
  metadata: metadata$p
});
const metadata$o = {
  "title": "Don't be mean: Statistical means and percentiles 101",
  "date": "2018-12-04T00:00:00.000Z",
  "tags": null,
  "summary": "A post about the statistics we use at AppSignal and how they work.",
  "appsignal": "https://blog.appsignal.com/2018/12/04/dont-be-mean-statistical-means-and-percentiles-101.html"
};
const _2018_12_04_dont_be_mean_statistical_means_and_percentiles_101 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$o), {}, {})}`;
});
var _20181204DontBeMeanStatisticalMeansAndPercentiles101 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2018_12_04_dont_be_mean_statistical_means_and_percentiles_101,
  metadata: metadata$o
});
const metadata$n = {
  "title": "Vastly improve performance for MongoDB, Mongoid and Sidekiq",
  "date": "2014-03-31T00:00:00.000Z",
  "tags": null,
  "summary": "We've been using the combination of Mongodb, Mongoid (3.x.x) and Sidekiq for a while now and we noticed that lately our queue's were filling up, but we could not pin-point any bottlenecks in our system.",
  "appsignal": "https://blog.appsignal.com/2014/03/31/mongodb-mongoid-and-sideiq-connection-problems.html"
};
const _2014_03_31_mongodb_mongoid_and_sideiq_connection_problems = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$n), {}, {})}`;
});
var _20140331MongodbMongoidAndSideiqConnectionProblems = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2014_03_31_mongodb_mongoid_and_sideiq_connection_problems,
  metadata: metadata$n
});
const metadata$m = {
  "title": "Resize images from s3 with AWS Lambda and Rust",
  "date": "2019-03-09T00:00:00.000Z",
  "tags": null,
  "summary": "My site contains a lot of images and resizing them for different devices (mobile phone, tabled, desktop etc.) takes a lot of time and (upload) bandwidth. This is especially annoying on Hotel Wi-Fi in a far-away country. With the help of AWS Lambda and Rust I made this into a smooth process."
};
const _2019_03_09_resize_images_from_s3_with_aws_lambda_and_rust = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$m), {}, {
    default: () => `<p>The very first iteration of my site didn\u2019t have resized images and always showed the full 2200 pixels wide images, this was great on my local (desktop) machine, but when I tried visiting the site in a hotel in Cambodia, the site took ages to load.</p>
<p>Resizing the images locally worked fine, but took a lot of time and uploading an image in five different sizes on slow Wi-Fi took ages, if it worked at all.</p>
<p>I then switched to using an image resize proxy that took images from disk and re-sized them on the fly, caching the result in Nginx. This worked okay, but there was a tradeoff between server specs and monthly cost. Low specs meant that on an uncached page it took minutes before all images were resized, while high specs meant high monthly cost for a server that was idle 99% of the time.</p>
<p>The solution to not running a server was switching to <a href="${"https://imgix.com"}" rel="${"nofollow"}">imgix</a>, it\u2019s a great service that resizes images for you and does so with good quality and speed, but there\u2019s a minimum fee of $10,00 a month, wether you use the service or not, and the costs go up pretty quickly as you add more and more photos. This is in addition to the S3 storage costs that imgix uses as the source for its proxy.</p>
<p>This lead me to the latest solution, use S3 to store the images (imgix also requires s3 as a source, so the images were already there) and AWS Lambda to resize the images on upload.</p>
<p>This means I only have to upload an image once and Lambda will take care of all the resized variants. I found a few (Javascript) solutions, and <a href="${"https://github.com/ysugimoto/aws-lambda-image"}" rel="${"nofollow"}">aws-lambda-image</a> looked the easiest to use. This ran for a few months, before I decided to roll my own solution for a few reasons.</p>
<p>aws-lambda-image does a lot of magic and uses <a href="${"https://claudiajs.com/"}" rel="${"nofollow"}">Claudia</a> to manage the Lambda settings. While it works great, I don\u2019t really like tools that require high-level access to AWS API\u2019s and configure a lot for you automatically. I have no idea what\u2019s happening after running the commands.</p>
<p>Another risk for me is that it Runs on Node, which eventually will require an upgrade at some point, which has a high risk of breaking the function and these things always happen at the most inconvenient times.</p>
<p>What I wanted is a single binary that just keeps working and requires no upkeep, configured by myself so I know what\u2019s happening and ideally more efficient than the NodeJS solution. It\u2019s also a great excuse to play with Rust some more and the just released <a href="${"https://github.com/awslabs/aws-lambda-rust-runtime"}" rel="${"nofollow"}">Rust AWS Lambda Runtime</a>.</p>
<h2 id="${"the-goal"}"><a href="${"#the-goal"}">The goal</a></h2>
<p>I wanted something similar to the Javascript solution used. It should listen to events emitted when a file is uploaded to S3 and resize the image in several widths (<code>360px</code>, <code>720px</code>, <code>1200px</code> and <code>2200px</code>).</p>
<p>Before we start, you can follow along with the complete source on <a href="${"https://github.com/matsimitsu/lambda-image-resize-rust/"}" rel="${"nofollow"}">GitHub</a></p>
<h3 id="${"a-binary-project"}"><a href="${"#a-binary-project"}">A binary project</a></h3>
<p>Lets start by making a new Rust project, it should be a binary project and we need to make a few tweaks to the Cargo TOML to make sure Lambda can run the binary.</p>
<pre class="${"language-toml"}">${`<code class="language-toml"><span class="token punctuation">[</span><span class="token table class-name">package</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">"lambda-image-resize-rust"</span>
<span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">"0.1.0"</span>
<span class="token key property">authors</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">"Robert Beekman &lt;robert@matsimitsu.nl>"</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span>
<span class="token key property">lambda_runtime</span> <span class="token punctuation">=</span> <span class="token string">"0.1"</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">bin</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">"bootstrap"</span>
<span class="token key property">path</span> <span class="token punctuation">=</span> <span class="token string">"src/main.rs"</span></code>`}</pre>
<p>The way AWS Lambda works is that it starts the app/binary for you and then you have to call a certain endpoint from the app to receive new jobs to process. The <code>lambda_runtime</code> crate abstracts this process away and all you have to do is implement an event handler that will be called with the <code>lambda!</code> call.</p>
<p>Cargo (heh) culting from the example app, we start a logger and run the lambda for the AWS Runtime.</p>
<pre class="${"language-rust"}">${`<code class="language-rust"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Error</span><span class="token operator">>></span> <span class="token punctuation">&#123;</span>
    <span class="token namespace">simple_logger<span class="token punctuation">::</span></span><span class="token function">init_with_level</span><span class="token punctuation">(</span><span class="token namespace">log<span class="token punctuation">::</span></span><span class="token class-name">Level</span><span class="token punctuation">::</span><span class="token class-name">Info</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">lambda!</span><span class="token punctuation">(</span>handle_event<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>The <code>handle_event</code> function will be called with the JSON result from the endpoint the runtime has called for us. Let\u2019s convert this into a nice struct with Serde, by using the <a href="${"https://github.com/LegNeato/aws-lambda-events/blob/master/aws_lambda_events/src/generated/s3.rs"}" rel="${"nofollow"}">AWS-lambda-events crate</a>.</p>
<h3 id="${"handle-s3-events"}"><a href="${"#handle-s3-events"}">Handle S3 events</a></h3>
<p>This event contains one or more \u201Crecords\u201D that represent the S3 uploads it has received.</p>
<pre class="${"language-rust"}">${`<code class="language-rust"><span class="token keyword">fn</span> <span class="token function-definition function">handle_event</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> ctx<span class="token punctuation">:</span> <span class="token namespace">lambda<span class="token punctuation">::</span></span><span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">HandlerError</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token class-name">Config</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> s3_event<span class="token punctuation">:</span> <span class="token class-name">S3Event</span> <span class="token operator">=</span>
        <span class="token namespace">serde_json<span class="token punctuation">::</span></span><span class="token function">from_value</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map_err</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>e<span class="token closure-punctuation punctuation">|</span></span> ctx<span class="token punctuation">.</span><span class="token function">new_error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> record <span class="token keyword">in</span> s3_event<span class="token punctuation">.</span>records <span class="token punctuation">&#123;</span>
        <span class="token function">handle_record</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>config<span class="token punctuation">,</span> record<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>For each upload we have to get the file from S3, convert the file to one or more image variations and upload those back to S3 again. There are a couple of crates that implement the S3 API, I went with <a href="${"https://github.com/durch/rust-s3"}" rel="${"nofollow"}">rust-s3</a> as it looked simple and small.</p>
<p>AWS Lambda sets a couple of <a href="${"https://docs.aws.amazon.com/lambda/latest/dg/current-supported-versions.html"}" rel="${"nofollow"}">default ENV vars</a>, among those it sets <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code>, the <code>rust-s3</code> crate can detect those with the <code>Credentials::default()</code> function.</p>
<p>In my case I want to store the images in the same bucket as the source, just in a different location, so I can use the information from the S3 event to determine the region and bucket.</p>
<pre class="${"language-rust"}">${`<code class="language-rust"><span class="token keyword">fn</span> <span class="token function-definition function">handle_record</span><span class="token punctuation">(</span>config<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Config</span><span class="token punctuation">,</span> record<span class="token punctuation">:</span> <span class="token class-name">S3EventRecord</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">let</span> credentials <span class="token operator">=</span> <span class="token class-name">Credentials</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> region<span class="token punctuation">:</span> <span class="token class-name">Region</span> <span class="token operator">=</span> record
        <span class="token punctuation">.</span>aws_region
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">"Could not get region from record"</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">"Could not parse region from record"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> bucket <span class="token operator">=</span> <span class="token class-name">Bucket</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>
        <span class="token operator">&amp;</span>record
            <span class="token punctuation">.</span>s3
            <span class="token punctuation">.</span>bucket
            <span class="token punctuation">.</span>name
            <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">"Could not get bucket name from record"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        region<span class="token punctuation">,</span>
        credentials<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> source <span class="token operator">=</span> record
        <span class="token punctuation">.</span>s3
        <span class="token punctuation">.</span>object
        <span class="token punctuation">.</span>key
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">"Could not get key from object record"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<h3 id="${"recursion"}"><a href="${"#recursion"}">Recursion</a></h3>
<p>Now that we have all the required configuration to get and store images on S3, we have to do a sanity check first. We listen to an S3 event for uploaded images, but this function also uploads images to S3, this means that if you make a mistake in the configuration, it could send out an S3 event for each file you put back into the bucket.</p>
<p>This can mean that you\u2019ll process your own (resized) images again, and since we generate more than one variant for each uploaded image. Combined with the power of Lambda and it\u2019s concurrency, it can mean that you\u2019ll quickly generate thousands of new Lambda tasks, forcing you to hit the dreaded \u201Cpanic button\u201D in the Lambda UI, before you rack up an enormous AWS bill. (This <em>may</em> or may not come from my own experience ;)).</p>
<p>After resizing the image, we\u2019ll append <code>-&lt;size&gt;</code> to the filename (e.g. <code>foo.jpg</code> becomes <code>foo-360.jpg</code>). To prevent this Lambda recursion we check the uploaded filename to see if it was already resized.</p>
<pre class="${"language-rust"}">${`<code class="language-rust">    <span class="token comment">/* Make sure we don't process files twice */</span>
    <span class="token keyword">for</span> size <span class="token keyword">in</span> <span class="token operator">&amp;</span>config<span class="token punctuation">.</span>sizes <span class="token punctuation">&#123;</span>
        <span class="token keyword">let</span> to_match <span class="token operator">=</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">"-&#123;&#125;.jpg"</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> source<span class="token punctuation">.</span><span class="token function">ends_with</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to_match<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token macro property">warn!</span><span class="token punctuation">(</span>
                <span class="token string">"Source: '&#123;&#125;' ends with: '&#123;&#125;'. Skipping."</span><span class="token punctuation">,</span>
                <span class="token operator">&amp;</span>source<span class="token punctuation">,</span>
                <span class="token operator">&amp;</span>to_match
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span></code>`}</pre>
<h3 id="${"get-images-from--and-upload-to-s3"}"><a href="${"#get-images-from--and-upload-to-s3"}">Get images from- and upload to S3</a></h3>
<p>Now that we know for sure we have the right image, let\u2019s fetch it from S3 and load it from memory into the <code>image</code> crate.</p>
<pre class="${"language-rust"}">${`<code class="language-rust">    <span class="token keyword">let</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token operator">=</span> bucket
        <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>source<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">"Could not get object: &#123;&#125;"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> img <span class="token operator">=</span> <span class="token namespace">image<span class="token punctuation">::</span></span><span class="token function">load_from_memory</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">"Opening image failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}</pre>
<h3 id="${"resize-the-images"}"><a href="${"#resize-the-images"}">Resize the images</a></h3>
<p>With the image in memory we can resize it. Depending on the memory you give a Lambda function, you can get one or more CPU cores to your disposal. To get the maximum from our billed execution time, I opted to use the great <a href="${"https://github.com/rayon-rs/rayon"}" rel="${"nofollow"}">rayon-rs</a> crate to execute the resizes in parallel. All you have to do to process the image in parallel is to replace <code>iter()</code> with <code>.par_iter()</code>, awesome!</p>
<pre class="${"language-rust"}">${`<code class="language-rust">    <span class="token keyword">let</span> _<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span>_<span class="token operator">></span> <span class="token operator">=</span> config
        <span class="token punctuation">.</span>sizes
        <span class="token punctuation">.</span><span class="token function">par_iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>size<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">let</span> buffer <span class="token operator">=</span> <span class="token function">resize_image</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>img<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">"Could not resize image"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">let</span> <span class="token keyword">mut</span> target <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>rep_key<span class="token punctuation">,</span> rep_val<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token operator">&amp;</span>config<span class="token punctuation">.</span>replacements <span class="token punctuation">&#123;</span>
                target <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>rep_key<span class="token punctuation">,</span> rep_val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            target <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">".jpg"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">"-&#123;&#125;.jpg"</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> code<span class="token punctuation">)</span> <span class="token operator">=</span> bucket
                <span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>target<span class="token punctuation">,</span> <span class="token operator">&amp;</span>buffer<span class="token punctuation">,</span> <span class="token string">"image/jpeg"</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">"Could not upload object to :&#123;&#125;"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token macro property">info!</span><span class="token punctuation">(</span><span class="token string">"Uploaded: &#123;&#125; with: &#123;&#125;"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>target<span class="token punctuation">,</span> <span class="token operator">&amp;</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}</pre>
<p>Another thing we do is loop through <code>&amp;config.replacemens</code>, this is another feature to combat the recursion problem we have, by allowing us to replace certain parts of the (input) path of a file.</p>
<p>We can set a <code>REPLACEMENTS</code> env var with key/value strings, such as <code>&quot;original:resized&quot;</code>.</p>
<p>With an input path of <code>/original/trips/asia2018/img_01.jpg</code> this will be converted to <code>/resized/trips/asia2018/img_01.jpg</code>. Combined with the input filter on the AWS Lambda configure page you can make sure converted images are never processed twice.</p>
<p>Finally we need to implement the actual resize function called in the code above.</p>
<p>it takes the image and a new width, calculates the ratio and generates the new needed height. We then call the image crate function and use the <code>ImageOutputFormat::JPEG(90)</code> ENUM to set the JPEG quality to <code>90</code> (from the default <code>75</code>).</p>
<pre class="${"language-rust"}">${`<code class="language-rust"><span class="token keyword">fn</span> <span class="token function-definition function">resize_image</span><span class="token punctuation">(</span>img<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token namespace">image<span class="token punctuation">::</span></span><span class="token class-name">DynamicImage</span><span class="token punctuation">,</span> new_w<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">f32</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token class-name">ImageError</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> result<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> old_w <span class="token operator">=</span> img<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">f32</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> old_h <span class="token operator">=</span> img<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">f32</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> ratio <span class="token operator">=</span> new_w <span class="token operator">/</span> old_w<span class="token punctuation">;</span>
    <span class="token keyword">let</span> new_h <span class="token operator">=</span> <span class="token punctuation">(</span>old_h <span class="token operator">*</span> ratio<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> scaled <span class="token operator">=</span> img<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token operator">*</span>new_w <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">,</span> new_h <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">,</span> <span class="token namespace">image<span class="token punctuation">::</span></span><span class="token class-name">FilterType</span><span class="token punctuation">::</span><span class="token class-name">Lanczos3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    scaled<span class="token punctuation">.</span><span class="token function">write_to</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> result<span class="token punctuation">,</span> <span class="token class-name">ImageOutputFormat</span><span class="token punctuation">::</span><span class="token constant">JPEG</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token class-name">Ok</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>You can find the complete project on <a href="${"https://github.com/matsimitsu/lambda-image-resize-rust"}" rel="${"nofollow"}">GitHub</a>.</p>
<h3 id="${"compiling-for-aws-lambda"}"><a href="${"#compiling-for-aws-lambda"}">Compiling for AWS Lambda</a></h3>
<p>With a working binary we now need to (cross)compile it for the right environment/distribution. Luckily a person named <a href="${"https://hub.docker.com/u/softprops"}" rel="${"nofollow"}">softprops</a> created a <a href="${"https://hub.docker.com/r/softprops/lambda-rust/"}" rel="${"nofollow"}">docker container</a> that has all the tools we need to compile this binary to be used with the Lambda image.</p>
<pre class="${"language-bash"}">${`<code class="language-bash">	docker run --rm <span class="token punctuation"></span>
		-v <span class="token variable">$&#123;<span class="token environment constant">PWD</span>&#125;</span>:/code <span class="token punctuation"></span>
		-v <span class="token variable">$&#123;<span class="token environment constant">HOME</span>&#125;</span>/.cargo/registry:/root/.cargo/registry <span class="token punctuation"></span>
		-v <span class="token variable">$&#123;<span class="token environment constant">HOME</span>&#125;</span>/.cargo/git:/root/.cargo/git <span class="token punctuation"></span>
		softprops/lambda-rust</code>`}</pre>
<p>This will generate a <code>bootstrap.zip</code> file in <code>target/lambda/release</code>. You can also get the <code>bootstrap.zip</code> from te <a href="${"https://github.com/matsimitsu/lambda-image-resize-rust/releases"}" rel="${"nofollow"}">releases page</a>.</p>
<h3 id="${"configuring-lambda"}"><a href="${"#configuring-lambda"}">Configuring Lambda</a></h3>
<p>With a freshly compiled binary, we\u2019re nearly there. We need to do two things, configure a IAM role that allows the Lambda function to write logs and has access to the S3 bucket and configure the Lambda function itself.</p>
<p>Let\u2019s start with the IAM Role, we\u2019ll have to add two policies, one that allows the function to log and one that allows access to S3, it should look something like:</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/image-resize-rust/iam-role.jpg",
      width: "1367",
      height: "1529",
      alt: "Screenshot of AWS IAM page"
    }, {}, {})}
<p>Bonus points if you lock the S3 role down a bit more, by not allowing it to remove items.</p>
<p>With a role configured, we can configure the lambda function, we have to set the <code>SIZES</code> and <code>REPLACEMENTS</code> ENV vars and I found that the function works best with at least <code>1024MB</code> of memory assigned.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/image-resize-rust/lambda-config-options.jpg",
      width: "1295",
      height: "1412",
      alt: "Screenshot of AWS Lambda config options"
    }, {}, {})}
<p>Attach the generated <code>bootstrap.zip</code> file and save the function.</p>
<p>Finally we need to configure the S3 events, pick \u201CS3\u201D events from the \u201CAdd triggers\u201D section on the page and pick the option that says \u201CAll upload events\u201D. I\u2019ve also set the prefix/suffix option to prevent our recursion problem.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/image-resize-rust/lambda-s3-config.jpg",
      width: "1303",
      height: "1194",
      alt: "Screenshot of AWS Lambda s3 config"
    }, {}, {})}
<p>Save the function again and upload an image to test, if everything went well, it should generate resized images after the upload is complete. You can verify it works (or catch any errors) on AWS Cloudwatch, it should look something like this:</p>
<pre class="${"language-null"}">${`<code class="language-null">START RequestId: 7e7886d6-f983-4ef7-9916-83ab53874c6c Version: $LATEST
2019-03-09 15:07:35 INFO [lambda_runtime::runtime] Received new event with AWS request id: 7e7886d6-f983-4ef7-9916-83ab53874c6c
2019-03-09 15:07:35 INFO [bootstrap] Fetching: original-rust/blog/image-resize-rust/lambda-config.jpg, config: Config &#123; sizes: [360.0, 720.0, 1200.0, 2200.0], replacements: [(&quot;original-rust&quot;, &quot;r&quot;), (&quot;original&quot;, &quot;r&quot;)] &#125;
2019-03-09 15:07:36 INFO [bootstrap] Uploaded: r/blog/image-resize-rust/lambda-config-360.jpg with: 200
2019-03-09 15:07:36 INFO [bootstrap] Uploaded: r/blog/image-resize-rust/lambda-config-1200.jpg with: 200
2019-03-09 15:07:36 INFO [bootstrap] Uploaded: r/blog/image-resize-rust/lambda-config-720.jpg with: 200
2019-03-09 15:07:38 INFO [bootstrap] Uploaded: r/blog/image-resize-rust/lambda-config-2200.jpg with: 200
2019-03-09 15:07:38 INFO [lambda_runtime::runtime] Response for 7e7886d6-f983-4ef7-9916-83ab53874c6c accepted by Runtime API
END RequestId: 7e7886d6-f983-4ef7-9916-83ab53874c6c
REPORT RequestId: 7e7886d6-f983-4ef7-9916-83ab53874c6c	Init Duration: 86.53 ms	Duration: 2944.40 ms	Billed Duration: 3100 ms Memory Size: 1024 MB	Max Memory Used: 125 MB</code>`}</pre>
<h2 id="${"future-goals"}"><a href="${"#future-goals"}">Future goals</a></h2>
<p>You can find the source on <a href="${"https://github.com/matsimitsu/lambda-image-resize-rust"}" rel="${"nofollow"}">GitHub</a> and a ready-to-go <code>bootstrap.zip</code> on the <a href="${"https://github.com/matsimitsu/lambda-image-resize-rust/releases"}" rel="${"nofollow"}">relase page</a>.</p>
<p>The binary works great and has resized many images already. With Amazon\u2019s generous free Lambda tier, resizing all the images on my blog has cost me a grand total of <strong>$0.61</strong>. There is room for improvement, however. Error handling can be a lot nicer than <code>.expect()</code> everywhere, though as long as it logs the error in CloudWatch it works for me right now.</p>
<p>It would be nice if it could handle more image formats, while the <code>image</code> crate works fine with input formats such as GIF, JPEG, PNG and WEBP, right now I only generate JPEG images. I like it to generate WEBP images along side the JPEGs but I couldn\u2019t find any crate that can generate WEBP images. If you happen to know one or have other feedback on this post, please let me know <a href="${"mailto:hello@matsimitsu.nl"}">by email</a> or <a href="${"https://twitter.com/matsimitsu"}" rel="${"nofollow"}">tweet me</a>.</p>
<h3 id="${"references--resources"}"><a href="${"#references--resources"}">References / Resources</a></h3>
<ul><li><a href="${"https://aws.amazon.com/blogs/opensource/rust-runtime-for-aws-lambda/"}" rel="${"nofollow"}">https://aws.amazon.com/blogs/opensource/rust-runtime-for-aws-lambda/</a></li>
<li><a href="${"https://github.com/srijs/rust-aws-lambda"}" rel="${"nofollow"}">https://github.com/srijs/rust-aws-lambda</a></li>
<li><a href="${"https://dev.to/adnanrahic/a-crash-course-on-serverless-with-aws---image-resize-on-the-fly-with-lambda-and-s3-4foo"}" rel="${"nofollow"}">https://dev.to/adnanrahic/a-crash-course-on-serverless-with-aws\u2014image-resize-on-the-fly-with-lambda-and-s3-4foo</a></li>
<li><a href="${"https://github.com/awslabs/aws-lambda-rust-runtime/issues/29"}" rel="${"nofollow"}">awslabs/aws-lambda-rust-runtime#29</a></li>
<li><a href="${"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html"}" rel="${"nofollow"}">https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html</a></li>
<li><a href="${"https://hub.docker.com/r/softprops/lambda-rust/"}" rel="${"nofollow"}">https://hub.docker.com/r/softprops/lambda-rust/</a></li></ul>`
  })}`;
});
var _20190309ResizeImagesFromS3WithAwsLambdaAndRust = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2019_03_09_resize_images_from_s3_with_aws_lambda_and_rust,
  metadata: metadata$m
});
const metadata$l = {
  "title": "Upload a file to an AWS pre-signed S3 url with RestClient.",
  "date": "2020-08-28T00:00:00.000Z",
  "summary": "Or, how something so simple cost me so much time."
};
const _2020_08_28_upload_to_presigned_aws_url_with_rest_client = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$l), {}, {
    default: () => `<p>Upload a file to a pre-signed url with Rest-Client.</p>
<p>You\u2019d think that\u2019s an easy task, just call:</p>
<pre class="${"language-ruby"}">${`<code class="language-ruby"><span class="token constant">RestClient</span><span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}</pre>
<p>And call it a day, but this will leave you with cryptic error messages such as:</p>
<pre class="${"language-null"}">${`<code class="language-null">The request signature we calculated does not match the signature you provided.
Check your key and signing method.</code>`}</pre>
<p>There are two things we need to change, first is that Amazon taks the term <code>putObject</code> very literal, upload a file with the <code>POST</code> method will generate the error above.</p>
<pre class="${"language-ruby"}">${`<code class="language-ruby"><span class="token constant">RestClient</span><span class="token punctuation">.</span>put<span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`}</pre>
<p>Changing the method to put will clear the cryptic signature error, but you\u2019ll notice that any file uploaded will be corrupt. This because RestClient uploads the file as <code>multipart/form-data</code>, which is not recognised as a binary file by AWS.</p>
<p>To fix this provide a <code>content-type</code> header to RestClient, for example.</p>
<pre class="${"language-ruby"}">${`<code class="language-ruby">  <span class="token constant">RestClient</span><span class="token punctuation">.</span>put<span class="token punctuation">(</span>
    url<span class="token punctuation">,</span>
    <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token symbol">:headers</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span><span class="token symbol">:content_type</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"application/octet-stream"</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">)</span></code>`}</pre>
<p>In my case I was uploading images and this worked for me:</p>
<pre class="${"language-ruby"}">${`<code class="language-ruby">  <span class="token constant">RestClient</span><span class="token punctuation">.</span>put<span class="token punctuation">(</span>
    url<span class="token punctuation">,</span>
    <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token symbol">:headers</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span><span class="token symbol">:content_type</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"image/jpeg"</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">)</span></code>`}</pre>
<p>Hopefully this will save someone else an hour of debugging AWS request signature calculations :)</p>`
  })}`;
});
var _20200828UploadToPresignedAwsUrlWithRestClient = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_28_upload_to_presigned_aws_url_with_rest_client,
  metadata: metadata$l
});
const metadata$k = {
  "title": "Monitoring MongoDB Replicaset Lag with AppSignal",
  "date": "2019-02-12T00:00:00.000Z",
  "tags": null,
  "summary": "In this post, I'll explain why we got really excited last week using Custom Metrics and Anomaly Detection to monitor MongoDB in our own (AppSignal) infrastructure.",
  "appsignal": "https://blog.appsignal.com/2019/02/12/replica-set-lag-monitoring-with-appsignal.html"
};
const _2019_02_12_replica_set_lag_monitoring_with_appsignal = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$k), {}, {})}`;
});
var _20190212ReplicaSetLagMonitoringWithAppsignal = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2019_02_12_replica_set_lag_monitoring_with_appsignal,
  metadata: metadata$k
});
const metadata$j = {
  "title": "How to control an RC car with an arduino",
  "date": "2011/05/21",
  "summary": "I thought it would be fun to control an RC car with an arduino."
};
const _2011_05_21_how_to_control_an_rc_car_with_an_arduino = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$j), {}, {
    default: () => `<p>A while ago me, <a href="${"https://www.twitter.com/thijsc"}" rel="${"nofollow"}">@thijsc</a> and <a href="${"http://www.twitter.com/jkreeftmeijer"}" rel="${"nofollow"}">@jkreeftmeijer</a>
each bought an arduino starters kit and after the first blinking light it ended up somewhere on my desk.
Today i thought it would be fun to actually do something with it, so i went to the local Intertoys and bought a cheap RC car.</p>
<h3 id="${"requirements"}"><a href="${"#requirements"}">Requirements</a></h3>
<p>If you want to do the same i suggest you first try it with the cheapest RC car you can find that has:</p>
<ul><li>7 way control (forward - left &amp; right, backwards - left &amp; right and stop)</li>
<li>Runs on 6 volts</li>
<li>Is big enough to house the arduino and board.</li>
<li>Doesn\u2019t go to fast (it gets really hard to control movement)</li>
<li>See if the steering wheels return to the center automatically</li></ul>
<p>I ended up with the \u201CWild Hopper\u201D, an offroad buggy.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rc-car/wild_hopper.jpg",
      width: "680",
      height: "543",
      alt: "Wild hopper RC car"
    }, {}, {})}
<h3 id="${"insides"}"><a href="${"#insides"}">Insides</a></h3>
<p>Next step was to take the damn thing apart!</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rc-car/wild_hopper_hops_no_more.jpg",
      width: "680",
      height: "489",
      alt: "Exposed wild hopper"
    }, {}, {})}
<p>Inside i unscrewed the PCB to see if i could recognize anything. (Click for larger image with pin layout)</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rc-car/print_thumb.jpg",
      width: "680",
      height: "629",
      alt: "Wild hopper RC car PCB"
    }, {}, {})}
<h3 id="${"wiring"}"><a href="${"#wiring"}">Wiring</a></h3>
<p>I Googled for the numbers on the PCB (SW188 top right on the PCB) and it turns out
there is a Chinese (i\u2019m assuming this by the look of the signs) document with the pin layout of the chip!
<a href="${"https://d3khpbv2gxh34v.cloudfront.net/p/blog/control_an_rc_car/pin_layout.pdf"}" rel="${"nofollow"}">Download the pdf here.</a></p>
<p>Now i had the pin layout it was just a matter of putting current on the pins and the wheels started moving!
I also found out the front weels return to the center position after i disconnected the current. This is really great and saves me a lot of code.
Next i soldered wires to the right pins and a wire to the ground. I added LEDs to all the channels so i could see if the right action was triggered.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rc-car/wiring_complete.jpg",
      width: "670",
      height: "893",
      alt: "Arduino Wild Hopper RC Car"
    }, {}, {})}
<p>As you can see from the photo, I used digital pin 3 to 6 for the four channels (forwards, backwards, left, right)</p>
<p>With everything connected it was time to write the code. I wanted to achieve a simple 3 point turn,
this would require all actions (forward, left, right backwards and stop) so i could see that everything was working ok.</p>
<h3 id="${"the-code"}"><a href="${"#the-code"}">The code</a></h3>
<p>The code is really simple, I initialize the pins for output and use that and delays to move the car around.</p>
<pre class="${"language-c"}">${`<code class="language-c"><span class="token comment">/*
  3 point turn, attempt 1
*/</span>

<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// initialize the digital pins as outputs.</span>
  <span class="token function">pinMode</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Forward</span>
  <span class="token function">pinMode</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Backwards</span>
  <span class="token function">pinMode</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Left</span>
  <span class="token function">pinMode</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Right</span>

<span class="token punctuation">&#125;</span>
<span class="token comment">// Three point turn</span>

<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Forward for 1 second</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// wait for a second</span>

  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Back left for half a second</span>
  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// wait for 2 seconds</span>

  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Back left for half a second</span>
  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// wait for 2 seconds</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<h3 id="${"result"}"><a href="${"#result"}">Result</a></h3>
<p>The end result of the day</p>
${'<object width="100%"><param name="movie" value="https://www.youtube.com/v/oP2s1giB86I?hl=en&fs=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="https://www.youtube.com/v/oP2s1giB86I?hl=en&fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="680" height="500"></embed></object>'}
<h3 id="${"whats-next"}"><a href="${"#whats-next"}">What\u2019s next?</a></h3>
<p>The next step will be adding sensors so it doesn\u2019t crash into every object in the room. More about that in another post!</p>`
  })}`;
});
var _20110521HowToControlAnRcCarWithAnArduino = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2011_05_21_how_to_control_an_rc_car_with_an_arduino,
  metadata: metadata$j
});
const metadata$i = {
  "title": "Monitor MongoDB (query) load with Custom Metrics",
  "date": "2016-07-04T00:00:00.000Z",
  "tags": null,
  "summary": "Sometimes standard instrumentation isn't enough to track the root cause of a performance issue. Custom metrics help us track the missing pieces.",
  "appsignal": "https://blog.appsignal.com/2016/07/04/monitor-mongodb-load-with-custom-metrics.html"
};
const _2016_07_04_monitor_mongodb_load_with_custom_metrics = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$i), {}, {})}`;
});
var _20160704MonitorMongodbLoadWithCustomMetrics = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2016_07_04_monitor_mongodb_load_with_custom_metrics,
  metadata: metadata$i
});
const metadata$h = {
  "title": "Publish articles from iA Writer to your static site.",
  "date": "2020-08-27T00:00:00.000Z",
  "summary": "My hope with this project is that with less friction to write and publish a note/article, I'll do it more."
};
const _2020_08_27_iawriter_micropub_netlify_static_site = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$h), {}, {
    default: () => `<p>Publish articles from iA Writer or any other micropub-enabled application to your static site with Netlify Functions. My hope with this project is that with less friction to write and publish a note/article, I\u2019ll do it more.</p>
<p>On May 13th, 2020 iA <a href="${"https://ia.net/writer/blog/new-pdf-preview-better-web-publishing-improved-editing"}" rel="${"nofollow"}">published a blogpost with new features</a> for iA Writer. One of those features was support for <a href="${"https://indieweb.org/Micropub"}" rel="${"nofollow"}">micropub</a>, an open API standard to create/edit/update articles on blogs.</p>
<p>Since iA Writer is my favourite tool to write blogposts, it would be amazing if we could remove the step where I paste the content in VSCode to commit it to my blog repository. I\u2019m planning to use this feature mostly for my new <a href="${"/notes"}">\u201CNotes\u201D</a> section, used for short posts that require little formatting and editing.</p>
<h2 id="${"requirements-and-netlify-setup"}"><a href="${"#requirements-and-netlify-setup"}">Requirements and Netlify setup</a></h2>
<p>In order to do this we need a couple of things, we need a place to accept the API call from iA Writer and somehow and convert that data to a format that can be rendered with <a href="${"https://middlemanapp.com"}" rel="${"nofollow"}">middleman</a>, my static site generator of this moment. Ideally I would not run a server just to accept a webhook every once in a while and this is where <a href="${"https://www.netlify.com/products/functions/"}" rel="${"nofollow"}">Netlify functions</a> come in. (or any lambda-based system, such as <a href="${"https://aws.amazon.com/lambda/"}" rel="${"nofollow"}">AWS Lambda</a>, and you can even do this with <a href="${"https://github.com/features/actions"}" rel="${"nofollow"}">GitHub actions</a>).</p>
<p>To make all of this work, we want to accept the new article payload from iA Writer and create a new file on GitHub with their API. This will in turn trigger a new Netlify build which will include the new content.</p>
<h3 id="${"github-token"}"><a href="${"#github-token"}">GitHub token</a></h3>
<p>In order to write a file on GitHub we need a personal token with repo write access. (Unfortunately GitHub\u2019s authorisation framework is not great and it\u2019s an all-or-nothing kind of deal regarding personal tokens, so make sure you keep it in a safe place and <strong>NOT</strong> in public code. (or any code for that matter)).</p>
<p>Under your GitHub profile go to settings and \u201CCeveloper settings\u201D &gt; \u201CPersonal access tokens\u201D.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/blog/micropub/github-token-screen.png"}" alt="${"GitHub token"}"></p>
<p>Create a new token with a descriptive name and only the \u201Crepo\u201D scope checked.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/blog/micropub/github-add-token.png"}" alt="${"GitHub add token"}"></p>
<h3 id="${"netlify-environment-variables"}"><a href="${"#netlify-environment-variables"}">Netlify environment variables</a></h3>
<p>In order to use the token in our Netlify function, we need to expose it to the function, we can do this through \u201Cenvironment variables\u201D on Netlify. You can find this under the \u201CBuild &amp; Deploy\u201D tab of the \u201Csettings\u201D of your application.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/blog/micropub/netlify-env-vars.png"}" alt="${"Netlify env vars screen"}"></p>
<p>Let\u2019s add a new environment variable called <code>GITHUB_ACCESS_TOKEN</code> with the token from GitHub as the value.
While we\u2019re here lets also add a token we can use to authenticate iA Writer when it posts to our Netlify fuction.</p>
<p>Create a second environment variable called <code>TOKEN</code> with a random value.</p>
<h2 id="${"ia-writer-flow"}"><a href="${"#ia-writer-flow"}">iA Writer flow.</a></h2>
<p>iA Writer has a bit of a weird flow when adding a micropub endpoint, it follows these steps:</p>
<p><strong>Parse the html page from the config and discover a <code>&lt;link&gt;</code> tag.</strong>
Instead of providing an URL to the endpoint directly, iA Writer expects an url to the root of your site, where it will attempt to detect a <code>&lt;link&gt;</code> in the <code>&lt;head&gt;</code> of your html with a <code>rel</code> of <code>micropub</code>, for example:</p>
<pre class="${"language-html"}">${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>micropub<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://&lt;blog url>/.netlify/functions/micropub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code>`}</pre>
<p><strong>Call the endpoint as GET with the token provided, this should return a config for the micropub API.</strong>
Once the micropub endpoint is discovered, iA Writer makes a GET request to the endpoint, expecting a JSON body in return, where it can detect the features of your micropub service.</p>
<p>It\u2019s perfenctly fine to return an empty JSON body in return:</p>
<pre class="${"language-js"}">${`<code class="language-js">  <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
    statusCode<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    body<span class="token operator">:</span> <span class="token string">"&#123;&#125;"</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}</pre>
<p><strong>When posting call the endpoint as POST with the title/markdown as JSON</strong></p>
<p>iA Writer expects a \u201Credirect\u201D header as a successful response and will open a browser window to this redirect target to show you the posted content.</p>
<pre class="${"language-js"}">${`<code class="language-js">  <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
    statusCode<span class="token operator">:</span> <span class="token number">201</span><span class="token punctuation">,</span>
    headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      Location<span class="token operator">:</span> <span class="token string">"https://&lt;blog url>/notes"</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}</pre>
<p>(This works if you have a CMS that posts the content instantly, in our case you\u2019ll see a page without the post, since Netlify still has to build the new site).</p>
<h2 id="${"micropub-endpoint"}"><a href="${"#micropub-endpoint"}">Micropub endpoint</a></h2>
<p>In order to satisfy the first step for the setup flow, let\u2019s add the required metadata tag to the \u201D<head>\u201D section of your site. (this is usually done in the \u201Clayout\u201D file).</head></p>
<pre class="${"language-html"}">${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>micropub<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://&lt;blog url>/.netlify/functions/micropub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code>`}</pre>
<p>This link in the header should point to the Netlify funcion we\u2019re about to create.</p>
<h2 id="${"netlify-function"}"><a href="${"#netlify-function"}">Netlify function</a></h2>
<p>In order to accept micropub content from iA Writer, we need to write a Netlify function that can handle both a GET request to return the config and a POST request to handle a new article.</p>
<p>For more information on how to setup functions, see the <a href="${"https://docs.netlify.com/functions/overview/"}" rel="${"nofollow"}">Netlify functions docs</a>.</p>
<p>In order to create a new page on GitHub, we only have one dependency the <code>@octokit/rest</code> package, which you can install in the root of your Netlify App with your favorite package manager, e.g.</p>
<pre class="${"language-null"}">${`<code class="language-null">yarn add @octokit/rest</code>`}</pre>
<p>Being responsible developers, we stored the token we used to setup this flow in iA Writer in an Environment variable on Netlify.</p>
<pre class="${"language-js"}">${`<code class="language-js"><span class="token comment">// ./functions/micropub.js</span>
<span class="token comment">// Our only dependency is @octokit/rest</span>
<span class="token comment">// We use the token/GitHub auth we've set in the ENV vars before.</span>
<span class="token keyword">const</span> <span class="token punctuation">&#123;</span> Octokit <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@octokit/rest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> octokit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Octokit</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  auth<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GITHUB_ACCESS_TOKEN</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

exports<span class="token punctuation">.</span><span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> context<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>

  <span class="token comment">// Verify the token we will use in iA Writer,</span>
  <span class="token comment">// set in Netlify Env settings on netlify.com</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
      <span class="token operator">!</span>event<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">"authorization"</span><span class="token punctuation">]</span> <span class="token operator">||</span>
      event<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">"authorization"</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">"Bearer "</span> <span class="token operator">+</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">TOKEN</span>
    <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
      statusCode<span class="token operator">:</span> <span class="token number">401</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> <span class="token string">"&#123;&#125;"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>

  <span class="token comment">// GET request, used by iA Writer to get the micropub config</span>
  <span class="token comment">// we can return an empty JSON here</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>httpMethod <span class="token operator">===</span> <span class="token string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
      statusCode<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> <span class="token string">"&#123;&#125;"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>

  <span class="token comment">// Parse the JSON event body from iA Writer</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Data: "</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// The format is a bit weird,</span>
  <span class="token comment">// where title and content are array values with a single entry</span>
  <span class="token keyword">const</span> title <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">"properties"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> content <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">"properties"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"content"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

  <span class="token comment">// I want the format of the filename to be yyyy-mm-dd-title-as-slug.html.md</span>
  <span class="token comment">// Javascript date handling is poor, (no strftime),</span>
  <span class="token comment">// lets hack something with the default date functions</span>
  <span class="token comment">// This saves us a library to import, also use a poor-mans slug generator</span>
  <span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> filename <span class="token operator">=</span> <span class="token punctuation">[</span>
    date<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'T'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// the date</span>
    title<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[W]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">"-"</span><span class="token punctuation">)</span> <span class="token comment">// the slug</span>
  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> fileContent <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token comment">// If we've written a post without fontmatter, insert default fontmatter</span>
  <span class="token comment">// this allows us to override the fontmatter in iA Writer if we want, but</span>
  <span class="token comment">// we can also just throw out a quick article without worrying about this.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>content<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"---"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    fileContent<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"---"</span><span class="token punctuation">)</span>
    fileContent<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'date: '</span> <span class="token operator">+</span> date<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    fileContent<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'title: '</span> <span class="token operator">+</span> title<span class="token punctuation">)</span>
    fileContent<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'category: note'</span><span class="token punctuation">)</span>
    fileContent<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'---'</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
  fileContent<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>

  <span class="token comment">// Create a new file on GitHub with the octokit library</span>
  <span class="token comment">// owner/repo and message/path are hardcoded here,</span>
  <span class="token comment">// you might want to change those to your own likings.</span>
  <span class="token keyword">return</span> octokit<span class="token punctuation">.</span>repos<span class="token punctuation">.</span><span class="token function">createOrUpdateFileContents</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    owner<span class="token operator">:</span> <span class="token string">"matsimitsu"</span><span class="token punctuation">,</span>
    repo<span class="token operator">:</span> <span class="token string">"matsimitsu.com"</span><span class="token punctuation">,</span>
    message<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">"Adding note: "</span> <span class="token operator">+</span> title<span class="token punctuation">)</span><span class="token punctuation">,</span>
    path<span class="token operator">:</span> <span class="token string">"source/notes/"</span> <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">".html.md"</span><span class="token punctuation">,</span>
    content<span class="token operator">:</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>fileContent<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"&#92;n"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">"base64"</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// Redirect iA Writer to the notes page, where the post will show up.</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
      statusCode<span class="token operator">:</span> <span class="token number">201</span><span class="token punctuation">,</span>
      headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        Location<span class="token operator">:</span> <span class="token string">"https://matsimitsu.com/notes"</span><span class="token punctuation">,</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// Log any errors, so we can debug later.</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
      statusCode<span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<h2 id="${"ia-writer-setup"}"><a href="${"#ia-writer-setup"}">iA Writer setup</a></h2>
<p>Finally, let\u2019s set up iA Writer to post to our Netlify function.</p>
<p>Under \u201Cpreferences\u201D there\u2019s an \u201Caccounts\u201D section, where we can add a new \u201Cmicropub\u201D account.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/blog/micropub/iawriter-micropub.png"}" alt="${"iA Writer micropub account"}"></p>
<p>To make it a bit easier for ourselves, we\u2019ll use a token to authenticate the endpoint and keep away from oAuth for now. In the \u201CURL\u201D field, fill in the root of your blog, not the API endpoint for micropub. This isn\u2019t really explained, but iA Writer will attempt to find the endpoint by itself from the HML source of the page. Putting the API endpoint in this field here will cause iA Writer to hang until you force-close it.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/blog/micropub/iawriter-add-micropub.png"}" alt="${"iA Writer new micropub account"}"></p>
<p>Once complete, we need to change one setting, we want iA Writer to send us the raw markdown, and not the content rendered by iA Writer in html. You can change this under the settings for the micropub account.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/blog/micropub/iawriter-micropub-markdown.png"}" alt="${"iA Writer markdown settings"}"></p>
<h2 id="${"publish-an-article"}"><a href="${"#publish-an-article"}">Publish an article</a></h2>
<p>With everything setup and deployed we can try publishing an article. After writing some content, click <strong>\u201CFile\u201D</strong> &gt; <strong>\u201CPublish\u201D</strong> and select your newly added micropub endpoint.</p>
<p><img src="${"https://d3khpbv2gxh34v.cloudfront.net/r/blog/micropub/iawriter-publish-micropub.png"}" alt="${"iA Writer publish through a micropub endpoint"}"></p>
<p>It should show a loading indicator and then open a new  browser window pointing to the article url. (which might return a 404, because Netlify is still busy building your site).</p>`
  })}`;
});
var _20200827IawriterMicropubNetlifyStaticSite = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2020_08_27_iawriter_micropub_netlify_static_site,
  metadata: metadata$h
});
const metadata$g = {
  "title": "Track cache hits with custom metrics",
  "date": "2017-11-13T00:00:00.000Z",
  "tags": null,
  "summary": "Track how well your caching is optimized by using custom metrics.",
  "appsignal": "https://blog.appsignal.com/2017/11/13/track-cache-hits-with-custom-metrics.html"
};
const _2017_11_13_track_cache_hits_with_custom_metrics = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$g), {}, {})}`;
});
var _20171113TrackCacheHitsWithCustomMetrics = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2017_11_13_track_cache_hits_with_custom_metrics,
  metadata: metadata$g
});
const metadata$f = {
  "title": "Realtime graphs from MongoDB with aggregations",
  "date": "2014-01-07T00:00:00.000Z",
  "tags": null,
  "summary": "In AppSignal, we process a ton of data: between 60 to 100 million entries per day. We aggregate this data with only few seconds delay. Let's see how we did this.",
  "appsignal": "https://blog.appsignal.com/2014/01/07/realtime-mongodb-with-aggregations.html"
};
const _2014_01_07_realtime_mongodb_with_aggregations = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$f), {}, {})}`;
});
var _20140107RealtimeMongodbWithAggregations = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2014_01_07_realtime_mongodb_with_aggregations,
  metadata: metadata$f
});
const metadata$e = {
  "title": "Apollo Query Batching and graphql-ruby",
  "date": "2018-06-10T00:00:00.000Z",
  "summary": "Query batching is a way to speed up your application. Instead of waiting on multiple client-server roundtrips to load data, everything is loaded at once."
};
const _2018_06_10_apollo_query_batching_and_graphql = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$e), {}, {
    default: () => `<p>Query batching is a way to speed up your application. Instead of waiting on multiple client-server roundtrips to load data, everything is loaded at once.</p>
<p>Enabling query batching in Apollo is as easy as using another network provider:</p>
<pre class="${"language-js"}">${`<code class="language-js">  <span class="token keyword">import</span> ApolloClient<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> createBatchingNetworkInterface <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'apollo-client'</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> batchingNetworkInterface <span class="token operator">=</span> <span class="token function">createBatchingNetworkInterface</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    uri<span class="token operator">:</span> <span class="token string">'localhost:3000'</span><span class="token punctuation">,</span>
    batchInterval<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>  <span class="token comment">// in milliseconds</span>
    batchMax<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    opts<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token comment">// Options to pass along to &#96;fetch&#96;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> apolloClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApolloClient</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    networkInterface<span class="token operator">:</span> batchingNetworkInterface<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`}</pre>
<p>On the Ruby you need to make a few more changes, but all can be done in your GraphQL Controller. You need to map the array of given queries to a format that graphql-ruby understands. The gist below handles both batched and non-batched queries.</p>
<pre class="${"language-rb"}">${`<code class="language-rb"><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">execute</span></span>
  context <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>

  <span class="token comment"># Apollo sends the params in a _json</span>
  <span class="token comment"># variable when batching is enabled</span>
  <span class="token comment"># see the Apollo Documentation about query batching:</span>
  <span class="token comment"># http://dev.apollodata.com/core/network.html#query-batching</span>
  result <span class="token operator">=</span> <span class="token keyword">if</span> params<span class="token punctuation">[</span><span class="token symbol">:_json</span><span class="token punctuation">]</span>
    queries <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token symbol">:_json</span><span class="token punctuation">]</span><span class="token punctuation">.</span>map <span class="token keyword">do</span> <span class="token operator">|</span>param<span class="token operator">|</span>
      <span class="token punctuation">&#123;</span>
        query<span class="token punctuation">:</span> param<span class="token punctuation">[</span><span class="token string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        operation_name<span class="token punctuation">:</span> param<span class="token punctuation">[</span><span class="token string">'operationName'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        variables<span class="token punctuation">:</span> ensure_hash<span class="token punctuation">(</span>param<span class="token punctuation">[</span><span class="token string">'variables'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        context<span class="token punctuation">:</span> context
      <span class="token punctuation">&#125;</span>
    <span class="token keyword">end</span>
    <span class="token constant">MySchema</span><span class="token punctuation">.</span>multiplex<span class="token punctuation">(</span>queries<span class="token punctuation">)</span>
  <span class="token keyword">else</span>
    <span class="token constant">MySchema</span><span class="token punctuation">.</span>execute<span class="token punctuation">(</span>
      params<span class="token punctuation">[</span><span class="token symbol">:query</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      operation_name<span class="token punctuation">:</span> params<span class="token punctuation">[</span><span class="token symbol">:operationName</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      variables<span class="token punctuation">:</span> ensure_hash<span class="token punctuation">(</span>params<span class="token punctuation">[</span><span class="token symbol">:variables</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      context<span class="token punctuation">:</span> context
    <span class="token punctuation">)</span>
  <span class="token keyword">end</span>

  render json<span class="token punctuation">:</span> result
<span class="token keyword">end</span></code>`}</pre>
<p>Batching queries can reduce the time your app is loading by a large amount, making for a more pleasant user experience.</p>`
  })}`;
});
var _20180610ApolloQueryBatchingAndGraphql = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2018_06_10_apollo_query_batching_and_graphql,
  metadata: metadata$e
});
const metadata$d = {
  "title": "Automatically water your plants with this 3d-printed system.",
  "date": "2019-10-12T00:00:00.000Z",
  "summary": "After getting back from a 3-week trip my plants were not in a good mood, there was a heatwave when I was gone and not all plants survived. Time to think of a solution."
};
const _2019_10_12_3d_printed_plant_watering_system = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$d), {}, {
    default: () => `<p>After getting back from a 3-week trip my plants were not in a good mood, there was a heatwave when I was gone and not all plants survived. Time to think of a solution.</p>
<h2 id="${"parts"}"><a href="${"#parts"}">Parts</a></h2>
<p>I had most of these parts laying around and it took suprisingly few parts to make this project work. There are probably better options for each part and an ESP8266 might be a bit overkill for what we\u2019re doing here, but at less than 2 dollars I am not going to bother with other options.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/plantr/IMG_20190924_144612.jpg",
      width: "2200",
      height: "1650",
      alt: "Photo of requried gear for plantr electrical components"
    }, {}, {})}
<p>Above you can see the following parts:</p>
<ul><li><strong>ESP8266 NodeMCU</strong> (<a href="${"https://nl.aliexpress.com/item/32647690484.html"}" rel="${"nofollow"}">AliExpress</a>). The brains of the operation, easy to use with the Arduino IDE and the surrounding print makes it easy to flash without having to solder certain pins and do other tricks.</li>
<li><strong>3v-5v Air pump</strong> (<a href="${"https://nl.aliexpress.com/item/32815282155.html"}" rel="${"nofollow"}">AliExpress</a>). I chose an over-pressure system in favor of a water pump, as I wanted everything enclosed and I\u2019d like to keep water as far away from electronics as possible.</li>
<li><strong>Capacitive soil sensor</strong> (<a href="${"https://nl.aliexpress.com/item/32829003131.html"}" rel="${"nofollow"}">AliExpress</a>). Most projects involving measuring soil water levels use a cheaper double-pronged circut board with metal. It corrodes quite fast, which this Capacitive soil sensor does not.</li>
<li><strong>STP16NF06L MOSFET</strong> (<a href="${"https://nl.aliexpress.com/item/32953020855.html"}" rel="${"nofollow"}">AliExpress</a>). The air pump works at 3volt, but not when connected directly to the NodeMCU digital out pin. Instead I hooked it up to the 5V VIN pin and use this mosfet with a digital out pin to trigger the air pump. There are probably better ways to do this, but it was the only thing I had laying around :).</li>
<li><strong>4X6 cm Prototype Circut board</strong> (<a href="${"https://nl.aliexpress.com/item/1625000537.html"}" rel="${"nofollow"}">AliExpress</a>). To solder the wires/Mosfet onto.</li>
<li>Some standard soldering stuff such as wires and male pins.</li></ul>
<p>Total cost: <strong>\u20AC 10.00</strong> or <strong>$ 11.00</strong>.</p>
<h2 id="${"housing"}"><a href="${"#housing"}">Housing</a></h2>
<p>I didn\u2019t want to have some electronics hanging around my plants so it\u2019s time to put that 3d printer to good use. I fired up Fusion360 and came up with this design for an enclosure.</p>
<p>It just fits the pump and electronics and \u201Conly\u201D takes about 4 hours to print.</p>
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/blog/plantr/IMG_20190924_145858.jpg",
        width: "2200",
        height: "1650",
        alt: "3d printer"
      }, {}, {})}
  ${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/blog/plantr/IMG_20190924_144650.jpg",
        width: "2200",
        height: "1650",
        alt: "Printed housing electrical components"
      }, {}, {})}`
    })}
<p>The soil sensor has to go into the plant pot and I\u2019d like to hang the enclosure on the side of the plant pot. This means we need some way for the sensor to connect to the circut board inside the enclosure and ideally without having wires outside of the pot. With a bit of measuring I figured out a place to solder 3 male header pins on the bottom of the circut board and line up a hole in the enclosure. The hole also lets the air in for the pump to function.</p>
${validate_component(Panels, "Panels").$$render($$result, {}, {}, {
      default: () => `${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/blog/plantr/IMG_20190924_144806.jpg",
        width: "2200",
        height: "1650",
        alt: "PCB side view"
      }, {}, {})}
  ${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
        src: "https://cdn.matsimitsu.com/blog/plantr/IMG_20190924_144820.jpg",
        width: "2200",
        height: "1650",
        alt: "3d printed housing"
      }, {}, {})}`
    })}
<p>After glue-ing in the circut board and the motor we end up with a nice filled-out enclosure.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/plantr/IMG_20190924_144941.jpg",
      width: "2200",
      height: "1945",
      alt: "Photo of electrical components inside of 3d printed housing"
    }, {}, {})}
<h2 id="${"software"}"><a href="${"#software"}">Software</a></h2>
<p>Time to load some code onto the NodeMCU.</p>
<p>Most of this build is based on the following instructables post: <a href="${"https://www.instructables.com/id/ESP8266-Soil-Moisture-Sensor-With-Arduino-IDE/"}" rel="${"nofollow"}">ESP8266 Soil Moisture Sensor With Arduino IDE</a>. I modified the code to remove the webpage and altered the calculation for my version of the moisture sensor.</p>
<pre class="${"language-c"}">${`<code class="language-c"><span class="token comment">/* ESP8266 Moisture Sensor
   Original code from: https://github.com/dmainmon/ESP8266-Soil-Moisture-Sensor
*/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ESP8266WiFi.h></span></span>

<span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> ssid <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> password <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> motorPin <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span> <span class="token comment">// ~D5</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> sensorPin <span class="token operator">=</span> A0<span class="token punctuation">;</span>

<span class="token keyword">double</span> analogValue <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> analogVolts <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>
bool runMotor <span class="token operator">=</span> LOW<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">pinMode</span><span class="token punctuation">(</span>motorPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Connect to WiFi network</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Connecting to "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ssid<span class="token punctuation">)</span><span class="token punctuation">;</span>

  WiFi<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>ssid<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// connect to WiFi router</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>WiFi<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> WL_CONNECTED<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"WiFi connected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>WiFi<span class="token punctuation">.</span><span class="token function">localIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>


<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  analogValue <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>sensorPin<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// read the analog signal</span>

  <span class="token comment">// convert the analog signal to voltage</span>
  <span class="token comment">// the ESP2866 A0 reads between 0 and ~3 volts, producing a corresponding value</span>
  <span class="token comment">// between 0 and 1024. The equation below will convert the value to a voltage value.</span>

  analogVolts <span class="token operator">=</span> <span class="token punctuation">(</span>analogValue <span class="token operator">*</span> <span class="token number">3.08</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">;</span>

  <span class="token comment">// now get our chart value by converting the analog (0-1024) value to a value between 0 and 100.</span>
  <span class="token comment">// the value of 400 was determined by using a dry moisture sensor (not in soil, just in air).</span>
  <span class="token comment">// When dry, the moisture sensor value was approximately 400. This value might need adjustment</span>
  <span class="token comment">// for fine tuning of the percentage.</span>

  <span class="token keyword">int</span> percentage <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>analogValue <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">850</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// now reverse the value so that the value goes up as moisture increases</span>
  <span class="token comment">// the raw value goes down with wetness, we want our chart to go up with wetness</span>
  percentage <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> percentage<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>percentage <span class="token operator">&lt;=</span> <span class="token number">25</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 0-25 is "dry soil"</span>
    runMotor <span class="token operator">=</span> HIGH<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    runMotor <span class="token operator">=</span> LOW<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>motorPin<span class="token punctuation">,</span> runMotor<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Serial data</span>
  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Analog raw: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>analogValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Analog V: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>analogVolts<span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"percentage: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>percentage<span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Run motor: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>runMotor<span class="token punctuation">)</span><span class="token punctuation">;</span>
  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Sleep 10 seconds</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>The code does a few things, it connects to WiFi (not used rightnow, but will use it to send data to <a href="${"https://www.home-assistant.io/"}" rel="${"nofollow"}">Home Assistant</a> in the next iteration). Every 10 seconds it measures the soil mosture levels. If it\u2019s below 25% it enables the motor, that will push air into the bottle and water out the other hose onto the soil.</p>
<h2 id="${"result"}"><a href="${"#result"}">Result</a></h2>
<p>Combine all the things together and you get this: a little device you can attach to your plant pot and a bottle of water with two hoses that will water your plant when the soil gets too dry.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/plantr/DSC09829.jpg",
      width: "2200",
      height: "1509",
      alt: "Plantr in action"
    }, {}, {})}`
  })}`;
});
var _201910123dPrintedPlantWateringSystem = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2019_10_12_3d_printed_plant_watering_system,
  metadata: metadata$d
});
const metadata$c = {
  "title": "A trakt.tv siri proxy plugin",
  "date": "2011-12-04T00:00:00.000Z",
  "tags": null,
  "summary": "Siri tells you your upcoming tv shows for the night.",
  "layout": "blog"
};
const _2011_12_04_a_trakt_tv_siri_proxy_plugin = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$c), {}, {
    default: () => `<h2 id="${"hi-siri"}"><a href="${"#hi-siri"}">Hi, Siri</a></h2>
<p>With the siri proxy gem (<a href="${"https://github.com/plamoni/SiriProxy"}" rel="${"nofollow"}">https://github.com/plamoni/SiriProxy</a>) creating your own fun stuff for iPhone 4s\u2019s Siri is pretty straight forward.</p>
<h2 id="${"hi-trakt"}"><a href="${"#hi-trakt"}">Hi, Trakt</a></h2>
<p><a href="${"https://trakt.tv"}" rel="${"nofollow"}">Trakt.tv</a> has an amazing API and I wrote a small wrapper (see <a href="${"https://github.com/matsimitsu/SiritTrakt/blob/master/lib/trakt.rb"}" rel="${"nofollow"}">lib/trakt.tv</a>) in the project) to fetch a users\u2019s calendar for that night.</p>
<h2 id="${"how-i-did-it"}"><a href="${"#how-i-did-it"}">How i did it.</a></h2>
<p>First off make sure you read all the documentation on the proxy github page, setting up the DNS server can be tricky if you don\u2019t follow all the steps in the video.</p>
<h3 id="${"naming"}"><a href="${"#naming"}">Naming</a></h3>
<p>Naming is very important for the siri proxy so make sure you do it right! The name you set in the siri proxy config should be the classname you extend the plugin from.
The name downcased should be the gem name (with siriproxy prepended)
It took me a while to figure out and get everything up and running.</p>
<h3 id="${"code"}"><a href="${"#code"}">Code</a></h3>
<pre class="${"language-ruby"}">${`<code class="language-ruby"><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">generate_calendar_response</span></span><span class="token punctuation">(</span>ref_id<span class="token punctuation">)</span>
  object <span class="token operator">=</span> <span class="token constant">SiriAddViews</span><span class="token punctuation">.</span><span class="token keyword">new</span>
  object<span class="token punctuation">.</span>make_root<span class="token punctuation">(</span>ref_id<span class="token punctuation">)</span>
  object<span class="token punctuation">.</span>views <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token constant">SiriAssistantUtteranceView</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">"Here is your trakt calendar!"</span><span class="token punctuation">)</span>

  episodes <span class="token operator">=</span> <span class="token constant">Trakt</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">User</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">Calendar</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">.</span>results<span class="token punctuation">.</span>first<span class="token punctuation">[</span><span class="token string">'episodes'</span><span class="token punctuation">]</span>
  episodes<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>calendar_result<span class="token operator">|</span>
    object<span class="token punctuation">.</span>views <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token constant">SiriAssistantUtteranceView</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>calendar_result<span class="token punctuation">[</span><span class="token string">'show'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span>
  object
<span class="token keyword">end</span>

listen_for <span class="token operator">/</span>what's on tv tonight<span class="token operator">/</span>i <span class="token keyword">do</span>
  send_object <span class="token keyword">self</span><span class="token punctuation">.</span>generate_calendar_response<span class="token punctuation">(</span>last_ref_id<span class="token punctuation">)</span>
  request_completed
<span class="token keyword">end</span></code>`}</pre>
<p>The listen_for tells the proxy what words to match with the response from apple, the code in the block gets executed when the words match</p>
<p>In the generate_calendar_response i create a new view and add every episode i get from trakt to it. The whole thing gets returned to your iPhone and siri tells you the results :)</p>
<h2 id="${"the-result"}"><a href="${"#the-result"}">The result</a></h2>
<p>The video below shows the result.</p>
${'<iframe width="100%" height="500" src="https://www.youtube.com/embed/Utu9o5WG1d0" frameborder="0" allowfullscreen></iframe>'}
<p>As always the code can be found on <a href="${"https://github.com/matsimitsu/SiritTrakt"}" rel="${"nofollow"}">GitHub</a></p>`
  })}`;
});
var _20111204ATraktTvSiriProxyPlugin = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2011_12_04_a_trakt_tv_siri_proxy_plugin,
  metadata: metadata$c
});
const metadata$b = {
  "title": "Taming our MongoDB database size.",
  "date": "2013-07-30T00:00:00.000Z",
  "tags": null,
  "summary": "Not so long ago we noticed that our MongoDB servers were running out of disk space at an alarming rate. Because we host our database on SSD enabled servers at DigitalOcean, scaling up could cost us a lot of money.",
  "appsignal": "https://blog.appsignal.com/2013/07/30/taming-mongodb-disk-usage.html"
};
const _2013_07_30_taming_mongodb_disk_usage = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$b), {}, {})}`;
});
var _20130730TamingMongodbDiskUsage = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2013_07_30_taming_mongodb_disk_usage,
  metadata: metadata$b
});
const metadata$a = {
  "title": "Custom Exceptions in Ruby",
  "date": "2018-07-03T00:00:00.000Z",
  "tags": null,
  "summary": "Almost everything in Ruby is an object and errors are no exception.",
  "appsignal": "https://blog.appsignal.com/2018/07/03/custom-exceptions-in-ruby.html"
};
const _2018_07_03_custom_exceptions_in_ruby = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$a), {}, {})}`;
});
var _20180703CustomExceptionsInRuby = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2018_07_03_custom_exceptions_in_ruby,
  metadata: metadata$a
});
const metadata$9 = {
  "title": "The innards of a RubyGem",
  "date": "2018-10-23T00:00:00.000Z",
  "tags": null,
  "summary": "Share code with yourself or others by utilizing the RubyGems ecosystem.",
  "appsignal": "https://blog.appsignal.com/2018/10/23/the-innards-of-a-ruby-gem.html"
};
const _2018_10_23_the_innards_of_a_ruby_gem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$9), {}, {})}`;
});
var _20181023TheInnardsOfARubyGem = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2018_10_23_the_innards_of_a_ruby_gem,
  metadata: metadata$9
});
const metadata$8 = {
  "title": "A quick post about reducing MongoDB queries",
  "date": "2013-06-13T00:00:00.000Z",
  "tags": null,
  "summary": "Recently we noticed that our database was doing a lot of queries while processing our queue. Lets see if we can fix that.",
  "appsignal": "https://blog.appsignal.com/2013/06/13/reducing-mongodb-queries.html"
};
const _2013_06_13_reducing_mongodb_queries = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$8), {}, {})}`;
});
var _20130613ReducingMongodbQueries = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2013_06_13_reducing_mongodb_queries,
  metadata: metadata$8
});
const metadata$7 = {
  "title": "Creating a small Stimulus.js app to handle Markdown Images",
  "date": "2019-02-14T00:00:00.000Z",
  "tags": null,
  "summary": "Markdown is great, but not so much when you have dozens of images in a file and don't know what is what. This little app helps me sort through the images."
};
const _2019_02_14_dropzone_app_stimulus_js = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$7), {}, {
    default: () => `<h2 id="${"the-problem"}"><a href="${"#the-problem"}">The problem.</a></h2>
<p>I take a lot of photo\u2019s on each trip I take and collect them on my <a href="${"https://matsimitsu.com/trips/asia-2014"}" rel="${"nofollow"}">blog</a>. Each of these photo\u2019s is inserted into a markdown file and after a dozen or more images the markdown becomes unreadable.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/dropzone-app/text-editor.jpg",
      width: "1717",
      height: "1216",
      alt: "Screenshot of vs-code with this blogs code"
    }, {}, {})}
<p>I upload the images to S3 with <a href="${"https://cyberduck.io/"}" rel="${"nofollow"}">CyberDuck</a> and from there AWS Lambda takes care of image resizing. This way I can drop an entire folder of images onto CyberDuck and everything is taken care of.</p>
<p>Well.. everything but inserting the images into the markdown file. I did have a script for that, but usually I like to arrange images in a different order, or group them together. This is really tedious with 50 images, as I have to refresh the page each time I move an image.</p>
<h2 id="${"the-solution"}"><a href="${"#the-solution"}">The solution.</a></h2>
<p>What I want is a place where I can see all the images I can use and get the correct markdown tag to insert into my post.</p>
<p>I can build a 200MB Electron App with React, but we can do the job a lot easier with plain HTML and <a href="${"https://stimulusjs.org/"}" rel="${"nofollow"}">Stimulus.js</a>. Their <a href="${"https://stimulusjs.org/handbook/building-something-real"}" rel="${"nofollow"}">handbook</a> already describes a good part of what I want, something that can set my clipboard to a markdown tag.</p>
<h3 id="${"dropzone"}"><a href="${"#dropzone"}">Dropzone.</a></h3>
<p>The \u201Capp\u201D will consist of a \u201Cdrop zone\u201D where I can drop images and an input where I can set the base url for the markdown tag.</p>
<p>The HTMl looks something like this:</p>
<pre class="${"language-html"}">${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">data-controller</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropzone<span class="token punctuation">"</span></span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropzone<span class="token punctuation">"</span></span>
  <span class="token attr-name">data-action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dragover->dropzone#acceptDrop drop->dropzone#handleDrop dragleave->dropzone#leaveDrop<span class="token punctuation">"</span></span>
<span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>
    Base url: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropzone.baseUrl<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropzone.polaroidList<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`}</pre>
<p>We have a Stimulus controller called \u201Cdropzone\u201D that listens to three DOM events, <code>dragOver</code>, <code>drop</code> and <code>dragLeave</code>. It maps these to three Javascript functions in the Stimulus controller.</p>
<p>For example <code>dragover-&gt;dropzone#acceptDrop</code> means that Stimulus will call <code>acceptDrop</code> on the <code>dropzone</code> controller when <code>dragOver</code> is triggered.</p>
<p>To get a working URL to the image we need a base url that will prepend the image name, for this we use an input. To be able to read the input from Stimulus, we have to make it available. We do this by setting it as a target with <code>data-target=&quot;dropzone.baseUrl&quot;</code>.</p>
<p>We also need a place to render the dropped image, for this we also need a target, in this case it\u2019s the <code>UL</code> with <code>data-target=&quot;dropzone.polaroidList&quot;</code>.</p>
<h3 id="${"the-stimulus-controller"}"><a href="${"#the-stimulus-controller"}">The Stimulus controller.</a></h3>
<p>The Stimulus controller looks like this:</p>
<pre class="${"language-javascript"}">${`<code class="language-javascript">application<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">"dropzone"</span><span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> Stimulus<span class="token punctuation">.</span>Controller <span class="token punctuation">&#123;</span>
  <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token function">targets</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">"polaroidList"</span><span class="token punctuation">,</span> <span class="token string">"baseUrl"</span><span class="token punctuation">]</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">acceptDrop</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"dropzone--dropping"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">leaveDrop</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"dropzone--dropping"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">handleDrop</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	  ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* [...] */</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">addImage</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/* [...] */</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">renderImage</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/* [...] */</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`}</pre>
<p>We can see the three bound functions, <code>acceptDrop</code> that adds a class to our element, so we can style it accordingly to let the user know that the files can be dropped. <code>leaveDrop</code> to remove the styling when the user decides to not drop the images. Finally <code>handleDrop</code> that will proces the dropped files to render images.</p>
<p>There are two other functions that we\u2019ll need to render the image.</p>
<h3 id="${"drop-the-image"}"><a href="${"#drop-the-image"}">Drop the image.</a></h3>
<p>Let\u2019s start with handling the files that have been dropped, we need to get the data from the file, so we can render an image.</p>
<p><a href="${"https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop#Process_the_drop"}" rel="${"nofollow"}">Mozilla\u2019s MDN</a> tells me this is the way to do it, so we\u2019ll use that.</p>
<pre class="${"language-javascript"}">${`<code class="language-javascript"><span class="token function">handleDrop</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"dropzone--dropping"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>items<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// Use DataTransferItemList interface to access the file(s)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token comment">// If dropped items aren't files, reject them</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">'file'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> file <span class="token operator">=</span> ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAsFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// Use DataTransfer interface to access the file(s)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>We start by removing the <code>dropzone\u2014dropping</code> class from the element, so it no longer tells the user it\u2019s ok to drop files (as that\u2019s already been done).</p>
<p>Then we check what kind of drop event we have, depending on the browser we need to handle the event differently. Both ways result in the <code>addImage</code> method being called with the dropped file, let\u2019s see what it does.</p>
<h3 id="${"load-the-image"}"><a href="${"#load-the-image"}">Load the image.</a></h3>
<p>Now that we have the raw data from the dropped file, we need to convert it into an Image, as we can\u2019t display the raw data by itself. This is where <a href="${"https://developer.mozilla.org/en-US/docs/Web/API/FileReader"}" rel="${"nofollow"}">FileReader</a> comes in.  It\u2019s a way to read raw data and return a <code>data:</code> url that we can use in the image\u2019s <code>src</code> tag. <a href="${"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs"}" rel="${"nofollow"}">You can read more about it here</a></p>
<p>The FileReader works with a callback, and our function looks like this:</p>
<pre class="${"language-javascript"}">${`<code class="language-javascript"><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span> <span class="token operator">=></span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderImage</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> event<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>We create a new FileReader and set the <code>onload</code> event to call <code>renderImage</code> in our controller. We then pass in the raw data so it can load the data.</p>
<h3 id="${"render-the-image"}"><a href="${"#render-the-image"}">Render the image.</a></h3>
<p>Now that we have a <code>data:</code> url that works with the image\u2019s <code>src</code> attribute, we need some place to render it.</p>
<p>We can use a lot of <code>document.createElement</code> calls to eventually get the structure we need, but modern browsers have a much nicer way to accomplish this called <a href="${"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template"}" rel="${"nofollow"}">templates</a>.</p>
<p>Ours looks like this:</p>
<pre class="${"language-html"}">${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid-template<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">data-controller</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid.image<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid-copied<span class="token punctuation">"</span></span> <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid.copied<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      Copied!
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>copy-elements<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid.source<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">data-action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid#copy<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid-button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
       Copy
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code>`}</pre>
<p>Because we use the <code>&lt;template&gt;</code> tag, the browser won\u2019t actually render this HTML, but we can still use it to populate it with our image and render it to the DOM.</p>
<p>If you look closely you can see that this template contains another Stimulus controller named <code>polaroid</code>.</p>
<p>This is where <code>renderImage()</code> in our controller comes in.</p>
<pre class="${"language-javascript"}">${`<code class="language-javascript"><span class="token function">renderImage</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> template <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#polaroid-template'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Clone template and fill the values</span>
  <span class="token keyword">var</span> clone <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">importNode</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span>content<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Set the image source and data attributes from the FileReader</span>
  <span class="token keyword">var</span> img <span class="token operator">=</span> clone<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  img<span class="token punctuation">.</span>src <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
  img<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"data-filename"</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  img<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"data-url"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseUrlTarget<span class="token punctuation">.</span>value <span class="token operator">+</span> file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>polaroidListTarget<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>What we can do with the template is clone it to a new element and then change the attributes of its children to the values we like.</p>
<p>In our case we render the given image to the <code>img</code> tag and we set two data attributes we need along the way.</p>
<p>You can also see that we use the two targets we made in our HTML, <code>baseUrl</code> and <code>polaroidList</code>. We can access these targets in our Stimulus class by appending <code>Target</code> to the names. <code>polaroidList</code> becomes <code>polaroidListTarget</code> which we use to append our cloned template to the DOM.</p>
<p>With a few sprinkles of CSS it should look something like this:</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/dropzone-app/screenshot-dropzone-controller.jpg",
      width: "1367",
      height: "1230",
      alt: "Screenshot of webpage with dropzone controller"
    }, {}, {})}
<h2 id="${"the-polaroid"}"><a href="${"#the-polaroid"}">The Polaroid</a></h2>
<p>As described before, the template tag contained a <code>polaroid</code> controller <code>data</code> attribute. This is hooked up to a <code>polaroid</code> controller in Stimulus.js that looks like this:</p>
<pre class="${"language-javascript"}">${`<code class="language-javascript">application<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">"polaroid"</span><span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> Stimulus<span class="token punctuation">.</span>Controller <span class="token punctuation">&#123;</span>
  <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token function">targets</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">"source"</span><span class="token punctuation">,</span> <span class="token string">"image"</span><span class="token punctuation">]</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">copy</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sourceTarget<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">"copy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"polaroid--copied"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">queryCommandSupported</span><span class="token punctuation">(</span><span class="token string">"copy"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"polaroid--supported"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">var</span> input <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sourceTarget<span class="token punctuation">;</span>
    <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>imageTarget<span class="token punctuation">;</span>
    <span class="token keyword">var</span> ratio <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>naturalWidth <span class="token operator">/</span> img<span class="token punctuation">.</span>naturalHeight <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>

    <span class="token comment">// Sets a markdown image tag: ![filename](url, ratio)</span>
    input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">"!["</span> <span class="token operator">+</span> img<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"data-filename"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"]("</span> <span class="token operator">+</span> img<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"data-url"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" ""</span> <span class="token operator">+</span> ratio <span class="token operator">+</span> <span class="token string">"")"</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`}</pre>
<p>The template set two targets:</p>
<p>The image tag (<code>&lt;img data-target=&quot;polaroid.image&quot; /&gt;</code>) and an input field (<code>&lt;input data-target=&quot;polaroid.source&quot; /&gt;</code>) where we\u2019ll generate the markdown tag.</p>
<p>We use the <code>connect()</code> function that is called whenever a new controller is detected to check if the browser supports clipboard access and if it does we\u2019ll add a class name to the polaroid element. We can use CSS to render the copy button.</p>
<p>We also calculate the image ratio and fill out the input field, based on the data from the <code>data</code> attributes we passed in the <code>dropzone</code> controller using the <code>target</code>s mentioned above.</p>
<h3 id="${"set-clipboard"}"><a href="${"#set-clipboard"}">Set clipboard</a></h3>
<p>The last thing we need to do is to connect the link that says <code>copy</code> with the Stimulus controller:</p>
<pre class="${"language-html"}">${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">data-action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid#copy<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>polaroid-button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  Copy
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code>`}</pre>
<p>This will call the <code>copy</code> function in our controller:</p>
<pre class="${"language-javascript"}">${`<code class="language-javascript"><span class="token function">copy</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>sourceTarget<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">"copy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"polaroid--copied"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`}</pre>
<p>The <code>copy</code> function stops the event so we can handle it ourselves. We select the value of the input and issue the <code>copy</code> command to the browser. Finally we add a class to our <code>polaroid</code> element, so we can show that the file has been copied.</p>
<p>With a few <a href="${"https://fontawesome.com/"}" rel="${"nofollow"}">fontawesome</a> icons and a bit of CSS it now looks like this:</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/dropzone-app/screenshot-app-complete.jpg",
      width: "1367",
      height: "1230",
      alt: "Screenshot of dropzone completed app"
    }, {}, {})}
<p>You can find the code on <a href="${"https://gist.github.com/matsimitsu/629ea64255f3e458a9bdba3415727e18"}" rel="${"nofollow"}">GitHub</a> and view a <a href="${"https://matsimitsu.com/dropzone/"}" rel="${"nofollow"}">live demo here</a></p>
<p>With all these amazing frameworks we have available these days it\u2019s very easy to make a small one-page app to scratch an itch and Stimulus.js is a great library to add dynamic items to your page without having to use React or Vue and if you still use jQuery I highly recommend to move to Stimulus.js.</p>`
  })}`;
});
var _20190214DropzoneAppStimulusJs = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2019_02_14_dropzone_app_stimulus_js,
  metadata: metadata$7
});
const metadata$6 = {
  "title": "Using MailGun Europe with Rails\u2019s ActionMailer.",
  "date": "2019-12-03T00:00:00.000Z",
  "summary": "If you like to use Mailgun's Europe region you need some undocumented settings in the ActionMailer integration to get emails out."
};
const _2019_12_03_mailgun_europe_and_rails = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$6), {}, {
    default: () => `<p>You\u2019d think this isn\u2019t worth a blogpost, since Mailgun has a <a href="${"https://github.com/mailgun/mailgun-ruby"}" rel="${"nofollow"}">dedicated <code>mailgun-ruby</code> gem</a> for sending emails and it integrates well with Rails\u2019s ActionMailer. However when setting this up last night a couple of errors were thrown my way that took some time to resolve.</p>
<h2 id="${"mailgunparseerror-765-unexpected-token-at-mailgun-magnificent-api"}"><a href="${"#mailgunparseerror-765-unexpected-token-at-mailgun-magnificent-api"}">Mailgun::ParseError (765: unexpected token at \u2018Mailgun Magnificent API\u2019)</a></h2>
<p>First, when setting up a new Mailgun domain, it will ask you what language you\u2019re using and shows an API key and a URL to use for sending emails.</p>
<p>In Rails the ActionMailer config in <code>config/environments/production.rb</code> looks like this:</p>
<pre class="${"language-ruby"}">${`<code class="language-ruby">  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>mailgun_settings <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token symbol">:api_key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>your_api_key<span class="token operator">></span><span class="token punctuation">,</span>
    <span class="token symbol">:domain</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>your_domain<span class="token operator">></span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span></code>`}</pre>
<p>If you enter the full url from the Mailgun page in the <code>domain</code> field, Mailgun will return a <code>Mailgun::ParseError (765: unexpected token at &#39;Mailgun Magnificent API&#39;)</code> error. You have to change the <code>domain</code> to your sending domain (e.g. <code>mg.matsimitsu.com</code>).</p>
<h2 id="${"mailgun-api-response-404-not-found"}"><a href="${"#mailgun-api-response-404-not-found"}">Mailgun API response 404 (NOT FOUND)</a></h2>
<p>Second if you selected Europe as the region for your new domain, and you fixed the issue above, you\u2019ll get a new error along the lines of <code>Mailgun API response 404 (NOT FOUND)</code>.</p>
<p>What\u2019s happening is that the API can\u2019t find your credentials/domain, since it\u2019s hosted in another region.</p>
<p>Now the Gem documentation doesn\u2019t mention this (yet, <a href="${"https://github.com/mailgun/mailgun-ruby/pull/175"}" rel="${"nofollow"}">multiple</a> <a href="${"https://github.com/mailgun/mailgun-ruby/pull/174"}" rel="${"nofollow"}">pulls</a> <a href="${"https://github.com/mailgun/mailgun-ruby/pull/170"}" rel="${"nofollow"}">have</a> <a href="${"https://github.com/mailgun/mailgun-ruby/pull/163"}" rel="${"nofollow"}">been</a> made, but somehow none have been merged yet).</p>
<p>You have to specify a 3rd parameter to the ActionMailer config, <code>api_url</code> that points to the Europe region API.</p>
<p>Your <code>config/environments/production.rb</code> should contain something like:</p>
<pre class="${"language-ruby"}">${`<code class="language-ruby">  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>delivery_method <span class="token operator">=</span> <span class="token symbol">:mailgun</span>
  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>mailgun_settings <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token symbol">:api_key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>your_api_key<span class="token operator">></span><span class="token punctuation">,</span>
    <span class="token symbol">:domain</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>your_domain<span class="token operator">></span><span class="token punctuation">,</span> <span class="token comment"># e.g. mg.matsimitsu.com</span>
    <span class="token symbol">:api_host</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"api.eu.mailgun.net"</span>
  <span class="token punctuation">&#125;</span></code>`}</pre>
<p>And of course we use ENV vars in production:</p>
<pre class="${"language-ruby"}">${`<code class="language-ruby">  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>delivery_method <span class="token operator">=</span> <span class="token symbol">:mailgun</span>
  config<span class="token punctuation">.</span>action_mailer<span class="token punctuation">.</span>mailgun_settings <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token symbol">:api_key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"MAILGUN_API_KEY"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token symbol">:domain</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"MAILGUN_DOMAIN"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token symbol">:api_host</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"api.eu.mailgun.net"</span>
  <span class="token punctuation">&#125;</span></code>`}</pre>
<p>With these two fixes applied and deployed, emails were flowing again \\o/.</p>`
  })}`;
});
var _20191203MailgunEuropeAndRails = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2019_12_03_mailgun_europe_and_rails,
  metadata: metadata$6
});
const metadata$5 = {
  "title": 'Fixing Sony RX100 "Turn camera off then on" message',
  "date": "2018-04-08T00:00:00.000Z",
  "summary": 'After cleaning my Sony RX100 Mk1, the "Turn camera off then on" appeared on my screen and I had to replace a certain ribbon cable to fix it.',
  "image": {
    "src": "https://cdn.matsimitsu.com/blog/rx-100/DSC00655.jpg",
    "width": 1100,
    "height": 733,
    "alt": "Sony RX-100 Lens assembly in vise side view"
  }
};
const _2018_04_08_fix_rx100_startup_issue = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$5), {}, {
    default: () => `<p>I\u2019ve had the RX100 as my \u201Cdaily camera\u201D for a couple of years now and it survived many trips and environments. But after all these years there was getting more and more sand and dust between the buttons and dials, causing all kinds of issues. It would randomly select different scenes or change the exposure while shooing pictures.</p>
<p>To fix this I opened up the camera to clear out all the dust and sand. At first this operation seemed successful, because all the buttons felt smooth again and the camera turned on. But that was about as far as my luck went. After switching on the camera an error message appeared: \u201CTurn the camera off then on\u201D.</p>
<p>Googling this message quickly revealed that this mostly seemed to happen, because a certain ribbon cable would fail as it\u2019s bent in a weird angle and the pressure from it being stuck between the print plate and the body causes it to break.</p>
<p>To fix this issue you\u2019d have to send your camera to a repair shop that quotes about $300,- to fix the issue. Since the camera was about $450,- new when I bought it in Japan I didn\u2019t feel like spending almost as much to fix it.</p>
<p>After some more searching I found out that you\u2019re able to order a replacement cable on AliExpress and you could replace the cable yourself. (<a href="${"https://nl.aliexpress.com/item/50PCS-FREE-SHIPPING-NEW-Digital-Camera-Repair-Parts-for-Canon-S2IS-S3is-S5is-S2-S3-S5/1877412527.html"}" rel="${"nofollow"}">I bought the cable at this AliExpress store for $14,-</a>)</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00634.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 data cable"
    }, {}, {})}
<p>Time to replace this puppy.</p>
<p>First I opened up the camera by removing the bottom plate that is attached with screws and a click system, after unscrewing all the screws gently pry it from the body.</p>
<p>After that I removed the backplate and screen by unscrewing a pair of screws on either side and also gently prying it loose from the body. Be careful to remove the speaker from the backplate on the bottom left corner (just pry it out), before bending the backplate over.</p>
<p>It should end up looking something like this:</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00632.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 opened"
    }, {}, {})}
<p>Start prying of the black plastic cover by gently pulling it from the lens unit. There will be a lot of glue-like stuff stuck to it.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00635.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 internals"
    }, {}, {})}
<p>The lens unit is attached to the print by three ribbon cables. A small one is attached at the top left. Then there\u2019s a wide cable at the middle right of the lens. And finally our culprit on the bottom right of the lens unit.</p>
<p>You can loosen these cables by using a flat screwdriver and gently pushing against the notches on the cable, away from it\u2019s connection point.</p>
<p>With a little bit of wiggling you can remove the lens unit from the body.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00636.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 Lens removed"
    }, {}, {})}
<p>It seems Sony is a big fan of origami, because the ribbon cable is folded in all kinds of ways around the lens.</p>
<p>Lets start with the motor, you can detach it from the lens unit by pulling it up. Chances are a long cogwheel will fall out, just don\u2019t forget to put it back after replacing the ribbon.</p>
<p>Around the plastic gearbox attached to the motor is a metallic clip, you can pry it loose it on one side, and it will reveal two connectors attached to the ribbon cable. Carefully pry them loose from the gearbox.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00639.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 Motor details"
    }, {}, {})}
<p>The ribbon splits in two near the motor, follow the other path and you\u2019ll get to a connector at the side of the lens. Carefully remove the connector and then lift the ribbon cable up from the round notch. There will be another part of the same ribbon cable below that, also remove that from the round notch.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00642.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 Lens assembly"
    }, {}, {})}
<p>The last step of removal is to remove the white tape and follow the cable to the end, carefully remove the two cables coming from the connectors and remove the cable entirely. It\u2019s attached the the lens unit with two little notches at either side, gently bend the cable in the middle between the two connectors and it will come off.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00643.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 internals"
    }, {}, {})}
<p>The only part of the ribbon you have to solder yourself is the attachment to the motor. Heat up the old solder and remove the cable. Then attach the new cable and solder it in place.</p>
<p><strong>Be careful to make sure it\u2019s soldered in the right direction and with the metallic parts on the ribbon facing outward.</strong></p>
<p>Connect the two connectors to the gearbox and re-attach the metallic clip. One of the connectors will have a 180 degrees bend in the ribbon cable just before the connectors in order to attach it (it goes around the metallic clip).</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00648.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 Lens motor"
    }, {}, {})}
<p>Next up, start at the end of the ribbon cable with the two connectors we removed in the last removal step. Gently bend the cable between the two connectors to get the notches back into the lens unit and don\u2019t forget to re-attach the two cables there.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00650.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 Lens assembly in vise top view"
    }, {}, {})}
<p>Then guide the cable around the lens and attach it at the next notch, first wrap the hole in the cable around the square notch and then stretch it over the round notch. Do this for the lose end with the other connector as well, it should look like the picture below.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00653.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 Lens assembly in vise side view"
    }, {}, {})}
<p>Then attach the gearbox back to the lens unit, just push it on, making sure to check that the very long cogwheel is in place first.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00655.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 Lens assembly in vise side view"
    }, {}, {})}
<p>Finally guide the cable around the back of the lens unit. Attach both parts of the ribbon to the square notch at the top left of the unit below and then stretch it over the round notch at the right of the lens.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00658.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 lens assembly"
    }, {}, {})}
<p>Now wiggle the lens unit back into the body and re-attach the three ribbons (top left, middle right and our culprit on the bottom right).</p>
<p>Then snap the LCD back on and the two covers. Re-do all the screws and if all went well your camera should start up without the pesky \u201CTurn camera off then on\u201D message.</p>
${validate_component(ResponsiveImage, "ResponsiveImage").$$render($$result, {
      src: "https://cdn.matsimitsu.com/blog/rx-100/DSC00660.jpg",
      width: "1100",
      height: "733",
      alt: "Sony RX-100 repaired"
    }, {}, {})}`
  })}`;
});
var _20180408FixRx100StartupIssue = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2018_04_08_fix_rx100_startup_issue,
  metadata: metadata$5
});
const metadata$4 = {
  "title": "Identifying and Resolving a Kafka Issue With AppSignal",
  "date": "2019-04-23T00:00:00.000Z",
  "tags": null,
  "summary": "In this post, I'll tell you how we used AppSignal to detect and resolve an issue we had last week with our Kafka brokers.",
  "appsignal": "https://blog.appsignal.com/2020/08/17/identifying-and-resolving-a-kafka-issue-with-appsignal.html"
};
const _2019_04_23_kafka_sidekiq_ruby = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$4), {}, {})}`;
});
var _20190423KafkaSidekiqRuby = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2019_04_23_kafka_sidekiq_ruby,
  metadata: metadata$4
});
const metadata$3 = {
  "title": "Upgrading to Mongoid 5 / mongo-ruby-driver",
  "date": "2016-02-05T00:00:00.000Z",
  "tags": null,
  "summary": "We recently upgraded our database driver from moped/mongoid4 tot mongo-ruby-driver/mongoid5 and these are a few things we encountered along the way.",
  "appsignal": "https://blog.appsignal.com/2016/03/21/upgrading-mongoid.html"
};
const _2016_02_05_upgrading_mongoid = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$3), {}, {})}`;
});
var _20160205UpgradingMongoid = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2016_02_05_upgrading_mongoid,
  metadata: metadata$3
});
const metadata$2 = {
  "title": "Consistent API's",
  "date": "2014-08-04T00:00:00.000Z",
  "tags": null,
  "summary": "How to keep your API, client tests and documentation in sync.",
  "appsignal": "https://blog.appsignal.com/2014/08/04/consistent-api.html"
};
const _2014_08_04_consistent_api = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$2), {}, {})}`;
});
var _20140804ConsistentApi = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2014_08_04_consistent_api,
  metadata: metadata$2
});
const metadata$1 = {
  "title": "Blog update: from dynamic app to a static site",
  "date": "2019-01-27T00:00:00.000Z",
  "tags": null,
  "summary": "Moving (again) from Rails API + React to a static Middleman"
};
const _2019_01_27_blog_update = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata$1), {}, {
    default: () => `<h2 id="${"from-a-static-site-to-a-webapp"}"><a href="${"#from-a-static-site-to-a-webapp"}">From a static site to a webapp.</a></h2>
<p>A little over a year ago I moved from a (static) Middleman hosted blog to a project called <a href="${"https://github.com/daybreakers-co"}" rel="${"nofollow"}">Daybreakers</a>. A Rails API + React App that was focused on creating a platform where you can create \u201Ctravel blogs\u201D. The idea behind it was that it\u2019s kind of annoying to create a good looking \u201Cphotoset\u201D app on a static site platform. As they all dance around the issue on what to do with the photo\u2019s.</p>
<p>Most static site generators are meant for blogpost, where the main content is text and not images. Since most people commit their content to Git(Hub), there\u2019s also a limit on how many photo\u2019s you can add on your blog.</p>
<p>Then there\u2019s the issue of hosting, Netlify for example doesn\u2019t like to host a ton of photo\u2019s. And having a ton of photo\u2019s in your static site project doesn\u2019t make the build times any faster.</p>
<p>My blog consisted of many photosets, tallying up to around 6 Gigabyte of photos, a nightmare to have in version control and to build a static site with.</p>
<h2 id="${"to-maintain-a-webapp"}"><a href="${"#to-maintain-a-webapp"}">To maintain a webapp.</a></h2>
<p>As is usual with a new project, in the beginning progress was fast and I quickly had a simple app that granted all my wishes. A nice UI to create photosets, a 3rd party that took care of resizing photo\u2019s on the fly in great quality and within a few weeks I had transferred over all my posts to this new platform.</p>
<p>But then the attention dropped, as it was doing everything I wanted, and every time I tried to add a new feature I had to make changes in the Rails models, the GraphQL API and in the frontend, making it quite tedious to work on.</p>
<p>After not really touching it for nearly a year, packages started to get outdated and GitHub was notifying me of security issues.</p>
<p>Finally there was the monthly bill to run this entire setup, hosting and the 3rd party costs for storing the photos and the dynamic resize were adding up quickly.</p>
<p>So while this platform did everything I wanted and was a joy to use on trips to create new photosets, it was too costly and too complex to continue, so I made the switch back to Middleman</p>
<h2 id="${"from-a-webapp-back-to-a-static-site"}"><a href="${"#from-a-webapp-back-to-a-static-site"}">From a webapp back to a static site.</a></h2>
<p>I learned a lot from creating Daybreakers and a most of it has gone into this Middleman project, for example resizing is done automatically with AWS Lambda, every time a photo is added to an S3 bucket.</p>
<p>I\u2019ve also created my own custom markdown extension that adds modifies the standard markdown output regarding images, so my photo\u2019s are automatically added to a <code>&lt;figure&gt;</code> tag with all kinds of responsive features.</p>
<p>The Daybreakers React frontend did a lot of magic to get the best image for a certain space in the layout, and I managed to replicate most of it with CSS and FlexBox and a sniff of Javascript.</p>
<p>While Daybreakers was really fast (the frontend was hosted on Netlify) it wasn\u2019t pre-rendered and with a React App that meant that none of the pages could be indexed. It also took a couple of hundred of milliseconds to get the GraphQL and render it into a page. With this Middleman app it\u2019s back to a few milliseconds for a page load.</p>
<h3 id="${"was-it-worth-it"}"><a href="${"#was-it-worth-it"}">Was it worth it?</a></h3>
<p>I\u2019m not sure yet how I\u2019ll handle creating a photoset while traveling, as I\u2019m back from a really simple drag-and-drop UI to editing Markdown by hand, but realistically this only happens a few days a year and still takes up a lot less time than to maintain Daybreakers.</p>`
  })}`;
});
var _20190127BlogUpdate = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _2019_01_27_blog_update,
  metadata: metadata$1
});
async function load({_page, fetch}) {
  const req = await fetch(`/blog.json`);
  return {props: {posts: await req.json()}};
}
const Blog = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {posts = []} = $$props;
  if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
    $$bindings.posts(posts);
  return `${$$result.head += `<link rel="${"alternate"}" type="${"application/rss+xml"}" title="${"Matsimitsu.com - Robert Beekman - Blog RSS Feed"}" href="${"/feeds/blog.xml"}" data-svelte="svelte-fscrhw">`, ""}

<div class="${"mx-auto container my-24 text-center"}"><h1 class="${"font-extrabold tracking-snug leading-8 text-6xl font-bold text-gray-800 dark:text-gray-200 mb-8"}">Blogposts
	</h1>
	<p class="${"text-lg max-w-xl mx-auto text-gray-600 dark:text-gray-400"}">Stories on problems I encountered while writing code/using products and how I solved them.</p>
	<hr class="${"mx-auto w-64 mt-4 dark:border-gray-600"}"></div>

<div class="${"mx-auto max-w-xl mb-24"}">${each(posts, (post) => `${validate_component(Post, "Post").$$render($$result, {post}, {}, {})}`)}</div>`;
});
var blog = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Blog,
  load
});
const metadata = {
  "title": "The tech I use",
  "subtitle": `Inspired by Wes Bos's project <a href="https://uses.tech" class="c-bold-link">uses.tech</a>, here's a list with my (tech) stack.`,
  "summary": "Inspired by Wes Bos's project uses.tech, this page is about my (tech) stack."
};
const Uses = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex$2, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign(metadata), {}, {
    default: () => `<h1 id="${"tech-used"}"><a href="${"#tech-used"}">Tech used</a></h1>
<p>Inspired by Wes Bos\u2019s project <a href="${"https://uses.tech"}" rel="${"nofollow"}">uses.tech</a>, here\u2019s a list of my (tech) stack.</p>
<h2 id="${"hardware"}"><a href="${"#hardware"}">Hardware</a></h2>
<ul><li><strong><a href="${"https://www.apple.com/macbook-pro-13/"}" rel="${"nofollow"}">Macbook Pro 2020 13\u201D</a>.</strong> One of the worst MacBooks I\u2019ve ever had the pleasure of owning. It gets hot and drains the battery at random moments (nothing in activity monitor). USB-C stops working at random moments (won\u2019t charge, nor detect new devices plugged in) and the touchpad is horrible to use in warm weather/with sweatty hands. I wish I\u2019d never given away my 2013 MacBook Pro 13\u201D.</li>
<li><strong><a href="${"https://www.keychron.com/products/keychron-k1-wireless-mechanical-keyboard"}" rel="${"nofollow"}">Keychron K1</a> keyboard.</strong> A good replacement for the legacy Apple keyboard that stopped working after one too many coffee spills. It\u2019s mechanical, but low profile.</li>
<li><strong><a href="${"https://www.logitechg.com/en-us/products/gaming-mice/g502-hero-gaming-mouse.html"}" rel="${"nofollow"}">Logitech G502</a> mouse.</strong> A gamer mouse with weights you can add\u2026 Don\u2019t really care about that, but it fits nicely in my hand.</li>
<li><strong><a href="${"https://www.lg.com/us/monitors/lg-34wn80c-b-ultrawide-monitor"}" rel="${"nofollow"}">LG 34wn80c</a> curved 34\u201D wide-screen monitor.</strong> Uses USB-C and can charge my MacBook, only one cable is connected to my MacBook and I have power, screen and a USB hub that connects my mouse and keyboard. It has room for many terminal splits which is amazing.</li>
<li><strong><a href="${"https://www.hermanmiller.com/en_eur/products/seating/office-chairs/mirra-2-chairs/"}" rel="${"nofollow"}">Herman Miller Mirra (V1)</a> office chair.</strong> Bought the (refurbished V1\u2019s) from my old job and now have 2, one at home and one at the office. One of the best chairs I\u2019ve owned and they are still as new, while being more than eight years old.</li>
<li><strong><a href="${"https://www.mi.com/in/mi4i/"}" rel="${"nofollow"}">Xiaomi Mi4i</a> phone.</strong> It\u2019s cheap (150 euro\u2019s), it still lasts two days on a single charge after two years and still gets updates, because of Android One.</li>
<li><strong><a href="${"https://www.boundarysupply.com/products/prima-system"}" rel="${"nofollow"}">Boundary Supply Prima System</a> backpack to carry it all.</strong> A nice backpack that has a camera insert for photograpy gear that can be removed if it isn\u2019t needed. Plenty of space for daily groceries and a separate sleeve compartment for the laptop and documents.</li></ul>
<h2 id="${"software"}"><a href="${"#software"}">Software</a></h2>
<ul><li><strong><a href="${"https://code.visualstudio.com"}" rel="${"nofollow"}">VS Code</a> is my text editor of choice.</strong> It all started with <a href="${"https://macromates.com"}" rel="${"nofollow"}">Textmate</a> (first seen by me in the famous <a href="${"https://www.youtube.com/watch?v=Gzj723LkRJY&feature=youtu.be"}" rel="${"nofollow"}">15 minute blog video</a> by DHH and the reason for buying Mac). Next was <a href="${"https://www.sublimetext.com/2"}" rel="${"nofollow"}">Sublime text 2</a> and finally VS code with the <a href="${"https://marketplace.visualstudio.com/items?itemName=PaulOlteanu.theme-railscasts"}" rel="${"nofollow"}">RailsCasts</a> color theme that I\u2019ve been using since Textmate times.</li>
<li><strong><a href="${"https://iterm2.com"}" rel="${"nofollow"}">Iterm2</a>.</strong> The terminal that had tabs before the native OSX terminal had them. Never stopped using it. I use the default zsh \u201Crobbyrussell\u201D theme.</li>
<li><strong><a href="${"https://ia.net/writer"}" rel="${"nofollow"}">iA Writer</a>.</strong> For taking notes in Markdown and writing blogposts / documentation and work/personal todo\u2019s.</li>
<li><strong>Backups go to <a href="${"http://backblaze.com"}" rel="${"nofollow"}">BackBlaze</a>.</strong>. (Raw) photos from my trips, important files etc, all of it goes to Backblaze B2 (their AWS clone, I\u2019m not using the consumer backup service), synced with <a href="${"https://rclone.org"}" rel="${"nofollow"}">Rclone</a>.</li>
<li>For work I mostly have the <a href="${"https://basecamp.com"}" rel="${"nofollow"}">Basecamp</a> and <a href="${"https://slack.com/intl/en-nl/"}" rel="${"nofollow"}">Slack</a> apps open. <a href="${"https://www.whatsapp.com"}" rel="${"nofollow"}">Whatsapp</a> is used for personal communication with friends and family. Other tools used for work are <a href="${"https://www.docker.com"}" rel="${"nofollow"}">Docker</a>, <a href="${"https://www.figma.com"}" rel="${"nofollow"}">Figma</a> and <a href="${"https://mmattozzi.github.io/cocoa-rest-client/"}" rel="${"nofollow"}">CocoaRestClient</a>. Suprisingly how few apps I have on this MacBook now that I think of it.</li></ul>
<h2 id="${"website"}"><a href="${"#website"}">Website</a></h2>
<ul><li><strong><a href="${"https://middlemanapp.com"}" rel="${"nofollow"}">Middleman</a> has been the static site generator for this site for many years now.</strong> Back when it was just released it was a great alternative to <a href="${"https://jekyllrb.com"}" rel="${"nofollow"}">Jekyll</a>. It worked with haml/sass out-of-the-box which was all the rage back then. With version 4 they did away with the built-in asset pipeline in favor of webpack. With this change I\u2019m thinking about switching to <a href="${"http://11ty.dev"}" rel="${"nofollow"}">11ty/Eleventy</a>, since I\u2019m already pulling in hundreds of <code>node_modules</code>, for Webpack/Tailwind etc.</li>
<li><strong>I\u2019m using the <a href="${"http://tailwindcss.com"}" rel="${"nofollow"}">Tailwind</a> CSS framework.</strong> I\u2019m not a designer (and it shows ;)) and Tailwind allows me to make everything look somewhat consistent without a lot of effort.</li>
<li><strong>Speaking about frameworks, <a href="${"http://stimulusjs.org"}" rel="${"nofollow"}">Stimulus</a> powers the few front-end features on this site.</strong> Things such as the lightbox functionality on the travel part of this site.</li>
<li><strong>The only other library used in the front-end right now is <a href="${"http://photoswipe.com"}" rel="${"nofollow"}">Photoswipe</a>.</strong> Called by Stimulus to render the fancy lightbox.</li>
<li><strong>This site is hosted on <a href="${"https://netlify.com"}" rel="${"nofollow"}">Netlify</a>.</strong> A great platform to host your static sites.</li>
<li><strong><a href="${"https://github.com"}" rel="${"nofollow"}">GitHub</a> hosts the code.</strong> You can view the source of this site on <a href="${"https://github.com/matsimitsu/matsimitsu.com"}" rel="${"nofollow"}">github.com/matsimitsu/matsimitsu.com</a>.</li>
<li><strong>I recently implemented webmentions with <a href="${"https://webmention.io"}" rel="${"nofollow"}">webmention.io</a>.</strong> This allows me to show likes for articles and other places where my articles are mentioned.</li>
<li><strong>For the few \u201Cdynamic\u201D parts of this site, I use <a href="${"https://www.netlify.com/products/functions/"}" rel="${"nofollow"}">Netlify functions</a>.</strong> A couple of uses are generating pre-signed AWS upload urls for easy image uploading and a micropub endpoint to publish notes directly from ia Writer.</li>
<li><strong><a href="${"https://aws.amazon.com"}" rel="${"nofollow"}">AWS S3</a> hosts all photos/videos you can see here.</strong> Cached by cloudfront for improved speed (and reduced costs ;)). The very first versions of this site used to contain the images in the GIT repo, but as more travel pages were added, the amount of photos began to grow steadily. With my requirement to use resized images for mobile/tablets, the size began to grow even more. It quickly became aparent, that storing photos in GIT wasn\u2019t working anymore (The amount of photo\u2019s generated is now above 10 Gigabytes). I decided to move the photo\u2019s to S3 to keep the Git repo workable and wrote a Rust binary to resize any image I upload to S3 automatically.</li></ul>`
  })}`;
});
var uses = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Uses,
  metadata
});
export {init, render};
